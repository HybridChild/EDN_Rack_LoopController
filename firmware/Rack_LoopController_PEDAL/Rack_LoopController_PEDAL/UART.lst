   1               		.file	"UART.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	_Z9UART_Initjhh
  12               	_Z9UART_Initjhh:
  13               	.LVL0:
  14               	.LFB1:
  15               		.file 1 "UART.cpp"
   1:UART.cpp      **** /*
   2:UART.cpp      ****  * UART.cpp
   3:UART.cpp      ****  *
   4:UART.cpp      ****  * Created: 26-01-2020 22:13:14
   5:UART.cpp      ****  *  Author: Esben
   6:UART.cpp      ****  */ 
   7:UART.cpp      **** 
   8:UART.cpp      **** #include <avr/io.h>
   9:UART.cpp      **** #include <avr/interrupt.h>
  10:UART.cpp      **** #include <avr/pgmspace.h>
  11:UART.cpp      **** #include <stddef.h>
  12:UART.cpp      **** #include "UART.h"
  13:UART.cpp      **** 
  14:UART.cpp      **** #ifndef F_CPU
  15:UART.cpp      **** #define F_CPU 16000000UL
  16:UART.cpp      **** #endif
  17:UART.cpp      **** 
  18:UART.cpp      **** /* Size of the circular receive/transmit buffers, must be power of 2 */
  19:UART.cpp      **** #define UART_RX_BUFFER_SIZE 64
  20:UART.cpp      **** #define UART_TX_BUFFER_SIZE 64
  21:UART.cpp      **** 
  22:UART.cpp      **** /* size of RX/TX buffers */
  23:UART.cpp      **** #define UART_RX_BUFFER_MASK	( UART_RX_BUFFER_SIZE - 1)
  24:UART.cpp      **** #define UART_TX_BUFFER_MASK	( UART_TX_BUFFER_SIZE - 1)
  25:UART.cpp      **** 
  26:UART.cpp      **** /* module global variables */
  27:UART.cpp      **** static volatile unsigned char UART_TxBuf[UART_TX_BUFFER_SIZE];
  28:UART.cpp      **** static volatile unsigned char UART_RxBuf[UART_RX_BUFFER_SIZE];
  29:UART.cpp      **** static volatile unsigned char UART_TxHead;
  30:UART.cpp      **** static volatile unsigned char UART_TxTail;
  31:UART.cpp      **** static volatile unsigned char UART_RxHead;
  32:UART.cpp      **** static volatile unsigned char UART_RxTail;
  33:UART.cpp      **** static volatile unsigned char UART_LastRxError;
  34:UART.cpp      **** 
  35:UART.cpp      **** 
  36:UART.cpp      **** /*************************************************************************
  37:UART.cpp      **** Function: UART_Init()
  38:UART.cpp      **** Purpose:  initialize UART and set baudrate
  39:UART.cpp      **** Input:    baudrate, stop bits, parity
  40:UART.cpp      **** Returns:  none
  41:UART.cpp      **** **************************************************************************/
  42:UART.cpp      **** void UART_Init(unsigned int baudrate, unsigned char stopbit, unsigned char parity)
  43:UART.cpp      **** {
  16               		.loc 1 43 1 view -0
  17               		.cfi_startproc
  18               		.loc 1 43 1 is_stmt 0 view .LVU1
  19 0000 CF93      		push r28
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 28, -2
  23 0002 DF93      		push r29
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 29, -3
  27               	/* prologue: function */
  28               	/* frame size = 0 */
  29               	/* stack size = 2 */
  30               	.L__stack_usage = 2
  31 0004 D62F      		mov r29,r22
  32 0006 C42F      		mov r28,r20
  44:UART.cpp      **** 	DDRD |= (1 << PORTD1);
  33               		.loc 1 44 2 is_stmt 1 view .LVU2
  34               		.loc 1 44 7 is_stmt 0 view .LVU3
  35 0008 519A      		sbi 0xa,1
  45:UART.cpp      **** 	PORTD |= (1 << PORTD1);
  36               		.loc 1 45 2 is_stmt 1 view .LVU4
  37               		.loc 1 45 8 is_stmt 0 view .LVU5
  38 000a 599A      		sbi 0xb,1
  46:UART.cpp      **** 	
  47:UART.cpp      **** 	UART_TxHead = 0;
  39               		.loc 1 47 2 is_stmt 1 view .LVU6
  40               		.loc 1 47 14 is_stmt 0 view .LVU7
  41 000c 1092 0000 		sts _ZL11UART_TxHead,__zero_reg__
  48:UART.cpp      **** 	UART_TxTail = 0;
  42               		.loc 1 48 2 is_stmt 1 view .LVU8
  43               		.loc 1 48 14 is_stmt 0 view .LVU9
  44 0010 1092 0000 		sts _ZL11UART_TxTail,__zero_reg__
  49:UART.cpp      **** 	UART_RxHead = 0;
  45               		.loc 1 49 2 is_stmt 1 view .LVU10
  46               		.loc 1 49 14 is_stmt 0 view .LVU11
  47 0014 1092 0000 		sts _ZL11UART_RxHead,__zero_reg__
  50:UART.cpp      **** 	UART_RxTail = 0;
  48               		.loc 1 50 2 is_stmt 1 view .LVU12
  49               		.loc 1 50 14 is_stmt 0 view .LVU13
  50 0018 1092 0000 		sts _ZL11UART_RxTail,__zero_reg__
  51:UART.cpp      **** 	
  52:UART.cpp      **** 	baudrate = UART_BAUD_SELECT(baudrate, F_CPU);
  51               		.loc 1 52 2 is_stmt 1 view .LVU14
  52               		.loc 1 52 13 is_stmt 0 view .LVU15
  53 001c B0E0      		ldi r27,0
  54 001e A0E0      		ldi r26,0
  55 0020 9C01      		movw r18,r24
  56 0022 AD01      		movw r20,r26
  57               	.LVL1:
  58               		.loc 1 52 13 view .LVU16
  59 0024 84E0      		ldi r24,4
  60               		1:
  61 0026 220F      		lsl r18
  62 0028 331F      		rol r19
  63 002a 441F      		rol r20
  64 002c 551F      		rol r21
  65 002e 8A95      		dec r24
  66 0030 01F4      		brne 1b
  67               	.LVL2:
  68               		.loc 1 52 13 view .LVU17
  69 0032 60E0      		ldi r22,0
  70 0034 74E2      		ldi r23,lo8(36)
  71 0036 84EF      		ldi r24,lo8(-12)
  72 0038 90E0      		ldi r25,0
  73               	.LVL3:
  74               		.loc 1 52 13 view .LVU18
  75 003a 0E94 0000 		call __udivmodsi4
  76               		.loc 1 52 11 view .LVU19
  77 003e 2150      		subi r18,1
  78 0040 3109      		sbc r19,__zero_reg__
  79               	.LVL4:
  53:UART.cpp      **** 	
  54:UART.cpp      **** 	/*Set baud rate */
  55:UART.cpp      **** 	UBRR0H = (unsigned char)(baudrate >> 8);
  80               		.loc 1 55 2 is_stmt 1 view .LVU20
  81               		.loc 1 55 9 is_stmt 0 view .LVU21
  82 0042 3093 C500 		sts 197,r19
  56:UART.cpp      **** 	UBRR0L = (unsigned char)baudrate;
  83               		.loc 1 56 2 is_stmt 1 view .LVU22
  84               		.loc 1 56 9 is_stmt 0 view .LVU23
  85 0046 2093 C400 		sts 196,r18
  57:UART.cpp      **** 	
  58:UART.cpp      **** 	/* Set USART Mode */
  59:UART.cpp      **** 	UCSR0C &= ~((1 << UMSEL01) | (1 << UMSEL00));		// Asynchronous USART
  86               		.loc 1 59 2 is_stmt 1 view .LVU24
  87               		.loc 1 59 9 is_stmt 0 view .LVU25
  88 004a 8091 C200 		lds r24,194
  89 004e 8F73      		andi r24,lo8(63)
  90 0050 8093 C200 		sts 194,r24
  60:UART.cpp      **** 	
  61:UART.cpp      **** 	/* Set Stop Bit(s) */
  62:UART.cpp      **** 	if (stopbit == UART_2_STOP_BITS)
  91               		.loc 1 62 2 is_stmt 1 view .LVU26
  63:UART.cpp      **** 		UCSR0C |= (1 << USBS0);							// 2 Stop bits
  92               		.loc 1 63 10 is_stmt 0 view .LVU27
  93 0054 8091 C200 		lds r24,194
  62:UART.cpp      **** 		UCSR0C |= (1 << USBS0);							// 2 Stop bits
  94               		.loc 1 62 2 view .LVU28
  95 0058 D230      		cpi r29,lo8(2)
  96 005a 01F4      		brne .L2
  97               		.loc 1 63 3 is_stmt 1 view .LVU29
  98               		.loc 1 63 10 is_stmt 0 view .LVU30
  99 005c 8860      		ori r24,lo8(8)
 100               	.L7:
  64:UART.cpp      **** 	else
  65:UART.cpp      **** 		UCSR0C &= ~(1 << USBS0);						// 1 Stop bit
 101               		.loc 1 65 10 view .LVU31
 102 005e 8093 C200 		sts 194,r24
  66:UART.cpp      **** 
  67:UART.cpp      **** 	/* Set Parity */
  68:UART.cpp      **** 	if (parity == UART_EVEN_PARITY)
 103               		.loc 1 68 2 is_stmt 1 view .LVU32
  69:UART.cpp      **** 	{
  70:UART.cpp      **** 		UCSR0C &= ~(1 << UPM00);
 104               		.loc 1 70 10 is_stmt 0 view .LVU33
 105 0062 8091 C200 		lds r24,194
  68:UART.cpp      **** 	{
 106               		.loc 1 68 2 view .LVU34
 107 0066 C230      		cpi r28,lo8(2)
 108 0068 01F4      		brne .L4
 109               		.loc 1 70 3 is_stmt 1 view .LVU35
 110               		.loc 1 70 10 is_stmt 0 view .LVU36
 111 006a 8F7E      		andi r24,lo8(-17)
 112 006c 8093 C200 		sts 194,r24
  71:UART.cpp      **** 		UCSR0C |= (1 << UPM01);							// Even parity
 113               		.loc 1 71 3 is_stmt 1 view .LVU37
 114               		.loc 1 71 10 is_stmt 0 view .LVU38
 115 0070 8091 C200 		lds r24,194
 116 0074 8062      		ori r24,lo8(32)
 117               	.L8:
  72:UART.cpp      **** 	}
  73:UART.cpp      **** 	else if (parity == UART_ODD_PARITY)
  74:UART.cpp      **** 	{
  75:UART.cpp      **** 		UCSR0C |= ((1 << UPM01) | (1 << UPM00));		// Odd parity
  76:UART.cpp      **** 	}
  77:UART.cpp      **** 	else
  78:UART.cpp      **** 		UCSR0C &= ~((1 << UPM01) | (1 << UPM00));		// No parity
 118               		.loc 1 78 10 view .LVU39
 119 0076 8093 C200 		sts 194,r24
  79:UART.cpp      **** 	
  80:UART.cpp      **** 	/* Set Data Bits */
  81:UART.cpp      **** 	UCSR0C |= ((1 << UCSZ01) | (1 << UCSZ00));			// 8 Data bits
 120               		.loc 1 81 2 is_stmt 1 view .LVU40
 121               		.loc 1 81 9 is_stmt 0 view .LVU41
 122 007a 8091 C200 		lds r24,194
 123 007e 8660      		ori r24,lo8(6)
 124 0080 8093 C200 		sts 194,r24
  82:UART.cpp      **** 
  83:UART.cpp      **** 	/* Enable interrupts */
  84:UART.cpp      **** 	UCSR0B |= ((1 << RXCIE0) | (1 << UDRIE0));
 125               		.loc 1 84 2 is_stmt 1 view .LVU42
 126               		.loc 1 84 9 is_stmt 0 view .LVU43
 127 0084 8091 C100 		lds r24,193
 128 0088 806A      		ori r24,lo8(-96)
 129 008a 8093 C100 		sts 193,r24
  85:UART.cpp      **** 	
  86:UART.cpp      **** 	/*Enable receiver and transmitter */
  87:UART.cpp      **** 	UCSR0B |= ((1 << RXEN0) | (1 << TXEN0));
 130               		.loc 1 87 2 is_stmt 1 view .LVU44
 131               		.loc 1 87 9 is_stmt 0 view .LVU45
 132 008e 8091 C100 		lds r24,193
 133 0092 8861      		ori r24,lo8(24)
 134 0094 8093 C100 		sts 193,r24
 135               	/* epilogue start */
  88:UART.cpp      **** }
 136               		.loc 1 88 1 view .LVU46
 137 0098 DF91      		pop r29
 138               	.LVL5:
 139               		.loc 1 88 1 view .LVU47
 140 009a CF91      		pop r28
 141               	.LVL6:
 142               		.loc 1 88 1 view .LVU48
 143 009c 0895      		ret
 144               	.LVL7:
 145               	.L2:
  65:UART.cpp      **** 
 146               		.loc 1 65 3 is_stmt 1 view .LVU49
  65:UART.cpp      **** 
 147               		.loc 1 65 10 is_stmt 0 view .LVU50
 148 009e 877F      		andi r24,lo8(-9)
 149 00a0 00C0      		rjmp .L7
 150               	.L4:
  73:UART.cpp      **** 	{
 151               		.loc 1 73 7 is_stmt 1 view .LVU51
 152 00a2 C330      		cpi r28,lo8(3)
 153 00a4 01F4      		brne .L6
  75:UART.cpp      **** 	}
 154               		.loc 1 75 3 view .LVU52
  75:UART.cpp      **** 	}
 155               		.loc 1 75 10 is_stmt 0 view .LVU53
 156 00a6 8063      		ori r24,lo8(48)
 157 00a8 00C0      		rjmp .L8
 158               	.L6:
  78:UART.cpp      **** 	
 159               		.loc 1 78 3 is_stmt 1 view .LVU54
  78:UART.cpp      **** 	
 160               		.loc 1 78 10 is_stmt 0 view .LVU55
 161 00aa 8F7C      		andi r24,lo8(-49)
 162 00ac 00C0      		rjmp .L8
 163               		.cfi_endproc
 164               	.LFE1:
 166               	.global	_Z12UART_GetCharv
 168               	_Z12UART_GetCharv:
 169               	.LFB2:
  89:UART.cpp      **** 
  90:UART.cpp      **** 
  91:UART.cpp      **** /*************************************************************************
  92:UART.cpp      **** Function: UART_GetChar()
  93:UART.cpp      **** Purpose:  return byte from ringbuffer  
  94:UART.cpp      **** Returns:  lower byte:  received byte from ringbuffer
  95:UART.cpp      ****           higher byte: last receive error
  96:UART.cpp      **** **************************************************************************/
  97:UART.cpp      **** unsigned int UART_GetChar(void)
  98:UART.cpp      **** {
 170               		.loc 1 98 1 is_stmt 1 view -0
 171               		.cfi_startproc
 172               	/* prologue: function */
 173               	/* frame size = 0 */
 174               	/* stack size = 0 */
 175               	.L__stack_usage = 0
  99:UART.cpp      **** 	unsigned char tmptail;
 176               		.loc 1 99 2 view .LVU57
 100:UART.cpp      **** 	unsigned char data;
 177               		.loc 1 100 2 view .LVU58
 101:UART.cpp      **** 
 102:UART.cpp      **** 	if ( UART_RxHead == UART_RxTail )
 178               		.loc 1 102 2 view .LVU59
 179               		.loc 1 102 19 is_stmt 0 view .LVU60
 180 00ae 9091 0000 		lds r25,_ZL11UART_RxHead
 181 00b2 8091 0000 		lds r24,_ZL11UART_RxTail
 182               		.loc 1 102 2 view .LVU61
 183 00b6 9817      		cp r25,r24
 184 00b8 01F0      		breq .L11
 103:UART.cpp      **** 	{
 104:UART.cpp      **** 		return UART_NO_DATA;   /* no data available */
 105:UART.cpp      **** 	}
 106:UART.cpp      ****     
 107:UART.cpp      **** 	/* calculate /store buffer index */
 108:UART.cpp      **** 	tmptail = (UART_RxTail + 1) & UART_RX_BUFFER_MASK;
 185               		.loc 1 108 2 is_stmt 1 view .LVU62
 186               		.loc 1 108 30 is_stmt 0 view .LVU63
 187 00ba E091 0000 		lds r30,_ZL11UART_RxTail
 188               		.loc 1 108 25 view .LVU64
 189 00be EF5F      		subi r30,lo8(-(1))
 190               		.loc 1 108 10 view .LVU65
 191 00c0 EF73      		andi r30,lo8(63)
 192               	.LVL8:
 109:UART.cpp      **** 	UART_RxTail = tmptail;
 193               		.loc 1 109 2 is_stmt 1 view .LVU66
 194               		.loc 1 109 14 is_stmt 0 view .LVU67
 195 00c2 E093 0000 		sts _ZL11UART_RxTail,r30
 110:UART.cpp      ****     
 111:UART.cpp      **** 	/* get data from receive buffer */
 112:UART.cpp      **** 	data = UART_RxBuf[tmptail];
 196               		.loc 1 112 2 is_stmt 1 view .LVU68
 197               		.loc 1 112 20 is_stmt 0 view .LVU69
 198 00c6 F0E0      		ldi r31,0
 199               		.loc 1 112 7 view .LVU70
 200 00c8 E050      		subi r30,lo8(-(_ZL10UART_RxBuf))
 201 00ca F040      		sbci r31,hi8(-(_ZL10UART_RxBuf))
 202               	.LVL9:
 203               		.loc 1 112 7 view .LVU71
 204 00cc 2081      		ld r18,Z
 205               	.LVL10:
 113:UART.cpp      ****     
 114:UART.cpp      **** 	return (UART_LastRxError << 8) + data;
 206               		.loc 1 114 2 is_stmt 1 view .LVU72
 207               		.loc 1 114 10 is_stmt 0 view .LVU73
 208 00ce 8091 0000 		lds r24,_ZL16UART_LastRxError
 209 00d2 90E0      		ldi r25,0
 210               		.loc 1 114 27 view .LVU74
 211 00d4 982F      		mov r25,r24
 212 00d6 8827      		clr r24
 213               		.loc 1 114 33 view .LVU75
 214 00d8 820F      		add r24,r18
 215 00da 911D      		adc r25,__zero_reg__
 216               		.loc 1 114 35 view .LVU76
 217 00dc 0895      		ret
 218               	.LVL11:
 219               	.L11:
 104:UART.cpp      **** 	}
 220               		.loc 1 104 10 view .LVU77
 221 00de 80E0      		ldi r24,0
 222 00e0 91E0      		ldi r25,lo8(1)
 223               	/* epilogue start */
 115:UART.cpp      **** }
 224               		.loc 1 115 1 view .LVU78
 225 00e2 0895      		ret
 226               		.cfi_endproc
 227               	.LFE2:
 229               	.global	_Z12UART_PutCharh
 231               	_Z12UART_PutCharh:
 232               	.LVL12:
 233               	.LFB3:
 116:UART.cpp      **** 
 117:UART.cpp      **** 
 118:UART.cpp      **** /*************************************************************************
 119:UART.cpp      **** Function: UART_PutChar()
 120:UART.cpp      **** Purpose:  write byte to ringbuffer for transmitting via UART
 121:UART.cpp      **** Input:    byte to be transmitted
 122:UART.cpp      **** Returns:  none
 123:UART.cpp      **** **************************************************************************/
 124:UART.cpp      **** void UART_PutChar(unsigned char data)
 125:UART.cpp      **** {
 234               		.loc 1 125 1 is_stmt 1 view -0
 235               		.cfi_startproc
 236               	/* prologue: function */
 237               	/* frame size = 0 */
 238               	/* stack size = 0 */
 239               	.L__stack_usage = 0
 126:UART.cpp      **** 	unsigned char tmphead;
 240               		.loc 1 126 2 view .LVU80
 127:UART.cpp      ****     
 128:UART.cpp      **** 	/* calculate buffer index */
 129:UART.cpp      **** 	tmphead  = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
 241               		.loc 1 129 2 view .LVU81
 242               		.loc 1 129 31 is_stmt 0 view .LVU82
 243 00e4 9091 0000 		lds r25,_ZL11UART_TxHead
 244               		.loc 1 129 26 view .LVU83
 245 00e8 9F5F      		subi r25,lo8(-(1))
 246               		.loc 1 129 11 view .LVU84
 247 00ea 9F73      		andi r25,lo8(63)
 248               	.LVL13:
 249               	.L13:
 130:UART.cpp      ****     
 131:UART.cpp      **** 	/* wait for free space in buffer */
 132:UART.cpp      **** 	while ( tmphead == UART_TxTail );
 250               		.loc 1 132 2 is_stmt 1 view .LVU85
 251               		.loc 1 132 18 view .LVU86
 252 00ec 2091 0000 		lds r18,_ZL11UART_TxTail
 253 00f0 2917      		cp r18,r25
 254 00f2 01F0      		breq .L13
 133:UART.cpp      ****     
 134:UART.cpp      **** 	UART_TxBuf[tmphead] = data;
 255               		.loc 1 134 2 view .LVU87
 256               		.loc 1 134 13 is_stmt 0 view .LVU88
 257 00f4 E92F      		mov r30,r25
 258 00f6 F0E0      		ldi r31,0
 259               		.loc 1 134 22 view .LVU89
 260 00f8 E050      		subi r30,lo8(-(_ZL10UART_TxBuf))
 261 00fa F040      		sbci r31,hi8(-(_ZL10UART_TxBuf))
 262 00fc 8083      		st Z,r24
 135:UART.cpp      **** 	UART_TxHead = tmphead;
 263               		.loc 1 135 2 is_stmt 1 view .LVU90
 264               		.loc 1 135 14 is_stmt 0 view .LVU91
 265 00fe 9093 0000 		sts _ZL11UART_TxHead,r25
 136:UART.cpp      **** 
 137:UART.cpp      **** 	/* enable UDRE interrupt */
 138:UART.cpp      **** 	UCSR0B |= (1 << UDRIE0);
 266               		.loc 1 138 2 is_stmt 1 view .LVU92
 267               		.loc 1 138 9 is_stmt 0 view .LVU93
 268 0102 8091 C100 		lds r24,193
 269               	.LVL14:
 270               		.loc 1 138 9 view .LVU94
 271 0106 8062      		ori r24,lo8(32)
 272 0108 8093 C100 		sts 193,r24
 273               	/* epilogue start */
 139:UART.cpp      **** }
 274               		.loc 1 139 1 view .LVU95
 275 010c 0895      		ret
 276               		.cfi_endproc
 277               	.LFE3:
 279               	.global	_Z14UART_PutStringPKc
 281               	_Z14UART_PutStringPKc:
 282               	.LVL15:
 283               	.LFB4:
 140:UART.cpp      **** 
 141:UART.cpp      **** 
 142:UART.cpp      **** /*************************************************************************
 143:UART.cpp      **** Function: UART_PutString()
 144:UART.cpp      **** Purpose:  transmit string to UART
 145:UART.cpp      **** Input:    string to be transmitted
 146:UART.cpp      **** Returns:  none
 147:UART.cpp      **** **************************************************************************/
 148:UART.cpp      **** void UART_PutString(const char *s )
 149:UART.cpp      **** {
 284               		.loc 1 149 1 is_stmt 1 view -0
 285               		.cfi_startproc
 286               		.loc 1 149 1 is_stmt 0 view .LVU97
 287 010e CF93      		push r28
 288               	.LCFI2:
 289               		.cfi_def_cfa_offset 3
 290               		.cfi_offset 28, -2
 291 0110 DF93      		push r29
 292               	.LCFI3:
 293               		.cfi_def_cfa_offset 4
 294               		.cfi_offset 29, -3
 295               	/* prologue: function */
 296               	/* frame size = 0 */
 297               	/* stack size = 2 */
 298               	.L__stack_usage = 2
 299 0112 EC01      		movw r28,r24
 300               	.LVL16:
 301               	.L17:
 150:UART.cpp      ****     while (*s)
 302               		.loc 1 150 5 is_stmt 1 view .LVU98
 303               		.loc 1 150 12 view .LVU99
 304 0114 8991      		ld r24,Y+
 305               	.LVL17:
 306               		.loc 1 150 12 is_stmt 0 view .LVU100
 307 0116 8823      		tst r24
 308 0118 01F0      		breq .L15
 151:UART.cpp      **** 	{
 152:UART.cpp      **** 		UART_PutChar(*s++);
 309               		.loc 1 152 3 is_stmt 1 view .LVU101
 310               	.LVL18:
 311               		.loc 1 152 15 is_stmt 0 view .LVU102
 312 011a 0E94 0000 		call _Z12UART_PutCharh
 313               	.LVL19:
 150:UART.cpp      ****     while (*s)
 314               		.loc 1 150 5 view .LVU103
 315 011e 00C0      		rjmp .L17
 316               	.LVL20:
 317               	.L15:
 318               	/* epilogue start */
 153:UART.cpp      **** 	}
 154:UART.cpp      **** }
 319               		.loc 1 154 1 view .LVU104
 320 0120 DF91      		pop r29
 321 0122 CF91      		pop r28
 322               	.LVL21:
 323               		.loc 1 154 1 view .LVU105
 324 0124 0895      		ret
 325               		.cfi_endproc
 326               	.LFE4:
 328               	.global	_Z16UART_PutString_pPKc
 330               	_Z16UART_PutString_pPKc:
 331               	.LVL22:
 332               	.LFB5:
 155:UART.cpp      **** 
 156:UART.cpp      **** 
 157:UART.cpp      **** /*************************************************************************
 158:UART.cpp      **** Function: UART_PutString_p()
 159:UART.cpp      **** Purpose:  transmit string from program memory to UART
 160:UART.cpp      **** Input:    program memory string to be transmitted
 161:UART.cpp      **** Returns:  none
 162:UART.cpp      **** **************************************************************************/
 163:UART.cpp      **** void UART_PutString_p(const char *progmem_s )
 164:UART.cpp      **** {
 333               		.loc 1 164 1 is_stmt 1 view -0
 334               		.cfi_startproc
 335               		.loc 1 164 1 is_stmt 0 view .LVU107
 336 0126 CF93      		push r28
 337               	.LCFI4:
 338               		.cfi_def_cfa_offset 3
 339               		.cfi_offset 28, -2
 340 0128 DF93      		push r29
 341               	.LCFI5:
 342               		.cfi_def_cfa_offset 4
 343               		.cfi_offset 29, -3
 344               	/* prologue: function */
 345               	/* frame size = 0 */
 346               	/* stack size = 2 */
 347               	.L__stack_usage = 2
 348 012a EC01      		movw r28,r24
 349               	.LVL23:
 350               	.L20:
 165:UART.cpp      **** 	register char c;
 351               		.loc 1 165 2 is_stmt 1 view .LVU108
 166:UART.cpp      ****     
 167:UART.cpp      **** 	while ( (c = pgm_read_byte(progmem_s++)) )
 352               		.loc 1 167 2 view .LVU109
 353               		.loc 1 167 13 view .LVU110
 354               	.LBB2:
 355               		.loc 1 167 15 view .LVU111
 356               		.loc 1 167 15 view .LVU112
 357               		.loc 1 167 15 view .LVU113
 358 012c FE01      		movw r30,r28
 359               	/* #APP */
 360               	 ;  167 "UART.cpp" 1
 361 012e 8491      		lpm r24, Z
 362               		
 363               	 ;  0 "" 2
 364               	.LVL24:
 365               		.loc 1 167 15 view .LVU114
 366               		.loc 1 167 15 is_stmt 0 view .LVU115
 367               	/* #NOAPP */
 368               	.LBE2:
 369               		.loc 1 167 13 view .LVU116
 370 0130 2196      		adiw r28,1
 371               	.LVL25:
 372               		.loc 1 167 13 view .LVU117
 373 0132 8823      		tst r24
 374 0134 01F0      		breq .L18
 375               	.LBB3:
 168:UART.cpp      **** 	{
 169:UART.cpp      **** 		UART_PutChar(c);
 376               		.loc 1 169 3 is_stmt 1 view .LVU118
 377               		.loc 1 169 15 is_stmt 0 view .LVU119
 378 0136 0E94 0000 		call _Z12UART_PutCharh
 379               	.LVL26:
 380               		.loc 1 169 15 view .LVU120
 381               	.LBE3:
 167:UART.cpp      **** 	{
 382               		.loc 1 167 2 view .LVU121
 383 013a 00C0      		rjmp .L20
 384               	.LVL27:
 385               	.L18:
 386               	/* epilogue start */
 170:UART.cpp      **** 	}
 171:UART.cpp      **** }
 387               		.loc 1 171 1 view .LVU122
 388 013c DF91      		pop r29
 389 013e CF91      		pop r28
 390               	.LVL28:
 391               		.loc 1 171 1 view .LVU123
 392 0140 0895      		ret
 393               		.cfi_endproc
 394               	.LFE5:
 396               	.global	_Z16UART_RxAvailablev
 398               	_Z16UART_RxAvailablev:
 399               	.LFB6:
 172:UART.cpp      **** 
 173:UART.cpp      **** 
 174:UART.cpp      **** /*************************************************************************
 175:UART.cpp      **** Function: UART_RxAvailable()
 176:UART.cpp      **** Purpose:  Determine the number of bytes waiting in the receive buffer
 177:UART.cpp      **** Input:    None
 178:UART.cpp      **** Returns:  Boolean, false if buffer is empty
 179:UART.cpp      **** **************************************************************************/
 180:UART.cpp      **** bool UART_RxAvailable(void)
 181:UART.cpp      **** {
 400               		.loc 1 181 1 is_stmt 1 view -0
 401               		.cfi_startproc
 402               	/* prologue: function */
 403               	/* frame size = 0 */
 404               	/* stack size = 0 */
 405               	.L__stack_usage = 0
 182:UART.cpp      **** 	return (UART_RxHead != UART_RxTail);
 406               		.loc 1 182 2 view .LVU125
 407               		.loc 1 182 22 is_stmt 0 view .LVU126
 408 0142 2091 0000 		lds r18,_ZL11UART_RxHead
 409 0146 9091 0000 		lds r25,_ZL11UART_RxTail
 410               		.loc 1 182 36 view .LVU127
 411 014a 81E0      		ldi r24,lo8(1)
 412 014c 2913      		cpse r18,r25
 413 014e 00C0      		rjmp .L22
 414 0150 80E0      		ldi r24,0
 415               	.L22:
 416               	/* epilogue start */
 183:UART.cpp      **** }
 417               		.loc 1 183 1 view .LVU128
 418 0152 0895      		ret
 419               		.cfi_endproc
 420               	.LFE6:
 422               	.global	_Z16UART_TxAvailablev
 424               	_Z16UART_TxAvailablev:
 425               	.LFB7:
 184:UART.cpp      **** 
 185:UART.cpp      **** bool UART_TxAvailable(void)
 186:UART.cpp      **** {
 426               		.loc 1 186 1 is_stmt 1 view -0
 427               		.cfi_startproc
 428               	/* prologue: function */
 429               	/* frame size = 0 */
 430               	/* stack size = 0 */
 431               	.L__stack_usage = 0
 187:UART.cpp      **** 	return (UART_TxHead != UART_TxTail);
 432               		.loc 1 187 2 view .LVU130
 433               		.loc 1 187 22 is_stmt 0 view .LVU131
 434 0154 2091 0000 		lds r18,_ZL11UART_TxHead
 435 0158 9091 0000 		lds r25,_ZL11UART_TxTail
 436               		.loc 1 187 36 view .LVU132
 437 015c 81E0      		ldi r24,lo8(1)
 438 015e 2913      		cpse r18,r25
 439 0160 00C0      		rjmp .L24
 440 0162 80E0      		ldi r24,0
 441               	.L24:
 442               	/* epilogue start */
 188:UART.cpp      **** }
 443               		.loc 1 188 1 view .LVU133
 444 0164 0895      		ret
 445               		.cfi_endproc
 446               	.LFE7:
 448               	.global	_Z11UART0_Flushv
 450               	_Z11UART0_Flushv:
 451               	.LFB8:
 189:UART.cpp      **** 
 190:UART.cpp      **** /*************************************************************************
 191:UART.cpp      **** Function: UART_Flush()
 192:UART.cpp      **** Purpose:  Flush bytes waiting the receive buffer. Acutally ignores them.
 193:UART.cpp      **** Input:    None
 194:UART.cpp      **** Returns:  None
 195:UART.cpp      **** **************************************************************************/
 196:UART.cpp      **** void UART0_Flush(void)
 197:UART.cpp      **** {
 452               		.loc 1 197 1 is_stmt 1 view -0
 453               		.cfi_startproc
 454               	/* prologue: function */
 455               	/* frame size = 0 */
 456               	/* stack size = 0 */
 457               	.L__stack_usage = 0
 198:UART.cpp      **** 	UART_RxHead = UART_RxTail;
 458               		.loc 1 198 2 view .LVU135
 459               		.loc 1 198 14 is_stmt 0 view .LVU136
 460 0166 8091 0000 		lds r24,_ZL11UART_RxTail
 461 016a 8093 0000 		sts _ZL11UART_RxHead,r24
 462               	/* epilogue start */
 199:UART.cpp      **** }
 463               		.loc 1 199 1 view .LVU137
 464 016e 0895      		ret
 465               		.cfi_endproc
 466               	.LFE8:
 468               	.global	_Z14UART_QueueCharh
 470               	_Z14UART_QueueCharh:
 471               	.LVL29:
 472               	.LFB9:
 200:UART.cpp      **** 
 201:UART.cpp      **** 
 202:UART.cpp      **** int	UART_QueueChar(unsigned char data)
 203:UART.cpp      **** {
 473               		.loc 1 203 1 is_stmt 1 view -0
 474               		.cfi_startproc
 475               	/* prologue: function */
 476               	/* frame size = 0 */
 477               	/* stack size = 0 */
 478               	.L__stack_usage = 0
 204:UART.cpp      **** 	unsigned char tmphead;
 479               		.loc 1 204 2 view .LVU139
 205:UART.cpp      **** 	
 206:UART.cpp      **** 	/* calculate buffer index */
 207:UART.cpp      **** 	tmphead = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
 480               		.loc 1 207 2 view .LVU140
 481               		.loc 1 207 30 is_stmt 0 view .LVU141
 482 0170 9091 0000 		lds r25,_ZL11UART_TxHead
 483               		.loc 1 207 25 view .LVU142
 484 0174 9F5F      		subi r25,lo8(-(1))
 485               		.loc 1 207 10 view .LVU143
 486 0176 9F73      		andi r25,lo8(63)
 487               	.LVL30:
 208:UART.cpp      **** 	
 209:UART.cpp      **** 	/* check for free space in buffer */
 210:UART.cpp      **** 	if ( tmphead == UART_TxTail )
 488               		.loc 1 210 2 is_stmt 1 view .LVU144
 489               		.loc 1 210 15 is_stmt 0 view .LVU145
 490 0178 2091 0000 		lds r18,_ZL11UART_TxTail
 491               		.loc 1 210 2 view .LVU146
 492 017c 2917      		cp r18,r25
 493 017e 01F0      		breq .L28
 211:UART.cpp      **** 		return 0;
 212:UART.cpp      **** 	
 213:UART.cpp      **** 	UART_TxBuf[tmphead] = data;
 494               		.loc 1 213 2 is_stmt 1 view .LVU147
 495               		.loc 1 213 13 is_stmt 0 view .LVU148
 496 0180 E92F      		mov r30,r25
 497 0182 F0E0      		ldi r31,0
 498               		.loc 1 213 22 view .LVU149
 499 0184 E050      		subi r30,lo8(-(_ZL10UART_TxBuf))
 500 0186 F040      		sbci r31,hi8(-(_ZL10UART_TxBuf))
 501 0188 8083      		st Z,r24
 214:UART.cpp      **** 	UART_TxHead = tmphead;
 502               		.loc 1 214 2 is_stmt 1 view .LVU150
 503               		.loc 1 214 14 is_stmt 0 view .LVU151
 504 018a 9093 0000 		sts _ZL11UART_TxHead,r25
 215:UART.cpp      **** 	
 216:UART.cpp      **** 	return 1;
 505               		.loc 1 216 2 is_stmt 1 view .LVU152
 506               		.loc 1 216 9 is_stmt 0 view .LVU153
 507 018e 81E0      		ldi r24,lo8(1)
 508 0190 90E0      		ldi r25,0
 509               	.LVL31:
 510               		.loc 1 216 9 view .LVU154
 511 0192 0895      		ret
 512               	.LVL32:
 513               	.L28:
 211:UART.cpp      **** 	
 514               		.loc 1 211 10 view .LVU155
 515 0194 90E0      		ldi r25,0
 516               	.LVL33:
 211:UART.cpp      **** 	
 517               		.loc 1 211 10 view .LVU156
 518 0196 80E0      		ldi r24,0
 519               	.LVL34:
 520               	/* epilogue start */
 217:UART.cpp      **** }
 521               		.loc 1 217 1 view .LVU157
 522 0198 0895      		ret
 523               		.cfi_endproc
 524               	.LFE9:
 526               	.global	_Z15UART_QueueArrayPKch
 528               	_Z15UART_QueueArrayPKch:
 529               	.LVL35:
 530               	.LFB10:
 218:UART.cpp      **** 
 219:UART.cpp      **** 
 220:UART.cpp      **** void UART_QueueArray(const char *array, unsigned char length)
 221:UART.cpp      **** {
 531               		.loc 1 221 1 is_stmt 1 view -0
 532               		.cfi_startproc
 533               		.loc 1 221 1 is_stmt 0 view .LVU159
 534 019a 0F93      		push r16
 535               	.LCFI6:
 536               		.cfi_def_cfa_offset 3
 537               		.cfi_offset 16, -2
 538 019c 1F93      		push r17
 539               	.LCFI7:
 540               		.cfi_def_cfa_offset 4
 541               		.cfi_offset 17, -3
 542 019e CF93      		push r28
 543               	.LCFI8:
 544               		.cfi_def_cfa_offset 5
 545               		.cfi_offset 28, -4
 546 01a0 DF93      		push r29
 547               	.LCFI9:
 548               		.cfi_def_cfa_offset 6
 549               		.cfi_offset 29, -5
 550               	/* prologue: function */
 551               	/* frame size = 0 */
 552               	/* stack size = 4 */
 553               	.L__stack_usage = 4
 222:UART.cpp      **** 	unsigned char i = 0;
 554               		.loc 1 222 2 is_stmt 1 view .LVU160
 555               	.LVL36:
 223:UART.cpp      **** 	
 224:UART.cpp      **** 	for (i = 0; i < length; i++)
 556               		.loc 1 224 2 view .LVU161
 557               		.loc 1 224 2 is_stmt 0 view .LVU162
 558 01a2 EC01      		movw r28,r24
 559 01a4 8C01      		movw r16,r24
 560 01a6 060F      		add r16,r22
 561 01a8 111D      		adc r17,__zero_reg__
 562               	.LVL37:
 563               	.L31:
 564               		.loc 1 224 16 is_stmt 1 discriminator 3 view .LVU163
 565 01aa C017      		cp r28,r16
 566 01ac D107      		cpc r29,r17
 567 01ae 01F0      		breq .L29
 225:UART.cpp      **** 	{
 226:UART.cpp      **** 		UART_QueueChar(array[i]);
 568               		.loc 1 226 3 discriminator 2 view .LVU164
 569               		.loc 1 226 17 is_stmt 0 discriminator 2 view .LVU165
 570 01b0 8991      		ld r24,Y+
 571               	.LVL38:
 572               		.loc 1 226 17 discriminator 2 view .LVU166
 573 01b2 0E94 0000 		call _Z14UART_QueueCharh
 574               	.LVL39:
 224:UART.cpp      **** 	{
 575               		.loc 1 224 2 is_stmt 1 discriminator 2 view .LVU167
 224:UART.cpp      **** 	{
 576               		.loc 1 224 2 is_stmt 0 discriminator 2 view .LVU168
 577 01b6 00C0      		rjmp .L31
 578               	.L29:
 579               	/* epilogue start */
 227:UART.cpp      **** 	}
 228:UART.cpp      **** }
 580               		.loc 1 228 1 view .LVU169
 581 01b8 DF91      		pop r29
 582 01ba CF91      		pop r28
 583               	.LVL40:
 584               		.loc 1 228 1 view .LVU170
 585 01bc 1F91      		pop r17
 586 01be 0F91      		pop r16
 587 01c0 0895      		ret
 588               		.cfi_endproc
 589               	.LFE10:
 591               	.global	_Z13UART_PutQueuev
 593               	_Z13UART_PutQueuev:
 594               	.LFB11:
 229:UART.cpp      **** 
 230:UART.cpp      **** 
 231:UART.cpp      **** void UART_PutQueue(void)
 232:UART.cpp      **** {
 595               		.loc 1 232 1 is_stmt 1 view -0
 596               		.cfi_startproc
 597               	/* prologue: function */
 598               	/* frame size = 0 */
 599               	/* stack size = 0 */
 600               	.L__stack_usage = 0
 233:UART.cpp      **** 	/* enable UDRE interrupt */
 234:UART.cpp      **** 	UCSR0B |= (1 << UDRIE0);
 601               		.loc 1 234 2 view .LVU172
 602               		.loc 1 234 9 is_stmt 0 view .LVU173
 603 01c2 E1EC      		ldi r30,lo8(-63)
 604 01c4 F0E0      		ldi r31,0
 605 01c6 8081      		ld r24,Z
 606 01c8 8062      		ori r24,lo8(32)
 607 01ca 8083      		st Z,r24
 608               	/* epilogue start */
 235:UART.cpp      **** }
 609               		.loc 1 235 1 view .LVU174
 610 01cc 0895      		ret
 611               		.cfi_endproc
 612               	.LFE11:
 614               	.global	_Z17UART_QueueIsEmptyv
 616               	_Z17UART_QueueIsEmptyv:
 617               	.LFB12:
 236:UART.cpp      **** 
 237:UART.cpp      **** bool UART_QueueIsEmpty(void)
 238:UART.cpp      **** {
 618               		.loc 1 238 1 is_stmt 1 view -0
 619               		.cfi_startproc
 620               	/* prologue: function */
 621               	/* frame size = 0 */
 622               	/* stack size = 0 */
 623               	.L__stack_usage = 0
 239:UART.cpp      **** 	return (UART_TxHead == UART_TxTail);
 624               		.loc 1 239 2 view .LVU176
 625               		.loc 1 239 22 is_stmt 0 view .LVU177
 626 01ce 2091 0000 		lds r18,_ZL11UART_TxHead
 627 01d2 9091 0000 		lds r25,_ZL11UART_TxTail
 628               		.loc 1 239 36 view .LVU178
 629 01d6 81E0      		ldi r24,lo8(1)
 630 01d8 2913      		cpse r18,r25
 631 01da 80E0      		ldi r24,0
 632               	.L34:
 633               	/* epilogue start */
 240:UART.cpp      **** }
 634               		.loc 1 240 1 view .LVU179
 635 01dc 0895      		ret
 636               		.cfi_endproc
 637               	.LFE12:
 639               	.global	__vector_18
 641               	__vector_18:
 642               	.LFB13:
 241:UART.cpp      **** 
 242:UART.cpp      **** 
 243:UART.cpp      **** /*************************************************************************
 244:UART.cpp      **** Function: UART0 Receive Complete interrupt
 245:UART.cpp      **** Purpose:  called when the UART has received a character
 246:UART.cpp      **** **************************************************************************/
 247:UART.cpp      **** ISR(USART_RX_vect)
 248:UART.cpp      **** {
 643               		.loc 1 248 1 is_stmt 1 view -0
 644               		.cfi_startproc
 645 01de 2F93 2FB7 		__gcc_isr 1
 645      2F93 
 646 01e4 8F93      		push r24
 647               	.LCFI10:
 648               		.cfi_def_cfa_offset 3
 649               		.cfi_offset 24, -2
 650 01e6 9F93      		push r25
 651               	.LCFI11:
 652               		.cfi_def_cfa_offset 4
 653               		.cfi_offset 25, -3
 654 01e8 EF93      		push r30
 655               	.LCFI12:
 656               		.cfi_def_cfa_offset 5
 657               		.cfi_offset 30, -4
 658 01ea FF93      		push r31
 659               	.LCFI13:
 660               		.cfi_def_cfa_offset 6
 661               		.cfi_offset 31, -5
 662               	/* prologue: Signal */
 663               	/* frame size = 0 */
 664               	/* stack size = 4...8 */
 665               	.L__stack_usage = 4 + __gcc_isr.n_pushed
 249:UART.cpp      **** 	unsigned char tmphead;
 666               		.loc 1 249 2 view .LVU181
 250:UART.cpp      **** 	unsigned char data;
 667               		.loc 1 250 2 view .LVU182
 251:UART.cpp      **** 	unsigned char usr;
 668               		.loc 1 251 2 view .LVU183
 252:UART.cpp      **** 	unsigned char lastRxError;
 669               		.loc 1 252 2 view .LVU184
 253:UART.cpp      ****     
 254:UART.cpp      ****     
 255:UART.cpp      **** 	/* read UART status register and UART data register */
 256:UART.cpp      **** 	usr  = UCSR0A;
 670               		.loc 1 256 2 view .LVU185
 671               		.loc 1 256 7 is_stmt 0 view .LVU186
 672 01ec 8091 C000 		lds r24,192
 673               	.LVL41:
 257:UART.cpp      **** 	data = UDR0;
 674               		.loc 1 257 2 is_stmt 1 view .LVU187
 675               		.loc 1 257 7 is_stmt 0 view .LVU188
 676 01f0 9091 C600 		lds r25,198
 677               	.LVL42:
 258:UART.cpp      ****     
 259:UART.cpp      **** 	/* */
 260:UART.cpp      **** 	lastRxError = (usr & (FE0 | DOR0));
 678               		.loc 1 260 2 is_stmt 1 view .LVU189
 261:UART.cpp      ****     
 262:UART.cpp      **** 	/* calculate buffer index */
 263:UART.cpp      **** 	tmphead = ( UART_RxHead + 1) & UART_RX_BUFFER_MASK;
 679               		.loc 1 263 2 view .LVU190
 680               		.loc 1 263 31 is_stmt 0 view .LVU191
 681 01f4 E091 0000 		lds r30,_ZL11UART_RxHead
 682               		.loc 1 263 26 view .LVU192
 683 01f8 EF5F      		subi r30,lo8(-(1))
 684               		.loc 1 263 10 view .LVU193
 685 01fa EF73      		andi r30,lo8(63)
 686               	.LVL43:
 264:UART.cpp      ****     
 265:UART.cpp      **** 	if ( tmphead == UART_RxTail )
 687               		.loc 1 265 2 is_stmt 1 view .LVU194
 688               		.loc 1 265 15 is_stmt 0 view .LVU195
 689 01fc 2091 0000 		lds r18,_ZL11UART_RxTail
 690               		.loc 1 265 2 view .LVU196
 691 0200 2E17      		cp r18,r30
 692 0202 01F0      		breq .L37
 260:UART.cpp      ****     
 693               		.loc 1 260 14 view .LVU197
 694 0204 8770      		andi r24,lo8(7)
 695               	.LVL44:
 266:UART.cpp      **** 	{
 267:UART.cpp      **** 		/* error: receive buffer overflow */
 268:UART.cpp      **** 		lastRxError = UART_BUFFER_OVERFLOW >> 8;
 269:UART.cpp      **** 	}
 270:UART.cpp      **** 	else
 271:UART.cpp      **** 	{
 272:UART.cpp      **** 		/* store new index */
 273:UART.cpp      **** 		UART_RxHead = tmphead;
 696               		.loc 1 273 3 is_stmt 1 view .LVU198
 697               		.loc 1 273 15 is_stmt 0 view .LVU199
 698 0206 E093 0000 		sts _ZL11UART_RxHead,r30
 274:UART.cpp      **** 		/* store received data in buffer */
 275:UART.cpp      **** 		UART_RxBuf[tmphead] = data;
 699               		.loc 1 275 3 is_stmt 1 view .LVU200
 700               		.loc 1 275 14 is_stmt 0 view .LVU201
 701 020a F0E0      		ldi r31,0
 702               		.loc 1 275 23 view .LVU202
 703 020c E050      		subi r30,lo8(-(_ZL10UART_RxBuf))
 704 020e F040      		sbci r31,hi8(-(_ZL10UART_RxBuf))
 705               	.LVL45:
 706               		.loc 1 275 23 view .LVU203
 707 0210 9083      		st Z,r25
 708               	.LVL46:
 709               	.L36:
 276:UART.cpp      **** 	}
 277:UART.cpp      **** 
 278:UART.cpp      **** 	UART_LastRxError = lastRxError;
 710               		.loc 1 278 2 is_stmt 1 view .LVU204
 711               		.loc 1 278 19 is_stmt 0 view .LVU205
 712 0212 8093 0000 		sts _ZL16UART_LastRxError,r24
 713               	/* epilogue start */
 279:UART.cpp      **** }
 714               		.loc 1 279 1 view .LVU206
 715 0216 FF91      		pop r31
 716 0218 EF91      		pop r30
 717 021a 9F91      		pop r25
 718               	.LVL47:
 719               		.loc 1 279 1 view .LVU207
 720 021c 8F91      		pop r24
 721               	.LVL48:
 722               		.loc 1 279 1 view .LVU208
 723 021e 2F91 2FBF 		__gcc_isr 2
 723      2F91 
 724 0224 1895      		reti
 725               	.LVL49:
 726               	.L37:
 268:UART.cpp      **** 	}
 727               		.loc 1 268 15 view .LVU209
 728 0226 82E0      		ldi r24,lo8(2)
 729               	.LVL50:
 268:UART.cpp      **** 	}
 730               		.loc 1 268 15 view .LVU210
 731 0228 00C0      		rjmp .L36
 732               		__gcc_isr 0,r18
 733               		.cfi_endproc
 734               	.LFE13:
 736               	.global	__vector_19
 738               	__vector_19:
 739               	.LFB14:
 280:UART.cpp      **** 
 281:UART.cpp      **** 
 282:UART.cpp      **** /*************************************************************************
 283:UART.cpp      **** Function: UART Data Register Empty interrupt
 284:UART.cpp      **** Purpose:  called when the UART is ready to transmit the next byte
 285:UART.cpp      **** **************************************************************************/
 286:UART.cpp      **** ISR(USART_UDRE_vect)
 287:UART.cpp      **** {
 740               		.loc 1 287 1 is_stmt 1 view -0
 741               		.cfi_startproc
 742 022a 8F93 8FB7 		__gcc_isr 1
 742      8F93 
 743 0230 9F93      		push r25
 744               	.LCFI14:
 745               		.cfi_def_cfa_offset 3
 746               		.cfi_offset 25, -2
 747 0232 EF93      		push r30
 748               	.LCFI15:
 749               		.cfi_def_cfa_offset 4
 750               		.cfi_offset 30, -3
 751 0234 FF93      		push r31
 752               	.LCFI16:
 753               		.cfi_def_cfa_offset 5
 754               		.cfi_offset 31, -4
 755               	/* prologue: Signal */
 756               	/* frame size = 0 */
 757               	/* stack size = 3...7 */
 758               	.L__stack_usage = 3 + __gcc_isr.n_pushed
 288:UART.cpp      **** 	unsigned char tmptail;
 759               		.loc 1 288 2 view .LVU212
 289:UART.cpp      ****     
 290:UART.cpp      **** 	if ( UART_TxHead != UART_TxTail)
 760               		.loc 1 290 2 view .LVU213
 761               		.loc 1 290 19 is_stmt 0 view .LVU214
 762 0236 9091 0000 		lds r25,_ZL11UART_TxHead
 763 023a 8091 0000 		lds r24,_ZL11UART_TxTail
 764               		.loc 1 290 2 view .LVU215
 765 023e 9817      		cp r25,r24
 766 0240 01F0      		breq .L39
 291:UART.cpp      **** 	{
 292:UART.cpp      **** 		/* calculate and store new buffer index */
 293:UART.cpp      **** 		tmptail = (UART_TxTail + 1) & UART_TX_BUFFER_MASK;
 767               		.loc 1 293 3 is_stmt 1 view .LVU216
 768               		.loc 1 293 31 is_stmt 0 view .LVU217
 769 0242 E091 0000 		lds r30,_ZL11UART_TxTail
 770               		.loc 1 293 26 view .LVU218
 771 0246 EF5F      		subi r30,lo8(-(1))
 772               		.loc 1 293 11 view .LVU219
 773 0248 EF73      		andi r30,lo8(63)
 774               	.LVL51:
 294:UART.cpp      **** 		UART_TxTail = tmptail;
 775               		.loc 1 294 3 is_stmt 1 view .LVU220
 776               		.loc 1 294 15 is_stmt 0 view .LVU221
 777 024a E093 0000 		sts _ZL11UART_TxTail,r30
 295:UART.cpp      **** 
 296:UART.cpp      **** 		/* get one byte from buffer and write it to UART */
 297:UART.cpp      **** 		UDR0 = UART_TxBuf[tmptail];  /* start transmission */
 778               		.loc 1 297 3 is_stmt 1 view .LVU222
 779               		.loc 1 297 21 is_stmt 0 view .LVU223
 780 024e F0E0      		ldi r31,0
 781               		.loc 1 297 28 view .LVU224
 782 0250 E050      		subi r30,lo8(-(_ZL10UART_TxBuf))
 783 0252 F040      		sbci r31,hi8(-(_ZL10UART_TxBuf))
 784               	.LVL52:
 785               		.loc 1 297 28 view .LVU225
 786 0254 8081      		ld r24,Z
 787               		.loc 1 297 8 view .LVU226
 788 0256 8093 C600 		sts 198,r24
 789               	.LVL53:
 790               	.L38:
 791               	/* epilogue start */
 298:UART.cpp      **** 	}
 299:UART.cpp      **** 	else
 300:UART.cpp      **** 	{
 301:UART.cpp      **** 		/* tx buffer empty, disable UDRE interrupt */
 302:UART.cpp      **** 		UCSR0B &= ~(1 << UDRIE0);
 303:UART.cpp      **** 	}
 304:UART.cpp      **** }
 792               		.loc 1 304 1 view .LVU227
 793 025a FF91      		pop r31
 794 025c EF91      		pop r30
 795 025e 9F91      		pop r25
 796 0260 8F91 8FBF 		__gcc_isr 2
 796      8F91 
 797 0266 1895      		reti
 798               	.L39:
 302:UART.cpp      **** 	}
 799               		.loc 1 302 3 is_stmt 1 view .LVU228
 302:UART.cpp      **** 	}
 800               		.loc 1 302 10 is_stmt 0 view .LVU229
 801 0268 8091 C100 		lds r24,193
 802 026c 8F7D      		andi r24,lo8(-33)
 803 026e 8093 C100 		sts 193,r24
 804               		.loc 1 304 1 view .LVU230
 805 0272 00C0      		rjmp .L38
 806               		__gcc_isr 0,r24
 807               		.cfi_endproc
 808               	.LFE14:
 810               		.local	_ZL16UART_LastRxError
 811               		.comm	_ZL16UART_LastRxError,1,1
 812               		.local	_ZL11UART_RxTail
 813               		.comm	_ZL11UART_RxTail,1,1
 814               		.local	_ZL11UART_RxHead
 815               		.comm	_ZL11UART_RxHead,1,1
 816               		.local	_ZL11UART_TxTail
 817               		.comm	_ZL11UART_TxTail,1,1
 818               		.local	_ZL11UART_TxHead
 819               		.comm	_ZL11UART_TxHead,1,1
 820               		.local	_ZL10UART_RxBuf
 821               		.comm	_ZL10UART_RxBuf,64,1
 822               		.local	_ZL10UART_TxBuf
 823               		.comm	_ZL10UART_TxBuf,64,1
 824               	.Letext0:
 825               		.file 2 "/usr/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 UART.cpp
     /tmp/cc7KymLL.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc7KymLL.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc7KymLL.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc7KymLL.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc7KymLL.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc7KymLL.s:12     .text:0000000000000000 _Z9UART_Initjhh
     /tmp/cc7KymLL.s:817    .bss:0000000000000004 _ZL11UART_TxHead
     /tmp/cc7KymLL.s:815    .bss:0000000000000003 _ZL11UART_TxTail
     /tmp/cc7KymLL.s:813    .bss:0000000000000002 _ZL11UART_RxHead
     /tmp/cc7KymLL.s:811    .bss:0000000000000001 _ZL11UART_RxTail
     /tmp/cc7KymLL.s:168    .text:00000000000000ae _Z12UART_GetCharv
     /tmp/cc7KymLL.s:819    .bss:0000000000000005 _ZL10UART_RxBuf
                             .bss:0000000000000000 _ZL16UART_LastRxError
     /tmp/cc7KymLL.s:231    .text:00000000000000e4 _Z12UART_PutCharh
     /tmp/cc7KymLL.s:821    .bss:0000000000000045 _ZL10UART_TxBuf
     /tmp/cc7KymLL.s:281    .text:000000000000010e _Z14UART_PutStringPKc
     /tmp/cc7KymLL.s:330    .text:0000000000000126 _Z16UART_PutString_pPKc
     /tmp/cc7KymLL.s:398    .text:0000000000000142 _Z16UART_RxAvailablev
     /tmp/cc7KymLL.s:424    .text:0000000000000154 _Z16UART_TxAvailablev
     /tmp/cc7KymLL.s:450    .text:0000000000000166 _Z11UART0_Flushv
     /tmp/cc7KymLL.s:470    .text:0000000000000170 _Z14UART_QueueCharh
     /tmp/cc7KymLL.s:528    .text:000000000000019a _Z15UART_QueueArrayPKch
     /tmp/cc7KymLL.s:593    .text:00000000000001c2 _Z13UART_PutQueuev
     /tmp/cc7KymLL.s:616    .text:00000000000001ce _Z17UART_QueueIsEmptyv
     /tmp/cc7KymLL.s:641    .text:00000000000001de __vector_18
                            *ABS*:0000000000000002 __gcc_isr.n_pushed.001
     /tmp/cc7KymLL.s:738    .text:000000000000022a __vector_19
                            *ABS*:0000000000000002 __gcc_isr.n_pushed.002

UNDEFINED SYMBOLS
__udivmodsi4
__do_clear_bss
