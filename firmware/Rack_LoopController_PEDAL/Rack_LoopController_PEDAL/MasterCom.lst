   1               		.file	"MasterCom.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  11               	_Z12Select_RX_TXh.part.0:
  12               	.LFB13:
  13               		.file 1 "MasterCom.cpp"
   1:MasterCom.cpp **** /*
   2:MasterCom.cpp ****  * MasterCom.cpp
   3:MasterCom.cpp ****  *
   4:MasterCom.cpp ****  * Created: 12-02-2020 18:37:34
   5:MasterCom.cpp ****  *  Author: Esben
   6:MasterCom.cpp ****  */ 
   7:MasterCom.cpp **** 
   8:MasterCom.cpp **** #include <avr/io.h>
   9:MasterCom.cpp **** #include <avr/interrupt.h>
  10:MasterCom.cpp **** #include "MasterCom.h"
  11:MasterCom.cpp **** #include "UART.h"
  12:MasterCom.cpp **** #include "System.h"
  13:MasterCom.cpp **** 
  14:MasterCom.cpp **** /* Defines */
  15:MasterCom.cpp **** #define SELECT_RX_TX_DDR				DDRD
  16:MasterCom.cpp **** #define SELECT_RX_TX_PORT				PORTD
  17:MasterCom.cpp **** #define SELECT_RX_PORT					PORTD6
  18:MasterCom.cpp **** #define SELECT_RX_MASK					(1 << SELECT_RX_PORT)
  19:MasterCom.cpp **** #define SELECT_TX_PORT					PORTD5
  20:MasterCom.cpp **** #define SELECT_TX_MASK					(1 << SELECT_TX_PORT)
  21:MasterCom.cpp **** 
  22:MasterCom.cpp **** /* Size of the circular receive/transmit queues, must be power of 2 */
  23:MasterCom.cpp **** #define RX_QUEUE_SIZE		8
  24:MasterCom.cpp **** #define TX_QUEUE_SIZE		4
  25:MasterCom.cpp **** 
  26:MasterCom.cpp **** /* Mask for calculating RX/TX queues head/tail */
  27:MasterCom.cpp **** #define RX_QUEUE_MASK	( RX_QUEUE_SIZE - 1)
  28:MasterCom.cpp **** #define TX_QUEUE_MASK	( TX_QUEUE_SIZE - 1)
  29:MasterCom.cpp **** 
  30:MasterCom.cpp **** #define CMD_HEADER_SIZE		4
  31:MasterCom.cpp **** #define SOF_BYTE			0x5F
  32:MasterCom.cpp **** #define EOF_BYTE			0xEF
  33:MasterCom.cpp **** 
  34:MasterCom.cpp **** #define SOF_BYTE_IDX		0
  35:MasterCom.cpp **** #define LENGTH_BYTE_IDX		1
  36:MasterCom.cpp **** #define CMD_BYTE_IDX		2
  37:MasterCom.cpp **** #define DATA_BYTE_IDX		3
  38:MasterCom.cpp **** 
  39:MasterCom.cpp **** #define RX_BUFFER_SIZE		28
  40:MasterCom.cpp **** 
  41:MasterCom.cpp **** #define DIR_TRANSMIT		0
  42:MasterCom.cpp **** #define DIR_RECEIVE			1
  43:MasterCom.cpp **** 
  44:MasterCom.cpp **** #define MAX_RETRANSMITS		5
  45:MasterCom.cpp **** 
  46:MasterCom.cpp **** /* Function prototypes */
  47:MasterCom.cpp **** void Select_RX_TX(uint8_t dir);
  48:MasterCom.cpp **** 
  49:MasterCom.cpp **** /* Global variables */
  50:MasterCom.cpp **** volatile bool MasterCom_DelayTxFlag = false;
  51:MasterCom.cpp **** volatile uint8_t MasterCom_DelayTXOvfCnt = 0;
  52:MasterCom.cpp **** volatile uint16_t MasterCom_ResponseTimeoutOvfCnt = 0;
  53:MasterCom.cpp **** volatile bool MasterCom_ResponseTimeoutFlag = false;
  54:MasterCom.cpp **** volatile uint16_t MasterCom_FullFrameTimeoutOvfCnt = 0;
  55:MasterCom.cpp **** volatile bool MasterCom_FullFrameTimeoutFlag = false;
  56:MasterCom.cpp **** 
  57:MasterCom.cpp **** /* Local variables */
  58:MasterCom.cpp **** volatile unsigned char RX_Buffer[RX_BUFFER_SIZE] = {0};
  59:MasterCom.cpp **** 
  60:MasterCom.cpp **** volatile CommandStruct RX_CommandQueue[RX_QUEUE_SIZE] = {Empty, 0, {0,0,0,0}, false, false};
  61:MasterCom.cpp **** volatile CommandStruct TX_CommandQueue[TX_QUEUE_SIZE] = {Empty, 0, {0,0,0,0}, false, true};
  62:MasterCom.cpp **** volatile uint8_t RxHead = 0;
  63:MasterCom.cpp **** volatile uint8_t RxTail = 0;
  64:MasterCom.cpp **** volatile uint8_t TxHead = 0;
  65:MasterCom.cpp **** volatile uint8_t TxTail = 0;
  66:MasterCom.cpp **** 
  67:MasterCom.cpp **** volatile uint8_t RetransmitCnt = 0;
  68:MasterCom.cpp **** 
  69:MasterCom.cpp **** /* Function implementations */
  70:MasterCom.cpp **** void MasterCom_Init()
  71:MasterCom.cpp **** {
  72:MasterCom.cpp **** 	/* Set RX/TX Select GPIOs to output */
  73:MasterCom.cpp **** 	SELECT_RX_TX_DDR |= (SELECT_RX_MASK | SELECT_TX_MASK);
  74:MasterCom.cpp **** 	
  75:MasterCom.cpp **** 	/* Activate receive */
  76:MasterCom.cpp **** 	Select_RX_TX(DIR_RECEIVE);
  77:MasterCom.cpp **** 	
  78:MasterCom.cpp **** 	/* Enable TX Complete Interrupt */
  79:MasterCom.cpp **** 	UCSR0B |= (1 << TXCIE0);
  80:MasterCom.cpp **** }
  81:MasterCom.cpp **** 
  82:MasterCom.cpp **** 
  83:MasterCom.cpp **** uint8_t MasterCom_RxAvailable()
  84:MasterCom.cpp **** {
  85:MasterCom.cpp **** 	return (RxHead != RxTail);
  86:MasterCom.cpp **** }
  87:MasterCom.cpp **** 
  88:MasterCom.cpp **** uint8_t MasterCom_TxAvailable()
  89:MasterCom.cpp **** {
  90:MasterCom.cpp **** 	return (TxHead != TxTail);
  91:MasterCom.cpp **** }
  92:MasterCom.cpp **** 
  93:MasterCom.cpp **** 
  94:MasterCom.cpp **** void MasterCom_FlushTxQueue()
  95:MasterCom.cpp **** {
  96:MasterCom.cpp **** 	TxTail = TxHead;
  97:MasterCom.cpp **** 	TX_CommandQueue[TxHead].acked = true;
  98:MasterCom.cpp **** }
  99:MasterCom.cpp **** 
 100:MasterCom.cpp **** 
 101:MasterCom.cpp **** void MasterCom_Receive()
 102:MasterCom.cpp **** {
 103:MasterCom.cpp **** 	static uint8_t RX_ByteCnt = 0;
 104:MasterCom.cpp **** 	
 105:MasterCom.cpp **** 	/* Start/reset Delay TX timer. Both in case a NACK needs to be sent, and also to
 106:MasterCom.cpp **** 	   prevent response to previous command being sent while still receiving new data. */
 107:MasterCom.cpp **** 	if (MasterCom_DelayTXOvfCnt != 0)
 108:MasterCom.cpp **** 	{
 109:MasterCom.cpp **** 		MasterCom_DelayTXOvfCnt = 1;
 110:MasterCom.cpp **** 	}
 111:MasterCom.cpp **** 	
 112:MasterCom.cpp **** 	/* Fetch new byte from UART buffer */
 113:MasterCom.cpp **** 	RX_Buffer[RX_ByteCnt] = UART_GetChar();
 114:MasterCom.cpp **** 	RX_ByteCnt++;
 115:MasterCom.cpp **** 	
 116:MasterCom.cpp **** 	/* Handle new byte */
 117:MasterCom.cpp **** 	if ((RX_ByteCnt - 1) == SOF_BYTE_IDX)
 118:MasterCom.cpp **** 	{
 119:MasterCom.cpp **** 		MasterCom_ResponseTimeoutOvfCnt = 0;		// Stop counter
 120:MasterCom.cpp **** 		
 121:MasterCom.cpp **** 		if (RX_Buffer[SOF_BYTE_IDX] == SOF_BYTE)
 122:MasterCom.cpp **** 		{
 123:MasterCom.cpp **** 			MasterCom_FullFrameTimeoutOvfCnt = 1;
 124:MasterCom.cpp **** 		}
 125:MasterCom.cpp **** 		else
 126:MasterCom.cpp **** 		{
 127:MasterCom.cpp **** 			RX_ByteCnt = 0;
 128:MasterCom.cpp **** 			MasterCom_DelayTXOvfCnt = 1;	// Start/reset Delay TX counter in case a new message is in queue t
 129:MasterCom.cpp **** 				
 130:MasterCom.cpp **** 			if (RX_Buffer[SOF_BYTE_IDX] == ACK_BYTE)
 131:MasterCom.cpp **** 			{
 132:MasterCom.cpp **** 				RetransmitCnt = 0;	// Reset retransmit counter
 133:MasterCom.cpp **** 				TX_CommandQueue[TxTail].acked = true;
 134:MasterCom.cpp **** 			}
 135:MasterCom.cpp **** 			else if (RX_Buffer[SOF_BYTE_IDX] == NACK_BYTE)
 136:MasterCom.cpp **** 			{
 137:MasterCom.cpp **** 				MasterCom_PrepareRetransmit();
 138:MasterCom.cpp **** 			}
 139:MasterCom.cpp **** 		}
 140:MasterCom.cpp **** 	}
 141:MasterCom.cpp **** 	else if ((RX_ByteCnt - 1) == LENGTH_BYTE_IDX)
 142:MasterCom.cpp **** 	{
 143:MasterCom.cpp **** 		RX_CommandQueue[RxHead].length = RX_Buffer[LENGTH_BYTE_IDX];
 144:MasterCom.cpp **** 	}
 145:MasterCom.cpp **** 	else if (RX_ByteCnt == RX_CommandQueue[RxHead].length)
 146:MasterCom.cpp **** 	{
 147:MasterCom.cpp **** 		MasterCom_FullFrameTimeoutOvfCnt = 0;
 148:MasterCom.cpp **** 		
 149:MasterCom.cpp **** 		/* If full frame received */
 150:MasterCom.cpp **** 		if (RX_Buffer[RX_CommandQueue[RxHead].length - 1] == EOF_BYTE)
 151:MasterCom.cpp **** 		{
 152:MasterCom.cpp **** 			RX_CommandQueue[RxHead].command = (CMD)RX_Buffer[CMD_BYTE_IDX];
 153:MasterCom.cpp **** 			
 154:MasterCom.cpp **** 			for (uint8_t i = 0; i < (RX_CommandQueue[RxHead].length - CMD_HEADER_SIZE); i++)
 155:MasterCom.cpp **** 			{
 156:MasterCom.cpp **** 				RX_CommandQueue[RxHead].data[i] = RX_Buffer[DATA_BYTE_IDX + i];
 157:MasterCom.cpp **** 			}
 158:MasterCom.cpp **** 			
 159:MasterCom.cpp **** 			/* calculate new RX head index */
 160:MasterCom.cpp **** 			uint8_t tmpHead = (RxHead + 1) & RX_QUEUE_MASK;
 161:MasterCom.cpp **** 				
 162:MasterCom.cpp **** 			if ( tmpHead == RxTail )
 163:MasterCom.cpp **** 			{
 164:MasterCom.cpp **** 				/* error: RX command queue overflow */
 165:MasterCom.cpp **** 			}
 166:MasterCom.cpp **** 			else
 167:MasterCom.cpp **** 			{
 168:MasterCom.cpp **** 				/* store new index */
 169:MasterCom.cpp **** 				RxHead = tmpHead;
 170:MasterCom.cpp **** 			}
 171:MasterCom.cpp **** 		}
 172:MasterCom.cpp **** 		else
 173:MasterCom.cpp **** 		{
 174:MasterCom.cpp **** 			/* Prepare Transmit NACK */
 175:MasterCom.cpp **** 			UART_QueueChar(NACK_BYTE);
 176:MasterCom.cpp **** 			MasterCom_DelayTXOvfCnt = 1;	// Start/reset Delay TX timer
 177:MasterCom.cpp **** 		}
 178:MasterCom.cpp **** 			
 179:MasterCom.cpp **** 		RX_ByteCnt = 0;
 180:MasterCom.cpp **** 	}	
 181:MasterCom.cpp **** }
 182:MasterCom.cpp **** 
 183:MasterCom.cpp **** 
 184:MasterCom.cpp **** void MasterCom_HandleReceived()
 185:MasterCom.cpp **** {
 186:MasterCom.cpp **** 	unsigned char response;
 187:MasterCom.cpp **** 	response = System_HandleMasterCommand(RX_CommandQueue[RxTail].command, RX_CommandQueue[RxTail].len
 188:MasterCom.cpp **** 	
 189:MasterCom.cpp **** 	/* Calculate and store new queue index */
 190:MasterCom.cpp **** 	RxTail = (RxTail + 1) & RX_QUEUE_MASK;
 191:MasterCom.cpp **** 
 192:MasterCom.cpp **** 	/* Prepare Transmit response */
 193:MasterCom.cpp **** 	UART_QueueChar(response);
 194:MasterCom.cpp **** 	
 195:MasterCom.cpp **** 	/* Start/reset Delay TX timer */
 196:MasterCom.cpp **** 	MasterCom_DelayTXOvfCnt = 1;
 197:MasterCom.cpp **** }
 198:MasterCom.cpp **** 
 199:MasterCom.cpp **** 
 200:MasterCom.cpp **** bool MasterCom_QueueCommand(CMD cmd, uint8_t datLen, uint8_t *dat)
 201:MasterCom.cpp **** {
 202:MasterCom.cpp **** 	/* Calculate new queue head index */
 203:MasterCom.cpp **** 	uint8_t tmpHead = (TxHead + 1) & TX_QUEUE_MASK;
 204:MasterCom.cpp **** 	
 205:MasterCom.cpp **** 	/* Check for free space in queue */
 206:MasterCom.cpp **** 	if ( tmpHead == TxTail )
 207:MasterCom.cpp **** 		return false;
 208:MasterCom.cpp **** 	
 209:MasterCom.cpp **** 	/* Copy command to queue */
 210:MasterCom.cpp **** 	TX_CommandQueue[TxHead].command = cmd;
 211:MasterCom.cpp **** 	TX_CommandQueue[TxHead].length = datLen + CMD_HEADER_SIZE;
 212:MasterCom.cpp **** 	TX_CommandQueue[TxHead].sent = false;
 213:MasterCom.cpp **** 	TX_CommandQueue[TxHead].acked = false;
 214:MasterCom.cpp **** 	
 215:MasterCom.cpp **** 	for (uint8_t i = 0; i < datLen; i++)
 216:MasterCom.cpp **** 	{
 217:MasterCom.cpp **** 		TX_CommandQueue[TxHead].data[i] = dat[i];
 218:MasterCom.cpp **** 	}
 219:MasterCom.cpp **** 	
 220:MasterCom.cpp **** 	/* Update queue head */
 221:MasterCom.cpp **** 	TxHead = tmpHead;
 222:MasterCom.cpp **** 	
 223:MasterCom.cpp **** 	return true;
 224:MasterCom.cpp **** }
 225:MasterCom.cpp **** 
 226:MasterCom.cpp **** void MasterCom_PutCommand()
 227:MasterCom.cpp **** {
 228:MasterCom.cpp **** 	/* Only transmit new command if previous one got an ACK */
 229:MasterCom.cpp **** 	if (TX_CommandQueue[TxTail].acked)
 230:MasterCom.cpp **** 	{
 231:MasterCom.cpp **** 		/* Calculate and store new queue tail index */
 232:MasterCom.cpp **** 		TxTail = (TxTail + 1) & TX_QUEUE_MASK;
 233:MasterCom.cpp **** 	}
 234:MasterCom.cpp **** 	else if (!(TX_CommandQueue[TxTail].sent))
 235:MasterCom.cpp **** 	{
 236:MasterCom.cpp **** 		/* Send command frame to UART TX buffer */
 237:MasterCom.cpp **** 		UART_QueueChar(SOF_BYTE);
 238:MasterCom.cpp **** 		UART_QueueChar((unsigned char)TX_CommandQueue[TxTail].length);
 239:MasterCom.cpp **** 		UART_QueueChar((unsigned char)TX_CommandQueue[TxTail].command);
 240:MasterCom.cpp **** 		
 241:MasterCom.cpp **** 		for (uint8_t i = 0; i < (TX_CommandQueue[TxTail].length - CMD_HEADER_SIZE); i++)
 242:MasterCom.cpp **** 		{
 243:MasterCom.cpp **** 			UART_QueueChar((unsigned char)TX_CommandQueue[TxTail].data[i]);
 244:MasterCom.cpp **** 		}
 245:MasterCom.cpp **** 		
 246:MasterCom.cpp **** 		UART_QueueChar(EOF_BYTE);
 247:MasterCom.cpp **** 		
 248:MasterCom.cpp **** 		/* If no data is waiting to be transmitted */
 249:MasterCom.cpp **** 		if (MasterCom_DelayTXOvfCnt == 0)
 250:MasterCom.cpp **** 		{
 251:MasterCom.cpp **** 			/* Signal that data is waiting to be transmitted without delay */
 252:MasterCom.cpp **** 			MasterCom_DelayTxFlag = true;
 253:MasterCom.cpp **** 		}
 254:MasterCom.cpp **** 		
 255:MasterCom.cpp **** 		TX_CommandQueue[TxTail].sent = true;
 256:MasterCom.cpp **** 		
 257:MasterCom.cpp **** 		/* Start response timeout timer */
 258:MasterCom.cpp **** 		MasterCom_ResponseTimeoutOvfCnt = 1;
 259:MasterCom.cpp **** 	}
 260:MasterCom.cpp **** }
 261:MasterCom.cpp **** 
 262:MasterCom.cpp **** void MasterCom_PrepareRetransmit()
 263:MasterCom.cpp **** {
 264:MasterCom.cpp **** 	if (RetransmitCnt < MAX_RETRANSMITS)
 265:MasterCom.cpp **** 	{
 266:MasterCom.cpp **** 		RetransmitCnt++;
 267:MasterCom.cpp **** 		
 268:MasterCom.cpp **** 		/* Prepare retransmit latest command */
 269:MasterCom.cpp **** 		TX_CommandQueue[TxTail].sent = false;
 270:MasterCom.cpp **** 	}
 271:MasterCom.cpp **** }
 272:MasterCom.cpp **** 
 273:MasterCom.cpp **** void MasterCom_Transmit()
 274:MasterCom.cpp **** {
 275:MasterCom.cpp **** 	/* Activate Transmit */
 276:MasterCom.cpp **** 	Select_RX_TX(DIR_TRANSMIT);
 277:MasterCom.cpp **** 	
 278:MasterCom.cpp **** 	/* Start transmit */
 279:MasterCom.cpp **** 	UART_PutQueue();
 280:MasterCom.cpp **** }
 281:MasterCom.cpp **** 
 282:MasterCom.cpp **** 
 283:MasterCom.cpp **** void Select_RX_TX(uint8_t dir)
  14               		.loc 1 283 6 view -0
  15               		.cfi_startproc
  16               	/* prologue: function */
  17               	/* frame size = 0 */
  18               	/* stack size = 0 */
  19               	.L__stack_usage = 0
  20               	.LVL0:
 284:MasterCom.cpp **** {
 285:MasterCom.cpp **** 	if (dir == DIR_TRANSMIT)
 286:MasterCom.cpp **** 	{
 287:MasterCom.cpp **** 		SELECT_RX_TX_PORT &= ~(SELECT_RX_MASK);
  21               		.loc 1 287 3 view .LVU1
  22               		.loc 1 287 21 is_stmt 0 view .LVU2
  23 0000 5E98      		cbi 0xb,6
 288:MasterCom.cpp **** 		SELECT_RX_TX_PORT |= SELECT_TX_MASK;
  24               		.loc 1 288 3 is_stmt 1 view .LVU3
  25               		.loc 1 288 21 is_stmt 0 view .LVU4
  26 0002 5D9A      		sbi 0xb,5
  27               	/* epilogue start */
 289:MasterCom.cpp **** 	}
 290:MasterCom.cpp **** 	else
 291:MasterCom.cpp **** 	{
 292:MasterCom.cpp **** 		SELECT_RX_TX_PORT |= SELECT_RX_MASK;
 293:MasterCom.cpp **** 		SELECT_RX_TX_PORT &= ~(SELECT_TX_MASK);
 294:MasterCom.cpp **** 	}
 295:MasterCom.cpp **** }
  28               		.loc 1 295 1 view .LVU5
  29 0004 0895      		ret
  30               		.cfi_endproc
  31               	.LFE13:
  33               	.global	_Z21MasterCom_RxAvailablev
  35               	_Z21MasterCom_RxAvailablev:
  36               	.LFB1:
  84:MasterCom.cpp **** 	return (RxHead != RxTail);
  37               		.loc 1 84 1 is_stmt 1 view -0
  38               		.cfi_startproc
  39               	/* prologue: function */
  40               	/* frame size = 0 */
  41               	/* stack size = 0 */
  42               	.L__stack_usage = 0
  85:MasterCom.cpp **** }
  43               		.loc 1 85 2 view .LVU7
  85:MasterCom.cpp **** }
  44               		.loc 1 85 17 is_stmt 0 view .LVU8
  45 0006 2091 0000 		lds r18,RxHead
  46 000a 9091 0000 		lds r25,RxTail
  47 000e 81E0      		ldi r24,lo8(1)
  48 0010 2913      		cpse r18,r25
  49 0012 00C0      		rjmp .L3
  50 0014 80E0      		ldi r24,0
  51               	.L3:
  52               	/* epilogue start */
  86:MasterCom.cpp **** 
  53               		.loc 1 86 1 view .LVU9
  54 0016 0895      		ret
  55               		.cfi_endproc
  56               	.LFE1:
  58               	.global	_Z21MasterCom_TxAvailablev
  60               	_Z21MasterCom_TxAvailablev:
  61               	.LFB2:
  89:MasterCom.cpp **** 	return (TxHead != TxTail);
  62               		.loc 1 89 1 is_stmt 1 view -0
  63               		.cfi_startproc
  64               	/* prologue: function */
  65               	/* frame size = 0 */
  66               	/* stack size = 0 */
  67               	.L__stack_usage = 0
  90:MasterCom.cpp **** }
  68               		.loc 1 90 2 view .LVU11
  90:MasterCom.cpp **** }
  69               		.loc 1 90 17 is_stmt 0 view .LVU12
  70 0018 2091 0000 		lds r18,TxHead
  71 001c 9091 0000 		lds r25,TxTail
  72 0020 81E0      		ldi r24,lo8(1)
  73 0022 2913      		cpse r18,r25
  74 0024 00C0      		rjmp .L5
  75 0026 80E0      		ldi r24,0
  76               	.L5:
  77               	/* epilogue start */
  91:MasterCom.cpp **** 
  78               		.loc 1 91 1 view .LVU13
  79 0028 0895      		ret
  80               		.cfi_endproc
  81               	.LFE2:
  83               	.global	_Z22MasterCom_FlushTxQueuev
  85               	_Z22MasterCom_FlushTxQueuev:
  86               	.LFB3:
  95:MasterCom.cpp **** 	TxTail = TxHead;
  87               		.loc 1 95 1 is_stmt 1 view -0
  88               		.cfi_startproc
  89               	/* prologue: function */
  90               	/* frame size = 0 */
  91               	/* stack size = 0 */
  92               	.L__stack_usage = 0
  96:MasterCom.cpp **** 	TX_CommandQueue[TxHead].acked = true;
  93               		.loc 1 96 2 view .LVU15
  96:MasterCom.cpp **** 	TX_CommandQueue[TxHead].acked = true;
  94               		.loc 1 96 9 is_stmt 0 view .LVU16
  95 002a 8091 0000 		lds r24,TxHead
  96 002e 8093 0000 		sts TxTail,r24
  97:MasterCom.cpp **** }
  97               		.loc 1 97 2 is_stmt 1 view .LVU17
  97:MasterCom.cpp **** }
  98               		.loc 1 97 18 is_stmt 0 view .LVU18
  99 0032 E091 0000 		lds r30,TxHead
  97:MasterCom.cpp **** }
 100               		.loc 1 97 32 view .LVU19
 101 0036 88E0      		ldi r24,lo8(8)
 102 0038 E89F      		mul r30,r24
 103 003a F001      		movw r30,r0
 104 003c 1124      		clr __zero_reg__
 105 003e E050      		subi r30,lo8(-(TX_CommandQueue))
 106 0040 F040      		sbci r31,hi8(-(TX_CommandQueue))
 107 0042 81E0      		ldi r24,lo8(1)
 108 0044 8783      		std Z+7,r24
 109               	/* epilogue start */
  98:MasterCom.cpp **** 
 110               		.loc 1 98 1 view .LVU20
 111 0046 0895      		ret
 112               		.cfi_endproc
 113               	.LFE3:
 115               	.global	_Z24MasterCom_HandleReceivedv
 117               	_Z24MasterCom_HandleReceivedv:
 118               	.LFB5:
 185:MasterCom.cpp **** 	unsigned char response;
 119               		.loc 1 185 1 is_stmt 1 view -0
 120               		.cfi_startproc
 121               	/* prologue: function */
 122               	/* frame size = 0 */
 123               	/* stack size = 0 */
 124               	.L__stack_usage = 0
 186:MasterCom.cpp **** 	response = System_HandleMasterCommand(RX_CommandQueue[RxTail].command, RX_CommandQueue[RxTail].len
 125               		.loc 1 186 2 view .LVU22
 187:MasterCom.cpp **** 	
 126               		.loc 1 187 2 view .LVU23
 187:MasterCom.cpp **** 	
 127               		.loc 1 187 150 is_stmt 0 view .LVU24
 128 0048 4091 0000 		lds r20,RxTail
 187:MasterCom.cpp **** 	
 129               		.loc 1 187 89 view .LVU25
 130 004c E091 0000 		lds r30,RxTail
 187:MasterCom.cpp **** 	
 131               		.loc 1 187 97 view .LVU26
 132 0050 88E0      		ldi r24,lo8(8)
 133 0052 E89F      		mul r30,r24
 134 0054 F001      		movw r30,r0
 135 0056 1124      		clr __zero_reg__
 136 0058 E050      		subi r30,lo8(-(RX_CommandQueue))
 137 005a F040      		sbci r31,hi8(-(RX_CommandQueue))
 138 005c 6181      		ldd r22,Z+1
 187:MasterCom.cpp **** 	
 139               		.loc 1 187 56 view .LVU27
 140 005e E091 0000 		lds r30,RxTail
 187:MasterCom.cpp **** 	
 141               		.loc 1 187 64 view .LVU28
 142 0062 98E0      		ldi r25,lo8(8)
 143 0064 E99F      		mul r30,r25
 144 0066 F001      		movw r30,r0
 145 0068 1124      		clr __zero_reg__
 146 006a E050      		subi r30,lo8(-(RX_CommandQueue))
 147 006c F040      		sbci r31,hi8(-(RX_CommandQueue))
 148 006e 8081      		ld r24,Z
 187:MasterCom.cpp **** 	
 149               		.loc 1 187 158 view .LVU29
 150 0070 98E0      		ldi r25,lo8(8)
 151 0072 499F      		mul r20,r25
 152 0074 A001      		movw r20,r0
 153 0076 1124      		clr __zero_reg__
 154 0078 4050      		subi r20,lo8(-(RX_CommandQueue+2))
 155 007a 5040      		sbci r21,hi8(-(RX_CommandQueue+2))
 187:MasterCom.cpp **** 	
 156               		.loc 1 187 39 view .LVU30
 157 007c 6450      		subi r22,lo8(-(-4))
 158 007e 0E94 0000 		call _Z26System_HandleMasterCommand3CMDhPh
 159               	.LVL1:
 190:MasterCom.cpp **** 
 160               		.loc 1 190 2 is_stmt 1 view .LVU31
 190:MasterCom.cpp **** 
 161               		.loc 1 190 24 is_stmt 0 view .LVU32
 162 0082 9091 0000 		lds r25,RxTail
 190:MasterCom.cpp **** 
 163               		.loc 1 190 19 view .LVU33
 164 0086 9F5F      		subi r25,lo8(-(1))
 190:MasterCom.cpp **** 
 165               		.loc 1 190 24 view .LVU34
 166 0088 9770      		andi r25,lo8(7)
 190:MasterCom.cpp **** 
 167               		.loc 1 190 9 view .LVU35
 168 008a 9093 0000 		sts RxTail,r25
 193:MasterCom.cpp **** 	
 169               		.loc 1 193 2 is_stmt 1 view .LVU36
 193:MasterCom.cpp **** 	
 170               		.loc 1 193 16 is_stmt 0 view .LVU37
 171 008e 0E94 0000 		call _Z14UART_QueueCharh
 172               	.LVL2:
 196:MasterCom.cpp **** }
 173               		.loc 1 196 2 is_stmt 1 view .LVU38
 196:MasterCom.cpp **** }
 174               		.loc 1 196 26 is_stmt 0 view .LVU39
 175 0092 81E0      		ldi r24,lo8(1)
 176 0094 8093 0000 		sts MasterCom_DelayTXOvfCnt,r24
 177               	/* epilogue start */
 197:MasterCom.cpp **** 
 178               		.loc 1 197 1 view .LVU40
 179 0098 0895      		ret
 180               		.cfi_endproc
 181               	.LFE5:
 183               	.global	_Z22MasterCom_QueueCommand3CMDhPh
 185               	_Z22MasterCom_QueueCommand3CMDhPh:
 186               	.LVL3:
 187               	.LFB6:
 201:MasterCom.cpp **** 	/* Calculate new queue head index */
 188               		.loc 1 201 1 is_stmt 1 view -0
 189               		.cfi_startproc
 201:MasterCom.cpp **** 	/* Calculate new queue head index */
 190               		.loc 1 201 1 is_stmt 0 view .LVU42
 191 009a CF93      		push r28
 192               	.LCFI0:
 193               		.cfi_def_cfa_offset 3
 194               		.cfi_offset 28, -2
 195 009c DF93      		push r29
 196               	.LCFI1:
 197               		.cfi_def_cfa_offset 4
 198               		.cfi_offset 29, -3
 199               	/* prologue: function */
 200               	/* frame size = 0 */
 201               	/* stack size = 2 */
 202               	.L__stack_usage = 2
 203 009e DA01      		movw r26,r20
 203:MasterCom.cpp **** 	
 204               		.loc 1 203 2 is_stmt 1 view .LVU43
 203:MasterCom.cpp **** 	
 205               		.loc 1 203 33 is_stmt 0 view .LVU44
 206 00a0 9091 0000 		lds r25,TxHead
 203:MasterCom.cpp **** 	
 207               		.loc 1 203 28 view .LVU45
 208 00a4 9F5F      		subi r25,lo8(-(1))
 203:MasterCom.cpp **** 	
 209               		.loc 1 203 35 view .LVU46
 210 00a6 9370      		andi r25,lo8(3)
 211               	.LVL4:
 206:MasterCom.cpp **** 		return false;
 212               		.loc 1 206 2 is_stmt 1 view .LVU47
 206:MasterCom.cpp **** 		return false;
 213               		.loc 1 206 15 is_stmt 0 view .LVU48
 214 00a8 2091 0000 		lds r18,TxTail
 206:MasterCom.cpp **** 		return false;
 215               		.loc 1 206 2 view .LVU49
 216 00ac 2917      		cp r18,r25
 217 00ae 01F4      		brne .+2
 218 00b0 00C0      		rjmp .L12
 210:MasterCom.cpp **** 	TX_CommandQueue[TxHead].length = datLen + CMD_HEADER_SIZE;
 219               		.loc 1 210 2 is_stmt 1 view .LVU50
 210:MasterCom.cpp **** 	TX_CommandQueue[TxHead].length = datLen + CMD_HEADER_SIZE;
 220               		.loc 1 210 18 is_stmt 0 view .LVU51
 221 00b2 E091 0000 		lds r30,TxHead
 210:MasterCom.cpp **** 	TX_CommandQueue[TxHead].length = datLen + CMD_HEADER_SIZE;
 222               		.loc 1 210 34 view .LVU52
 223 00b6 28E0      		ldi r18,lo8(8)
 224 00b8 E29F      		mul r30,r18
 225 00ba F001      		movw r30,r0
 226 00bc 1124      		clr __zero_reg__
 227 00be E050      		subi r30,lo8(-(TX_CommandQueue))
 228 00c0 F040      		sbci r31,hi8(-(TX_CommandQueue))
 229 00c2 8083      		st Z,r24
 211:MasterCom.cpp **** 	TX_CommandQueue[TxHead].sent = false;
 230               		.loc 1 211 2 is_stmt 1 view .LVU53
 211:MasterCom.cpp **** 	TX_CommandQueue[TxHead].sent = false;
 231               		.loc 1 211 18 is_stmt 0 view .LVU54
 232 00c4 E091 0000 		lds r30,TxHead
 211:MasterCom.cpp **** 	TX_CommandQueue[TxHead].sent = false;
 233               		.loc 1 211 33 view .LVU55
 234 00c8 48E0      		ldi r20,lo8(8)
 235               	.LVL5:
 211:MasterCom.cpp **** 	TX_CommandQueue[TxHead].sent = false;
 236               		.loc 1 211 33 view .LVU56
 237 00ca E49F      		mul r30,r20
 238 00cc F001      		movw r30,r0
 239 00ce 1124      		clr __zero_reg__
 240 00d0 E050      		subi r30,lo8(-(TX_CommandQueue))
 241 00d2 F040      		sbci r31,hi8(-(TX_CommandQueue))
 242 00d4 84E0      		ldi r24,lo8(4)
 243               	.LVL6:
 211:MasterCom.cpp **** 	TX_CommandQueue[TxHead].sent = false;
 244               		.loc 1 211 33 view .LVU57
 245 00d6 860F      		add r24,r22
 246 00d8 8183      		std Z+1,r24
 212:MasterCom.cpp **** 	TX_CommandQueue[TxHead].acked = false;
 247               		.loc 1 212 2 is_stmt 1 view .LVU58
 212:MasterCom.cpp **** 	TX_CommandQueue[TxHead].acked = false;
 248               		.loc 1 212 18 is_stmt 0 view .LVU59
 249 00da E091 0000 		lds r30,TxHead
 212:MasterCom.cpp **** 	TX_CommandQueue[TxHead].acked = false;
 250               		.loc 1 212 31 view .LVU60
 251 00de 88E0      		ldi r24,lo8(8)
 252 00e0 E89F      		mul r30,r24
 253 00e2 F001      		movw r30,r0
 254 00e4 1124      		clr __zero_reg__
 255 00e6 E050      		subi r30,lo8(-(TX_CommandQueue))
 256 00e8 F040      		sbci r31,hi8(-(TX_CommandQueue))
 257 00ea 1682      		std Z+6,__zero_reg__
 213:MasterCom.cpp **** 	
 258               		.loc 1 213 2 is_stmt 1 view .LVU61
 213:MasterCom.cpp **** 	
 259               		.loc 1 213 18 is_stmt 0 view .LVU62
 260 00ec E091 0000 		lds r30,TxHead
 213:MasterCom.cpp **** 	
 261               		.loc 1 213 32 view .LVU63
 262 00f0 28E0      		ldi r18,lo8(8)
 263 00f2 E29F      		mul r30,r18
 264 00f4 F001      		movw r30,r0
 265 00f6 1124      		clr __zero_reg__
 266 00f8 E050      		subi r30,lo8(-(TX_CommandQueue))
 267 00fa F040      		sbci r31,hi8(-(TX_CommandQueue))
 268 00fc 1782      		std Z+7,__zero_reg__
 215:MasterCom.cpp **** 	{
 269               		.loc 1 215 2 is_stmt 1 view .LVU64
 270               	.LVL7:
 213:MasterCom.cpp **** 	
 271               		.loc 1 213 32 is_stmt 0 view .LVU65
 272 00fe 30E0      		ldi r19,0
 273 0100 20E0      		ldi r18,0
 274               	.LVL8:
 275               	.L11:
 276               	.LBB4:
 215:MasterCom.cpp **** 	{
 277               		.loc 1 215 24 is_stmt 1 discriminator 3 view .LVU66
 278 0102 2617      		cp r18,r22
 279 0104 00F4      		brsh .L10
 217:MasterCom.cpp **** 	}
 280               		.loc 1 217 3 discriminator 2 view .LVU67
 217:MasterCom.cpp **** 	}
 281               		.loc 1 217 19 is_stmt 0 discriminator 2 view .LVU68
 282 0106 E091 0000 		lds r30,TxHead
 217:MasterCom.cpp **** 	}
 283               		.loc 1 217 42 discriminator 2 view .LVU69
 284 010a ED01      		movw r28,r26
 285 010c C20F      		add r28,r18
 286 010e D31F      		adc r29,r19
 287 0110 8881      		ld r24,Y
 217:MasterCom.cpp **** 	}
 288               		.loc 1 217 35 discriminator 2 view .LVU70
 289 0112 48E0      		ldi r20,lo8(8)
 290 0114 E49F      		mul r30,r20
 291 0116 F001      		movw r30,r0
 292 0118 1124      		clr __zero_reg__
 293 011a E050      		subi r30,lo8(-(TX_CommandQueue))
 294 011c F040      		sbci r31,hi8(-(TX_CommandQueue))
 295 011e E20F      		add r30,r18
 296 0120 F31F      		adc r31,r19
 297 0122 8283      		std Z+2,r24
 215:MasterCom.cpp **** 	{
 298               		.loc 1 215 2 is_stmt 1 discriminator 2 view .LVU71
 299               	.LVL9:
 215:MasterCom.cpp **** 	{
 300               		.loc 1 215 2 is_stmt 0 discriminator 2 view .LVU72
 301 0124 2F5F      		subi r18,-1
 302 0126 3F4F      		sbci r19,-1
 303               	.LVL10:
 215:MasterCom.cpp **** 	{
 304               		.loc 1 215 2 discriminator 2 view .LVU73
 305 0128 00C0      		rjmp .L11
 306               	.L10:
 215:MasterCom.cpp **** 	{
 307               		.loc 1 215 2 discriminator 2 view .LVU74
 308               	.LBE4:
 221:MasterCom.cpp **** 	
 309               		.loc 1 221 2 is_stmt 1 view .LVU75
 221:MasterCom.cpp **** 	
 310               		.loc 1 221 9 is_stmt 0 view .LVU76
 311 012a 9093 0000 		sts TxHead,r25
 223:MasterCom.cpp **** }
 312               		.loc 1 223 2 is_stmt 1 view .LVU77
 223:MasterCom.cpp **** }
 313               		.loc 1 223 9 is_stmt 0 view .LVU78
 314 012e 81E0      		ldi r24,lo8(1)
 315               	.LVL11:
 316               	.L8:
 317               	/* epilogue start */
 224:MasterCom.cpp **** 
 318               		.loc 1 224 1 view .LVU79
 319 0130 DF91      		pop r29
 320 0132 CF91      		pop r28
 321 0134 0895      		ret
 322               	.LVL12:
 323               	.L12:
 207:MasterCom.cpp **** 	
 324               		.loc 1 207 10 view .LVU80
 325 0136 80E0      		ldi r24,0
 326               	.LVL13:
 207:MasterCom.cpp **** 	
 327               		.loc 1 207 10 view .LVU81
 328 0138 00C0      		rjmp .L8
 329               		.cfi_endproc
 330               	.LFE6:
 332               	.global	_Z20MasterCom_PutCommandv
 334               	_Z20MasterCom_PutCommandv:
 335               	.LFB7:
 227:MasterCom.cpp **** 	/* Only transmit new command if previous one got an ACK */
 336               		.loc 1 227 1 is_stmt 1 view -0
 337               		.cfi_startproc
 338 013a CF93      		push r28
 339               	.LCFI2:
 340               		.cfi_def_cfa_offset 3
 341               		.cfi_offset 28, -2
 342               	/* prologue: function */
 343               	/* frame size = 0 */
 344               	/* stack size = 1 */
 345               	.L__stack_usage = 1
 229:MasterCom.cpp **** 	{
 346               		.loc 1 229 2 view .LVU83
 347               	.LBB5:
 229:MasterCom.cpp **** 	{
 348               		.loc 1 229 22 is_stmt 0 view .LVU84
 349 013c E091 0000 		lds r30,TxTail
 229:MasterCom.cpp **** 	{
 350               		.loc 1 229 30 view .LVU85
 351 0140 88E0      		ldi r24,lo8(8)
 352 0142 E89F      		mul r30,r24
 353 0144 F001      		movw r30,r0
 354 0146 1124      		clr __zero_reg__
 355 0148 E050      		subi r30,lo8(-(TX_CommandQueue))
 356 014a F040      		sbci r31,hi8(-(TX_CommandQueue))
 357 014c 8781      		ldd r24,Z+7
 229:MasterCom.cpp **** 	{
 358               		.loc 1 229 2 view .LVU86
 359 014e 8823      		tst r24
 360 0150 01F0      		breq .L14
 232:MasterCom.cpp **** 	}
 361               		.loc 1 232 3 is_stmt 1 view .LVU87
 232:MasterCom.cpp **** 	}
 362               		.loc 1 232 25 is_stmt 0 view .LVU88
 363 0152 8091 0000 		lds r24,TxTail
 232:MasterCom.cpp **** 	}
 364               		.loc 1 232 20 view .LVU89
 365 0156 8F5F      		subi r24,lo8(-(1))
 232:MasterCom.cpp **** 	}
 366               		.loc 1 232 25 view .LVU90
 367 0158 8370      		andi r24,lo8(3)
 232:MasterCom.cpp **** 	}
 368               		.loc 1 232 10 view .LVU91
 369 015a 8093 0000 		sts TxTail,r24
 370               	.L13:
 371               	/* epilogue start */
 372               	.LBE5:
 260:MasterCom.cpp **** 
 373               		.loc 1 260 1 view .LVU92
 374 015e CF91      		pop r28
 375 0160 0895      		ret
 376               	.L14:
 234:MasterCom.cpp **** 	{
 377               		.loc 1 234 7 is_stmt 1 view .LVU93
 378               	.LBB9:
 379               	.LBB6:
 234:MasterCom.cpp **** 	{
 380               		.loc 1 234 29 is_stmt 0 view .LVU94
 381 0162 E091 0000 		lds r30,TxTail
 234:MasterCom.cpp **** 	{
 382               		.loc 1 234 37 view .LVU95
 383 0166 88E0      		ldi r24,lo8(8)
 384 0168 E89F      		mul r30,r24
 385 016a F001      		movw r30,r0
 386 016c 1124      		clr __zero_reg__
 387 016e E050      		subi r30,lo8(-(TX_CommandQueue))
 388 0170 F040      		sbci r31,hi8(-(TX_CommandQueue))
 389 0172 8681      		ldd r24,Z+6
 234:MasterCom.cpp **** 	{
 390               		.loc 1 234 7 view .LVU96
 391 0174 8111      		cpse r24,__zero_reg__
 392 0176 00C0      		rjmp .L13
 393               	.LBB7:
 237:MasterCom.cpp **** 		UART_QueueChar((unsigned char)TX_CommandQueue[TxTail].length);
 394               		.loc 1 237 3 is_stmt 1 view .LVU97
 237:MasterCom.cpp **** 		UART_QueueChar((unsigned char)TX_CommandQueue[TxTail].length);
 395               		.loc 1 237 17 is_stmt 0 view .LVU98
 396 0178 8FE5      		ldi r24,lo8(95)
 397 017a 0E94 0000 		call _Z14UART_QueueCharh
 398               	.LVL14:
 238:MasterCom.cpp **** 		UART_QueueChar((unsigned char)TX_CommandQueue[TxTail].command);
 399               		.loc 1 238 3 is_stmt 1 view .LVU99
 238:MasterCom.cpp **** 		UART_QueueChar((unsigned char)TX_CommandQueue[TxTail].command);
 400               		.loc 1 238 49 is_stmt 0 view .LVU100
 401 017e E091 0000 		lds r30,TxTail
 238:MasterCom.cpp **** 		UART_QueueChar((unsigned char)TX_CommandQueue[TxTail].command);
 402               		.loc 1 238 57 view .LVU101
 403 0182 88E0      		ldi r24,lo8(8)
 404 0184 E89F      		mul r30,r24
 405 0186 F001      		movw r30,r0
 406 0188 1124      		clr __zero_reg__
 407 018a E050      		subi r30,lo8(-(TX_CommandQueue))
 408 018c F040      		sbci r31,hi8(-(TX_CommandQueue))
 409 018e 8181      		ldd r24,Z+1
 238:MasterCom.cpp **** 		UART_QueueChar((unsigned char)TX_CommandQueue[TxTail].command);
 410               		.loc 1 238 17 view .LVU102
 411 0190 0E94 0000 		call _Z14UART_QueueCharh
 412               	.LVL15:
 239:MasterCom.cpp **** 		
 413               		.loc 1 239 3 is_stmt 1 view .LVU103
 239:MasterCom.cpp **** 		
 414               		.loc 1 239 49 is_stmt 0 view .LVU104
 415 0194 E091 0000 		lds r30,TxTail
 239:MasterCom.cpp **** 		
 416               		.loc 1 239 57 view .LVU105
 417 0198 88E0      		ldi r24,lo8(8)
 418 019a E89F      		mul r30,r24
 419 019c F001      		movw r30,r0
 420 019e 1124      		clr __zero_reg__
 421 01a0 E050      		subi r30,lo8(-(TX_CommandQueue))
 422 01a2 F040      		sbci r31,hi8(-(TX_CommandQueue))
 423 01a4 8081      		ld r24,Z
 239:MasterCom.cpp **** 		
 424               		.loc 1 239 17 view .LVU106
 425 01a6 0E94 0000 		call _Z14UART_QueueCharh
 426               	.LVL16:
 241:MasterCom.cpp **** 		{
 427               		.loc 1 241 3 is_stmt 1 view .LVU107
 428               	.LBB8:
 241:MasterCom.cpp **** 		{
 429               		.loc 1 241 16 is_stmt 0 view .LVU108
 430 01aa C0E0      		ldi r28,0
 431               	.LVL17:
 432               	.L17:
 241:MasterCom.cpp **** 		{
 433               		.loc 1 241 25 is_stmt 1 discriminator 3 view .LVU109
 241:MasterCom.cpp **** 		{
 434               		.loc 1 241 23 is_stmt 0 discriminator 3 view .LVU110
 435 01ac 2C2F      		mov r18,r28
 436 01ae 30E0      		ldi r19,0
 241:MasterCom.cpp **** 		{
 437               		.loc 1 241 44 discriminator 3 view .LVU111
 438 01b0 A091 0000 		lds r26,TxTail
 241:MasterCom.cpp **** 		{
 439               		.loc 1 241 52 discriminator 3 view .LVU112
 440 01b4 88E0      		ldi r24,lo8(8)
 441 01b6 A89F      		mul r26,r24
 442 01b8 D001      		movw r26,r0
 443 01ba 1124      		clr __zero_reg__
 444 01bc A050      		subi r26,lo8(-(TX_CommandQueue))
 445 01be B040      		sbci r27,hi8(-(TX_CommandQueue))
 446 01c0 1196      		adiw r26,1
 447 01c2 8C91      		ld r24,X
 241:MasterCom.cpp **** 		{
 448               		.loc 1 241 59 discriminator 3 view .LVU113
 449 01c4 8450      		subi r24,4
 450 01c6 990B      		sbc r25,r25
 241:MasterCom.cpp **** 		{
 451               		.loc 1 241 25 discriminator 3 view .LVU114
 452 01c8 2817      		cp r18,r24
 453 01ca 3907      		cpc r19,r25
 454 01cc 04F4      		brge .L16
 243:MasterCom.cpp **** 		}
 455               		.loc 1 243 4 is_stmt 1 discriminator 2 view .LVU115
 243:MasterCom.cpp **** 		}
 456               		.loc 1 243 50 is_stmt 0 discriminator 2 view .LVU116
 457 01ce E091 0000 		lds r30,TxTail
 243:MasterCom.cpp **** 		}
 458               		.loc 1 243 64 discriminator 2 view .LVU117
 459 01d2 88E0      		ldi r24,lo8(8)
 460 01d4 E89F      		mul r30,r24
 461 01d6 F001      		movw r30,r0
 462 01d8 1124      		clr __zero_reg__
 463 01da E050      		subi r30,lo8(-(TX_CommandQueue))
 464 01dc F040      		sbci r31,hi8(-(TX_CommandQueue))
 465 01de E20F      		add r30,r18
 466 01e0 F31F      		adc r31,r19
 467 01e2 8281      		ldd r24,Z+2
 243:MasterCom.cpp **** 		}
 468               		.loc 1 243 18 discriminator 2 view .LVU118
 469 01e4 0E94 0000 		call _Z14UART_QueueCharh
 470               	.LVL18:
 241:MasterCom.cpp **** 		{
 471               		.loc 1 241 3 is_stmt 1 discriminator 2 view .LVU119
 472 01e8 CF5F      		subi r28,lo8(-(1))
 473               	.LVL19:
 241:MasterCom.cpp **** 		{
 474               		.loc 1 241 3 is_stmt 0 discriminator 2 view .LVU120
 475 01ea 00C0      		rjmp .L17
 476               	.LVL20:
 477               	.L16:
 241:MasterCom.cpp **** 		{
 478               		.loc 1 241 3 discriminator 2 view .LVU121
 479               	.LBE8:
 246:MasterCom.cpp **** 		
 480               		.loc 1 246 3 is_stmt 1 view .LVU122
 246:MasterCom.cpp **** 		
 481               		.loc 1 246 17 is_stmt 0 view .LVU123
 482 01ec 8FEE      		ldi r24,lo8(-17)
 483 01ee 0E94 0000 		call _Z14UART_QueueCharh
 484               	.LVL21:
 249:MasterCom.cpp **** 		{
 485               		.loc 1 249 3 is_stmt 1 view .LVU124
 249:MasterCom.cpp **** 		{
 486               		.loc 1 249 31 is_stmt 0 view .LVU125
 487 01f2 8091 0000 		lds r24,MasterCom_DelayTXOvfCnt
 249:MasterCom.cpp **** 		{
 488               		.loc 1 249 3 view .LVU126
 489 01f6 8111      		cpse r24,__zero_reg__
 490 01f8 00C0      		rjmp .L18
 252:MasterCom.cpp **** 		}
 491               		.loc 1 252 4 is_stmt 1 view .LVU127
 252:MasterCom.cpp **** 		}
 492               		.loc 1 252 26 is_stmt 0 view .LVU128
 493 01fa 81E0      		ldi r24,lo8(1)
 494 01fc 8093 0000 		sts MasterCom_DelayTxFlag,r24
 495               	.L18:
 255:MasterCom.cpp **** 		
 496               		.loc 1 255 3 is_stmt 1 view .LVU129
 255:MasterCom.cpp **** 		
 497               		.loc 1 255 19 is_stmt 0 view .LVU130
 498 0200 E091 0000 		lds r30,TxTail
 255:MasterCom.cpp **** 		
 499               		.loc 1 255 32 view .LVU131
 500 0204 88E0      		ldi r24,lo8(8)
 501 0206 E89F      		mul r30,r24
 502 0208 F001      		movw r30,r0
 503 020a 1124      		clr __zero_reg__
 504 020c E050      		subi r30,lo8(-(TX_CommandQueue))
 505 020e F040      		sbci r31,hi8(-(TX_CommandQueue))
 506 0210 81E0      		ldi r24,lo8(1)
 507 0212 8683      		std Z+6,r24
 258:MasterCom.cpp **** 	}
 508               		.loc 1 258 3 is_stmt 1 view .LVU132
 258:MasterCom.cpp **** 	}
 509               		.loc 1 258 35 is_stmt 0 view .LVU133
 510 0214 81E0      		ldi r24,lo8(1)
 511 0216 90E0      		ldi r25,0
 512 0218 9093 0000 		sts MasterCom_ResponseTimeoutOvfCnt+1,r25
 513 021c 8093 0000 		sts MasterCom_ResponseTimeoutOvfCnt,r24
 514               	.LBE7:
 515               	.LBE6:
 516               	.LBE9:
 260:MasterCom.cpp **** 
 517               		.loc 1 260 1 view .LVU134
 518 0220 00C0      		rjmp .L13
 519               		.cfi_endproc
 520               	.LFE7:
 522               	.global	_Z27MasterCom_PrepareRetransmitv
 524               	_Z27MasterCom_PrepareRetransmitv:
 525               	.LFB8:
 263:MasterCom.cpp **** 	if (RetransmitCnt < MAX_RETRANSMITS)
 526               		.loc 1 263 1 is_stmt 1 view -0
 527               		.cfi_startproc
 528               	/* prologue: function */
 529               	/* frame size = 0 */
 530               	/* stack size = 0 */
 531               	.L__stack_usage = 0
 264:MasterCom.cpp **** 	{
 532               		.loc 1 264 2 view .LVU136
 264:MasterCom.cpp **** 	{
 533               		.loc 1 264 20 is_stmt 0 view .LVU137
 534 0222 8091 0000 		lds r24,RetransmitCnt
 264:MasterCom.cpp **** 	{
 535               		.loc 1 264 2 view .LVU138
 536 0226 8530      		cpi r24,lo8(5)
 537 0228 00F4      		brsh .L19
 538               	.LBB12:
 539               	.LBI12:
 262:MasterCom.cpp **** {
 540               		.loc 1 262 6 is_stmt 1 view .LVU139
 541               	.LBB13:
 266:MasterCom.cpp **** 		
 542               		.loc 1 266 3 view .LVU140
 266:MasterCom.cpp **** 		
 543               		.loc 1 266 16 is_stmt 0 view .LVU141
 544 022a 8091 0000 		lds r24,RetransmitCnt
 545 022e 8F5F      		subi r24,lo8(-(1))
 546 0230 8093 0000 		sts RetransmitCnt,r24
 269:MasterCom.cpp **** 	}
 547               		.loc 1 269 3 is_stmt 1 view .LVU142
 269:MasterCom.cpp **** 	}
 548               		.loc 1 269 19 is_stmt 0 view .LVU143
 549 0234 E091 0000 		lds r30,TxTail
 269:MasterCom.cpp **** 	}
 550               		.loc 1 269 32 view .LVU144
 551 0238 88E0      		ldi r24,lo8(8)
 552 023a E89F      		mul r30,r24
 553 023c F001      		movw r30,r0
 554 023e 1124      		clr __zero_reg__
 555 0240 E050      		subi r30,lo8(-(TX_CommandQueue))
 556 0242 F040      		sbci r31,hi8(-(TX_CommandQueue))
 557 0244 1682      		std Z+6,__zero_reg__
 558               	.L19:
 559               	/* epilogue start */
 560               	.LBE13:
 561               	.LBE12:
 271:MasterCom.cpp **** 
 562               		.loc 1 271 1 view .LVU145
 563 0246 0895      		ret
 564               		.cfi_endproc
 565               	.LFE8:
 567               	.global	_Z17MasterCom_Receivev
 569               	_Z17MasterCom_Receivev:
 570               	.LFB4:
 102:MasterCom.cpp **** 	static uint8_t RX_ByteCnt = 0;
 571               		.loc 1 102 1 is_stmt 1 view -0
 572               		.cfi_startproc
 573               	/* prologue: function */
 574               	/* frame size = 0 */
 575               	/* stack size = 0 */
 576               	.L__stack_usage = 0
 103:MasterCom.cpp **** 	
 577               		.loc 1 103 2 view .LVU147
 107:MasterCom.cpp **** 	{
 578               		.loc 1 107 2 view .LVU148
 107:MasterCom.cpp **** 	{
 579               		.loc 1 107 30 is_stmt 0 view .LVU149
 580 0248 8091 0000 		lds r24,MasterCom_DelayTXOvfCnt
 107:MasterCom.cpp **** 	{
 581               		.loc 1 107 2 view .LVU150
 582 024c 8823      		tst r24
 583 024e 01F0      		breq .L22
 109:MasterCom.cpp **** 	}
 584               		.loc 1 109 3 is_stmt 1 view .LVU151
 109:MasterCom.cpp **** 	}
 585               		.loc 1 109 27 is_stmt 0 view .LVU152
 586 0250 81E0      		ldi r24,lo8(1)
 587 0252 8093 0000 		sts MasterCom_DelayTXOvfCnt,r24
 588               	.L22:
 113:MasterCom.cpp **** 	RX_ByteCnt++;
 589               		.loc 1 113 2 is_stmt 1 view .LVU153
 113:MasterCom.cpp **** 	RX_ByteCnt++;
 590               		.loc 1 113 38 is_stmt 0 view .LVU154
 591 0256 0E94 0000 		call _Z12UART_GetCharv
 592               	.LVL22:
 593 025a 982F      		mov r25,r24
 113:MasterCom.cpp **** 	RX_ByteCnt++;
 594               		.loc 1 113 12 view .LVU155
 595 025c 8091 0000 		lds r24,_ZZ17MasterCom_ReceivevE10RX_ByteCnt
 596 0260 E82F      		mov r30,r24
 597 0262 F0E0      		ldi r31,0
 113:MasterCom.cpp **** 	RX_ByteCnt++;
 598               		.loc 1 113 24 view .LVU156
 599 0264 E050      		subi r30,lo8(-(RX_Buffer))
 600 0266 F040      		sbci r31,hi8(-(RX_Buffer))
 601 0268 9083      		st Z,r25
 114:MasterCom.cpp **** 	
 602               		.loc 1 114 2 is_stmt 1 view .LVU157
 114:MasterCom.cpp **** 	
 603               		.loc 1 114 12 is_stmt 0 view .LVU158
 604 026a 8F5F      		subi r24,lo8(-(1))
 605 026c 8093 0000 		sts _ZZ17MasterCom_ReceivevE10RX_ByteCnt,r24
 117:MasterCom.cpp **** 	{
 606               		.loc 1 117 2 is_stmt 1 view .LVU159
 607               	.LBB14:
 608 0270 8130      		cpi r24,lo8(1)
 609 0272 01F4      		brne .L23
 119:MasterCom.cpp **** 		
 610               		.loc 1 119 3 view .LVU160
 119:MasterCom.cpp **** 		
 611               		.loc 1 119 35 is_stmt 0 view .LVU161
 612 0274 1092 0000 		sts MasterCom_ResponseTimeoutOvfCnt+1,__zero_reg__
 613 0278 1092 0000 		sts MasterCom_ResponseTimeoutOvfCnt,__zero_reg__
 121:MasterCom.cpp **** 		{
 614               		.loc 1 121 3 is_stmt 1 view .LVU162
 121:MasterCom.cpp **** 		{
 615               		.loc 1 121 29 is_stmt 0 view .LVU163
 616 027c 9091 0000 		lds r25,RX_Buffer
 121:MasterCom.cpp **** 		{
 617               		.loc 1 121 3 view .LVU164
 618 0280 9F35      		cpi r25,lo8(95)
 619 0282 01F4      		brne .L24
 123:MasterCom.cpp **** 		}
 620               		.loc 1 123 4 is_stmt 1 view .LVU165
 123:MasterCom.cpp **** 		}
 621               		.loc 1 123 37 is_stmt 0 view .LVU166
 622 0284 81E0      		ldi r24,lo8(1)
 623 0286 90E0      		ldi r25,0
 624 0288 9093 0000 		sts MasterCom_FullFrameTimeoutOvfCnt+1,r25
 625 028c 8093 0000 		sts MasterCom_FullFrameTimeoutOvfCnt,r24
 626 0290 0895      		ret
 627               	.L24:
 127:MasterCom.cpp **** 			MasterCom_DelayTXOvfCnt = 1;	// Start/reset Delay TX counter in case a new message is in queue t
 628               		.loc 1 127 4 is_stmt 1 view .LVU167
 127:MasterCom.cpp **** 			MasterCom_DelayTXOvfCnt = 1;	// Start/reset Delay TX counter in case a new message is in queue t
 629               		.loc 1 127 15 is_stmt 0 view .LVU168
 630 0292 1092 0000 		sts _ZZ17MasterCom_ReceivevE10RX_ByteCnt,__zero_reg__
 128:MasterCom.cpp **** 				
 631               		.loc 1 128 4 is_stmt 1 view .LVU169
 128:MasterCom.cpp **** 				
 632               		.loc 1 128 28 is_stmt 0 view .LVU170
 633 0296 8093 0000 		sts MasterCom_DelayTXOvfCnt,r24
 130:MasterCom.cpp **** 			{
 634               		.loc 1 130 4 is_stmt 1 view .LVU171
 130:MasterCom.cpp **** 			{
 635               		.loc 1 130 30 is_stmt 0 view .LVU172
 636 029a 9091 0000 		lds r25,RX_Buffer
 130:MasterCom.cpp **** 			{
 637               		.loc 1 130 4 view .LVU173
 638 029e 9C3A      		cpi r25,lo8(-84)
 639 02a0 01F4      		brne .L26
 132:MasterCom.cpp **** 				TX_CommandQueue[TxTail].acked = true;
 640               		.loc 1 132 5 is_stmt 1 view .LVU174
 132:MasterCom.cpp **** 				TX_CommandQueue[TxTail].acked = true;
 641               		.loc 1 132 19 is_stmt 0 view .LVU175
 642 02a2 1092 0000 		sts RetransmitCnt,__zero_reg__
 133:MasterCom.cpp **** 			}
 643               		.loc 1 133 5 is_stmt 1 view .LVU176
 133:MasterCom.cpp **** 			}
 644               		.loc 1 133 21 is_stmt 0 view .LVU177
 645 02a6 E091 0000 		lds r30,TxTail
 133:MasterCom.cpp **** 			}
 646               		.loc 1 133 35 view .LVU178
 647 02aa 48E0      		ldi r20,lo8(8)
 648 02ac E49F      		mul r30,r20
 649 02ae F001      		movw r30,r0
 650 02b0 1124      		clr __zero_reg__
 651 02b2 E050      		subi r30,lo8(-(TX_CommandQueue))
 652 02b4 F040      		sbci r31,hi8(-(TX_CommandQueue))
 653 02b6 8783      		std Z+7,r24
 654 02b8 0895      		ret
 655               	.L26:
 135:MasterCom.cpp **** 			{
 656               		.loc 1 135 9 is_stmt 1 view .LVU179
 135:MasterCom.cpp **** 			{
 657               		.loc 1 135 35 is_stmt 0 view .LVU180
 658 02ba 8091 0000 		lds r24,RX_Buffer
 135:MasterCom.cpp **** 			{
 659               		.loc 1 135 9 view .LVU181
 660 02be 8A32      		cpi r24,lo8(42)
 661 02c0 01F0      		breq .+2
 662 02c2 00C0      		rjmp .L21
 137:MasterCom.cpp **** 			}
 663               		.loc 1 137 5 is_stmt 1 view .LVU182
 137:MasterCom.cpp **** 			}
 664               		.loc 1 137 32 is_stmt 0 view .LVU183
 665 02c4 0C94 0000 		jmp _Z27MasterCom_PrepareRetransmitv
 666               	.LVL23:
 667               	.L23:
 668               	.LBE14:
 141:MasterCom.cpp **** 	{
 669               		.loc 1 141 7 is_stmt 1 view .LVU184
 670               	.LBB26:
 671               	.LBB15:
 143:MasterCom.cpp **** 	}
 672               		.loc 1 143 19 is_stmt 0 view .LVU185
 673 02c8 E091 0000 		lds r30,RxHead
 141:MasterCom.cpp **** 	{
 674               		.loc 1 141 7 view .LVU186
 675 02cc 8230      		cpi r24,lo8(2)
 676 02ce 01F4      		brne .L28
 143:MasterCom.cpp **** 	}
 677               		.loc 1 143 3 is_stmt 1 view .LVU187
 143:MasterCom.cpp **** 	}
 678               		.loc 1 143 61 is_stmt 0 view .LVU188
 679 02d0 8091 0000 		lds r24,RX_Buffer+1
 143:MasterCom.cpp **** 	}
 680               		.loc 1 143 34 view .LVU189
 681 02d4 98E0      		ldi r25,lo8(8)
 682 02d6 E99F      		mul r30,r25
 683 02d8 F001      		movw r30,r0
 684 02da 1124      		clr __zero_reg__
 685 02dc E050      		subi r30,lo8(-(RX_CommandQueue))
 686 02de F040      		sbci r31,hi8(-(RX_CommandQueue))
 687 02e0 8183      		std Z+1,r24
 688 02e2 0895      		ret
 689               	.L28:
 690               	.LBE15:
 691               	.LBE26:
 145:MasterCom.cpp **** 	{
 692               		.loc 1 145 7 is_stmt 1 view .LVU190
 693               	.LBB27:
 694               	.LBB24:
 695               	.LBB16:
 145:MasterCom.cpp **** 	{
 696               		.loc 1 145 49 is_stmt 0 view .LVU191
 697 02e4 48E0      		ldi r20,lo8(8)
 698 02e6 E49F      		mul r30,r20
 699 02e8 F001      		movw r30,r0
 700 02ea 1124      		clr __zero_reg__
 701 02ec E050      		subi r30,lo8(-(RX_CommandQueue))
 702 02ee F040      		sbci r31,hi8(-(RX_CommandQueue))
 703 02f0 9181      		ldd r25,Z+1
 145:MasterCom.cpp **** 	{
 704               		.loc 1 145 7 view .LVU192
 705 02f2 8913      		cpse r24,r25
 706 02f4 00C0      		rjmp .L21
 707               	.LBB17:
 147:MasterCom.cpp **** 		
 708               		.loc 1 147 3 is_stmt 1 view .LVU193
 147:MasterCom.cpp **** 		
 709               		.loc 1 147 36 is_stmt 0 view .LVU194
 710 02f6 1092 0000 		sts MasterCom_FullFrameTimeoutOvfCnt+1,__zero_reg__
 711 02fa 1092 0000 		sts MasterCom_FullFrameTimeoutOvfCnt,__zero_reg__
 150:MasterCom.cpp **** 		{
 712               		.loc 1 150 3 is_stmt 1 view .LVU195
 713               	.LBB18:
 150:MasterCom.cpp **** 		{
 714               		.loc 1 150 33 is_stmt 0 view .LVU196
 715 02fe E091 0000 		lds r30,RxHead
 150:MasterCom.cpp **** 		{
 716               		.loc 1 150 41 view .LVU197
 717 0302 88E0      		ldi r24,lo8(8)
 718 0304 E89F      		mul r30,r24
 719 0306 F001      		movw r30,r0
 720 0308 1124      		clr __zero_reg__
 721 030a E050      		subi r30,lo8(-(RX_CommandQueue))
 722 030c F040      		sbci r31,hi8(-(RX_CommandQueue))
 723 030e E181      		ldd r30,Z+1
 150:MasterCom.cpp **** 		{
 724               		.loc 1 150 48 view .LVU198
 725 0310 E150      		subi r30,1
 726 0312 FF0B      		sbc r31,r31
 150:MasterCom.cpp **** 		{
 727               		.loc 1 150 51 view .LVU199
 728 0314 E050      		subi r30,lo8(-(RX_Buffer))
 729 0316 F040      		sbci r31,hi8(-(RX_Buffer))
 730 0318 8081      		ld r24,Z
 150:MasterCom.cpp **** 		{
 731               		.loc 1 150 3 view .LVU200
 732 031a 8F3E      		cpi r24,lo8(-17)
 733 031c 01F4      		brne .L30
 734               	.LBB19:
 152:MasterCom.cpp **** 			
 735               		.loc 1 152 4 is_stmt 1 view .LVU201
 152:MasterCom.cpp **** 			
 736               		.loc 1 152 20 is_stmt 0 view .LVU202
 737 031e E091 0000 		lds r30,RxHead
 152:MasterCom.cpp **** 			
 738               		.loc 1 152 65 view .LVU203
 739 0322 8091 0000 		lds r24,RX_Buffer+2
 152:MasterCom.cpp **** 			
 740               		.loc 1 152 36 view .LVU204
 741 0326 98E0      		ldi r25,lo8(8)
 742 0328 E99F      		mul r30,r25
 743 032a F001      		movw r30,r0
 744 032c 1124      		clr __zero_reg__
 745 032e E050      		subi r30,lo8(-(RX_CommandQueue))
 746 0330 F040      		sbci r31,hi8(-(RX_CommandQueue))
 747 0332 8083      		st Z,r24
 154:MasterCom.cpp **** 			{
 748               		.loc 1 154 4 is_stmt 1 view .LVU205
 749               	.LVL24:
 750               	.LBB20:
 154:MasterCom.cpp **** 			{
 751               		.loc 1 154 17 is_stmt 0 view .LVU206
 752 0334 80E0      		ldi r24,0
 753               	.LVL25:
 754               	.L32:
 154:MasterCom.cpp **** 			{
 755               		.loc 1 154 26 is_stmt 1 discriminator 3 view .LVU207
 154:MasterCom.cpp **** 			{
 756               		.loc 1 154 24 is_stmt 0 discriminator 3 view .LVU208
 757 0336 282F      		mov r18,r24
 758 0338 30E0      		ldi r19,0
 154:MasterCom.cpp **** 			{
 759               		.loc 1 154 45 discriminator 3 view .LVU209
 760 033a A091 0000 		lds r26,RxHead
 154:MasterCom.cpp **** 			{
 761               		.loc 1 154 53 discriminator 3 view .LVU210
 762 033e 48E0      		ldi r20,lo8(8)
 763 0340 A49F      		mul r26,r20
 764 0342 D001      		movw r26,r0
 765 0344 1124      		clr __zero_reg__
 766 0346 A050      		subi r26,lo8(-(RX_CommandQueue))
 767 0348 B040      		sbci r27,hi8(-(RX_CommandQueue))
 768 034a 1196      		adiw r26,1
 769 034c 4C91      		ld r20,X
 154:MasterCom.cpp **** 			{
 770               		.loc 1 154 60 discriminator 3 view .LVU211
 771 034e 4450      		subi r20,4
 772 0350 550B      		sbc r21,r21
 154:MasterCom.cpp **** 			{
 773               		.loc 1 154 26 discriminator 3 view .LVU212
 774 0352 2417      		cp r18,r20
 775 0354 3507      		cpc r19,r21
 776 0356 04F4      		brge .L31
 156:MasterCom.cpp **** 			}
 777               		.loc 1 156 5 is_stmt 1 discriminator 2 view .LVU213
 156:MasterCom.cpp **** 			}
 778               		.loc 1 156 21 is_stmt 0 discriminator 2 view .LVU214
 779 0358 E091 0000 		lds r30,RxHead
 156:MasterCom.cpp **** 			}
 780               		.loc 1 156 66 discriminator 2 view .LVU215
 781 035c D901      		movw r26,r18
 782 035e A050      		subi r26,lo8(-(RX_Buffer+3))
 783 0360 B040      		sbci r27,hi8(-(RX_Buffer+3))
 784 0362 9C91      		ld r25,X
 156:MasterCom.cpp **** 			}
 785               		.loc 1 156 37 discriminator 2 view .LVU216
 786 0364 48E0      		ldi r20,lo8(8)
 787 0366 E49F      		mul r30,r20
 788 0368 F001      		movw r30,r0
 789 036a 1124      		clr __zero_reg__
 790 036c E050      		subi r30,lo8(-(RX_CommandQueue))
 791 036e F040      		sbci r31,hi8(-(RX_CommandQueue))
 792 0370 E20F      		add r30,r18
 793 0372 F31F      		adc r31,r19
 794 0374 9283      		std Z+2,r25
 154:MasterCom.cpp **** 			{
 795               		.loc 1 154 4 is_stmt 1 discriminator 2 view .LVU217
 796 0376 8F5F      		subi r24,lo8(-(1))
 797               	.LVL26:
 154:MasterCom.cpp **** 			{
 798               		.loc 1 154 4 is_stmt 0 discriminator 2 view .LVU218
 799 0378 00C0      		rjmp .L32
 800               	.LVL27:
 801               	.L31:
 154:MasterCom.cpp **** 			{
 802               		.loc 1 154 4 discriminator 2 view .LVU219
 803               	.LBE20:
 160:MasterCom.cpp **** 				
 804               		.loc 1 160 4 is_stmt 1 view .LVU220
 160:MasterCom.cpp **** 				
 805               		.loc 1 160 35 is_stmt 0 view .LVU221
 806 037a 8091 0000 		lds r24,RxHead
 160:MasterCom.cpp **** 				
 807               		.loc 1 160 30 view .LVU222
 808 037e 8F5F      		subi r24,lo8(-(1))
 160:MasterCom.cpp **** 				
 809               		.loc 1 160 37 view .LVU223
 810 0380 8770      		andi r24,lo8(7)
 811               	.LVL28:
 162:MasterCom.cpp **** 			{
 812               		.loc 1 162 4 is_stmt 1 view .LVU224
 162:MasterCom.cpp **** 			{
 813               		.loc 1 162 17 is_stmt 0 view .LVU225
 814 0382 9091 0000 		lds r25,RxTail
 162:MasterCom.cpp **** 			{
 815               		.loc 1 162 4 view .LVU226
 816 0386 9813      		cpse r25,r24
 169:MasterCom.cpp **** 			}
 817               		.loc 1 169 5 is_stmt 1 view .LVU227
 169:MasterCom.cpp **** 			}
 818               		.loc 1 169 12 is_stmt 0 view .LVU228
 819 0388 8093 0000 		sts RxHead,r24
 820               	.LVL29:
 821               	.L33:
 169:MasterCom.cpp **** 			}
 822               		.loc 1 169 12 view .LVU229
 823               	.LBE19:
 824               	.LBE18:
 179:MasterCom.cpp **** 	}	
 825               		.loc 1 179 3 is_stmt 1 view .LVU230
 179:MasterCom.cpp **** 	}	
 826               		.loc 1 179 14 is_stmt 0 view .LVU231
 827 038c 1092 0000 		sts _ZZ17MasterCom_ReceivevE10RX_ByteCnt,__zero_reg__
 828               	.L21:
 829               	/* epilogue start */
 830               	.LBE17:
 831               	.LBE16:
 832               	.LBE24:
 833               	.LBE27:
 181:MasterCom.cpp **** 
 834               		.loc 1 181 1 view .LVU232
 835 0390 0895      		ret
 836               	.L30:
 837               	.LBB28:
 838               	.LBB25:
 839               	.LBB23:
 840               	.LBB22:
 841               	.LBB21:
 175:MasterCom.cpp **** 			MasterCom_DelayTXOvfCnt = 1;	// Start/reset Delay TX timer
 842               		.loc 1 175 4 is_stmt 1 view .LVU233
 175:MasterCom.cpp **** 			MasterCom_DelayTXOvfCnt = 1;	// Start/reset Delay TX timer
 843               		.loc 1 175 18 is_stmt 0 view .LVU234
 844 0392 8AE2      		ldi r24,lo8(42)
 845 0394 0E94 0000 		call _Z14UART_QueueCharh
 846               	.LVL30:
 176:MasterCom.cpp **** 		}
 847               		.loc 1 176 4 is_stmt 1 view .LVU235
 176:MasterCom.cpp **** 		}
 848               		.loc 1 176 28 is_stmt 0 view .LVU236
 849 0398 81E0      		ldi r24,lo8(1)
 850 039a 8093 0000 		sts MasterCom_DelayTXOvfCnt,r24
 851 039e 00C0      		rjmp .L33
 852               	.LBE21:
 853               	.LBE22:
 854               	.LBE23:
 855               	.LBE25:
 856               	.LBE28:
 857               		.cfi_endproc
 858               	.LFE4:
 860               	.global	_Z18MasterCom_Transmitv
 862               	_Z18MasterCom_Transmitv:
 863               	.LFB9:
 274:MasterCom.cpp **** 	/* Activate Transmit */
 864               		.loc 1 274 1 is_stmt 1 view -0
 865               		.cfi_startproc
 866               	/* prologue: function */
 867               	/* frame size = 0 */
 868               	/* stack size = 0 */
 869               	.L__stack_usage = 0
 276:MasterCom.cpp **** 	
 870               		.loc 1 276 2 view .LVU238
 871               	.LVL31:
 872               	.LBB29:
 873               	.LBI29:
 283:MasterCom.cpp **** {
 874               		.loc 1 283 6 view .LVU239
 875               	.LBB30:
 285:MasterCom.cpp **** 	{
 876               		.loc 1 285 2 view .LVU240
 877 03a0 0E94 0000 		call _Z12Select_RX_TXh.part.0
 878               	.LVL32:
 285:MasterCom.cpp **** 	{
 879               		.loc 1 285 2 is_stmt 0 view .LVU241
 880               	.LBE30:
 881               	.LBE29:
 279:MasterCom.cpp **** }
 882               		.loc 1 279 2 is_stmt 1 view .LVU242
 279:MasterCom.cpp **** }
 883               		.loc 1 279 15 is_stmt 0 view .LVU243
 884 03a4 0C94 0000 		jmp _Z13UART_PutQueuev
 885               	.LVL33:
 886               		.cfi_endproc
 887               	.LFE9:
 889               	.global	_Z12Select_RX_TXh
 891               	_Z12Select_RX_TXh:
 892               	.LVL34:
 893               	.LFB10:
 284:MasterCom.cpp **** 	if (dir == DIR_TRANSMIT)
 894               		.loc 1 284 1 is_stmt 1 view -0
 895               		.cfi_startproc
 896               	/* prologue: function */
 897               	/* frame size = 0 */
 898               	/* stack size = 0 */
 899               	.L__stack_usage = 0
 285:MasterCom.cpp **** 	{
 900               		.loc 1 285 2 view .LVU245
 901 03a8 8111      		cpse r24,__zero_reg__
 902 03aa 00C0      		rjmp .L39
 903 03ac 0C94 0000 		jmp _Z12Select_RX_TXh.part.0
 904               	.LVL35:
 905               	.L39:
 292:MasterCom.cpp **** 		SELECT_RX_TX_PORT &= ~(SELECT_TX_MASK);
 906               		.loc 1 292 3 view .LVU246
 292:MasterCom.cpp **** 		SELECT_RX_TX_PORT &= ~(SELECT_TX_MASK);
 907               		.loc 1 292 21 is_stmt 0 view .LVU247
 908 03b0 5E9A      		sbi 0xb,6
 293:MasterCom.cpp **** 	}
 909               		.loc 1 293 3 is_stmt 1 view .LVU248
 293:MasterCom.cpp **** 	}
 910               		.loc 1 293 21 is_stmt 0 view .LVU249
 911 03b2 5D98      		cbi 0xb,5
 912               	/* epilogue start */
 913               		.loc 1 295 1 view .LVU250
 914 03b4 0895      		ret
 915               		.cfi_endproc
 916               	.LFE10:
 918               	.global	_Z14MasterCom_Initv
 920               	_Z14MasterCom_Initv:
 921               	.LFB0:
  71:MasterCom.cpp **** 	/* Set RX/TX Select GPIOs to output */
 922               		.loc 1 71 1 is_stmt 1 view -0
 923               		.cfi_startproc
 924               	/* prologue: function */
 925               	/* frame size = 0 */
 926               	/* stack size = 0 */
 927               	.L__stack_usage = 0
  73:MasterCom.cpp **** 	
 928               		.loc 1 73 2 view .LVU252
  73:MasterCom.cpp **** 	
 929               		.loc 1 73 19 is_stmt 0 view .LVU253
 930 03b6 8AB1      		in r24,0xa
 931 03b8 8066      		ori r24,lo8(96)
 932 03ba 8AB9      		out 0xa,r24
  76:MasterCom.cpp **** 	
 933               		.loc 1 76 2 is_stmt 1 view .LVU254
  76:MasterCom.cpp **** 	
 934               		.loc 1 76 14 is_stmt 0 view .LVU255
 935 03bc 81E0      		ldi r24,lo8(1)
 936 03be 0E94 0000 		call _Z12Select_RX_TXh
 937               	.LVL36:
  79:MasterCom.cpp **** }
 938               		.loc 1 79 2 is_stmt 1 view .LVU256
  79:MasterCom.cpp **** }
 939               		.loc 1 79 9 is_stmt 0 view .LVU257
 940 03c2 E1EC      		ldi r30,lo8(-63)
 941 03c4 F0E0      		ldi r31,0
 942 03c6 8081      		ld r24,Z
 943 03c8 8064      		ori r24,lo8(64)
 944 03ca 8083      		st Z,r24
 945               	/* epilogue start */
  80:MasterCom.cpp **** 
 946               		.loc 1 80 1 view .LVU258
 947 03cc 0895      		ret
 948               		.cfi_endproc
 949               	.LFE0:
 951               	.global	__vector_20
 953               	__vector_20:
 954               	.LFB11:
 296:MasterCom.cpp **** 
 297:MasterCom.cpp **** 
 298:MasterCom.cpp **** /* TX Complete Interrupt ISR */
 299:MasterCom.cpp **** ISR(USART_TX_vect)
 300:MasterCom.cpp **** {
 955               		.loc 1 300 1 is_stmt 1 view -0
 956               		.cfi_startproc
 957 03ce 1F92      		push r1
 958               	.LCFI3:
 959               		.cfi_def_cfa_offset 3
 960               		.cfi_offset 1, -2
 961 03d0 0F92      		push r0
 962               	.LCFI4:
 963               		.cfi_def_cfa_offset 4
 964               		.cfi_offset 0, -3
 965 03d2 0FB6      		in r0,__SREG__
 966 03d4 0F92      		push r0
 967 03d6 1124      		clr __zero_reg__
 968 03d8 2F93      		push r18
 969               	.LCFI5:
 970               		.cfi_def_cfa_offset 5
 971               		.cfi_offset 18, -4
 972 03da 3F93      		push r19
 973               	.LCFI6:
 974               		.cfi_def_cfa_offset 6
 975               		.cfi_offset 19, -5
 976 03dc 4F93      		push r20
 977               	.LCFI7:
 978               		.cfi_def_cfa_offset 7
 979               		.cfi_offset 20, -6
 980 03de 5F93      		push r21
 981               	.LCFI8:
 982               		.cfi_def_cfa_offset 8
 983               		.cfi_offset 21, -7
 984 03e0 6F93      		push r22
 985               	.LCFI9:
 986               		.cfi_def_cfa_offset 9
 987               		.cfi_offset 22, -8
 988 03e2 7F93      		push r23
 989               	.LCFI10:
 990               		.cfi_def_cfa_offset 10
 991               		.cfi_offset 23, -9
 992 03e4 8F93      		push r24
 993               	.LCFI11:
 994               		.cfi_def_cfa_offset 11
 995               		.cfi_offset 24, -10
 996 03e6 9F93      		push r25
 997               	.LCFI12:
 998               		.cfi_def_cfa_offset 12
 999               		.cfi_offset 25, -11
 1000 03e8 AF93      		push r26
 1001               	.LCFI13:
 1002               		.cfi_def_cfa_offset 13
 1003               		.cfi_offset 26, -12
 1004 03ea BF93      		push r27
 1005               	.LCFI14:
 1006               		.cfi_def_cfa_offset 14
 1007               		.cfi_offset 27, -13
 1008 03ec EF93      		push r30
 1009               	.LCFI15:
 1010               		.cfi_def_cfa_offset 15
 1011               		.cfi_offset 30, -14
 1012 03ee FF93      		push r31
 1013               	.LCFI16:
 1014               		.cfi_def_cfa_offset 16
 1015               		.cfi_offset 31, -15
 1016               	/* prologue: Signal */
 1017               	/* frame size = 0 */
 1018               	/* stack size = 15 */
 1019               	.L__stack_usage = 15
 301:MasterCom.cpp **** 	/* Deactivate Transmit */
 302:MasterCom.cpp **** 	Select_RX_TX(DIR_RECEIVE);
 1020               		.loc 1 302 2 view .LVU260
 1021               		.loc 1 302 14 is_stmt 0 view .LVU261
 1022 03f0 81E0      		ldi r24,lo8(1)
 1023 03f2 0E94 0000 		call _Z12Select_RX_TXh
 1024               	.LVL37:
 1025               	/* epilogue start */
 303:MasterCom.cpp **** }...
 1026               		.loc 1 303 1 view .LVU262
 1027 03f6 FF91      		pop r31
 1028 03f8 EF91      		pop r30
 1029 03fa BF91      		pop r27
 1030 03fc AF91      		pop r26
 1031 03fe 9F91      		pop r25
 1032 0400 8F91      		pop r24
 1033 0402 7F91      		pop r23
 1034 0404 6F91      		pop r22
 1035 0406 5F91      		pop r21
 1036 0408 4F91      		pop r20
 1037 040a 3F91      		pop r19
 1038 040c 2F91      		pop r18
 1039 040e 0F90      		pop r0
 1040 0410 0FBE      		out __SREG__,r0
 1041 0412 0F90      		pop r0
 1042 0414 1F90      		pop r1
 1043 0416 1895      		reti
 1044               		.cfi_endproc
 1045               	.LFE11:
 1047               		.local	_ZZ17MasterCom_ReceivevE10RX_ByteCnt
 1048               		.comm	_ZZ17MasterCom_ReceivevE10RX_ByteCnt,1,1
 1049               	.global	RetransmitCnt
 1050               		.section .bss
 1053               	RetransmitCnt:
 1054 0000 00        		.zero	1
 1055               	.global	TxTail
 1058               	TxTail:
 1059 0001 00        		.zero	1
 1060               	.global	TxHead
 1063               	TxHead:
 1064 0002 00        		.zero	1
 1065               	.global	RxTail
 1068               	RxTail:
 1069 0003 00        		.zero	1
 1070               	.global	RxHead
 1073               	RxHead:
 1074 0004 00        		.zero	1
 1075               	.global	TX_CommandQueue
 1076               		.data
 1079               	TX_CommandQueue:
 1080 0000 00        		.byte	0
 1081 0001 00        		.byte	0
 1082 0002 00        		.string	""
 1083 0003 0000 00   		.zero	3
 1084 0006 00        		.byte	0
 1085 0007 01        		.byte	1
 1086 0008 0000 0000 		.zero	24
 1086      0000 0000 
 1086      0000 0000 
 1086      0000 0000 
 1086      0000 0000 
 1087               	.global	RX_CommandQueue
 1088               		.section .bss
 1091               	RX_CommandQueue:
 1092 0005 0000 0000 		.zero	64
 1092      0000 0000 
 1092      0000 0000 
 1092      0000 0000 
 1092      0000 0000 
 1093               	.global	RX_Buffer
 1096               	RX_Buffer:
 1097 0045 0000 0000 		.zero	28
 1097      0000 0000 
 1097      0000 0000 
 1097      0000 0000 
 1097      0000 0000 
 1098               	.global	MasterCom_FullFrameTimeoutFlag
 1101               	MasterCom_FullFrameTimeoutFlag:
 1102 0061 00        		.zero	1
 1103               	.global	MasterCom_FullFrameTimeoutOvfCnt
 1106               	MasterCom_FullFrameTimeoutOvfCnt:
 1107 0062 0000      		.zero	2
 1108               	.global	MasterCom_ResponseTimeoutFlag
 1111               	MasterCom_ResponseTimeoutFlag:
 1112 0064 00        		.zero	1
 1113               	.global	MasterCom_ResponseTimeoutOvfCnt
 1116               	MasterCom_ResponseTimeoutOvfCnt:
 1117 0065 0000      		.zero	2
 1118               	.global	MasterCom_DelayTXOvfCnt
 1121               	MasterCom_DelayTXOvfCnt:
 1122 0067 00        		.zero	1
 1123               	.global	MasterCom_DelayTxFlag
 1126               	MasterCom_DelayTxFlag:
 1127 0068 00        		.zero	1
 1128               		.text
 1129               	.Letext0:
 1130               		.file 2 "/usr/avr/include/stdint.h"
 1131               		.file 3 "MasterCom.h"
 1132               		.file 4 "Footswitch.h"
 1133               		.file 5 "System.h"
 1134               		.file 6 "UART.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 MasterCom.cpp
     /tmp/cc3L7v7C.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc3L7v7C.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc3L7v7C.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc3L7v7C.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc3L7v7C.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc3L7v7C.s:11     .text:0000000000000000 _Z12Select_RX_TXh.part.0
     /tmp/cc3L7v7C.s:35     .text:0000000000000006 _Z21MasterCom_RxAvailablev
     /tmp/cc3L7v7C.s:1073   .bss:0000000000000004 RxHead
     /tmp/cc3L7v7C.s:1068   .bss:0000000000000003 RxTail
     /tmp/cc3L7v7C.s:60     .text:0000000000000018 _Z21MasterCom_TxAvailablev
     /tmp/cc3L7v7C.s:1063   .bss:0000000000000002 TxHead
     /tmp/cc3L7v7C.s:1058   .bss:0000000000000001 TxTail
     /tmp/cc3L7v7C.s:85     .text:000000000000002a _Z22MasterCom_FlushTxQueuev
     /tmp/cc3L7v7C.s:1079   .data:0000000000000000 TX_CommandQueue
     /tmp/cc3L7v7C.s:117    .text:0000000000000048 _Z24MasterCom_HandleReceivedv
     /tmp/cc3L7v7C.s:1091   .bss:0000000000000005 RX_CommandQueue
     /tmp/cc3L7v7C.s:1121   .bss:0000000000000067 MasterCom_DelayTXOvfCnt
     /tmp/cc3L7v7C.s:185    .text:000000000000009a _Z22MasterCom_QueueCommand3CMDhPh
     /tmp/cc3L7v7C.s:334    .text:000000000000013a _Z20MasterCom_PutCommandv
     /tmp/cc3L7v7C.s:1126   .bss:0000000000000068 MasterCom_DelayTxFlag
     /tmp/cc3L7v7C.s:1116   .bss:0000000000000065 MasterCom_ResponseTimeoutOvfCnt
     /tmp/cc3L7v7C.s:524    .text:0000000000000222 _Z27MasterCom_PrepareRetransmitv
     /tmp/cc3L7v7C.s:1053   .bss:0000000000000000 RetransmitCnt
     /tmp/cc3L7v7C.s:569    .text:0000000000000248 _Z17MasterCom_Receivev
                             .bss:0000000000000069 _ZZ17MasterCom_ReceivevE10RX_ByteCnt
     /tmp/cc3L7v7C.s:1096   .bss:0000000000000045 RX_Buffer
     /tmp/cc3L7v7C.s:1106   .bss:0000000000000062 MasterCom_FullFrameTimeoutOvfCnt
     /tmp/cc3L7v7C.s:862    .text:00000000000003a0 _Z18MasterCom_Transmitv
     /tmp/cc3L7v7C.s:891    .text:00000000000003a8 _Z12Select_RX_TXh
     /tmp/cc3L7v7C.s:920    .text:00000000000003b6 _Z14MasterCom_Initv
     /tmp/cc3L7v7C.s:953    .text:00000000000003ce __vector_20
     /tmp/cc3L7v7C.s:1101   .bss:0000000000000061 MasterCom_FullFrameTimeoutFlag
     /tmp/cc3L7v7C.s:1111   .bss:0000000000000064 MasterCom_ResponseTimeoutFlag

UNDEFINED SYMBOLS
_Z26System_HandleMasterCommand3CMDhPh
_Z14UART_QueueCharh
_Z12UART_GetCharv
_Z13UART_PutQueuev
__do_copy_data
__do_clear_bss
