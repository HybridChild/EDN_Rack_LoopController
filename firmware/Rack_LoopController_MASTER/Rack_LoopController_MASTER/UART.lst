   1               		.file	"UART.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	_Z10UART0_Initjhh
  12               	_Z10UART0_Initjhh:
  13               	.LVL0:
  14               	.LFB1:
  15               		.file 1 "UART.cpp"
   1:UART.cpp      **** /*
   2:UART.cpp      ****  * UART.cpp
   3:UART.cpp      ****  *
   4:UART.cpp      ****  * Created: 26-01-2020 22:13:14
   5:UART.cpp      ****  *  Author: Esben
   6:UART.cpp      ****  */ 
   7:UART.cpp      **** 
   8:UART.cpp      **** #include <avr/io.h>
   9:UART.cpp      **** #include <avr/interrupt.h>
  10:UART.cpp      **** #include <avr/pgmspace.h>
  11:UART.cpp      **** #include <stddef.h>
  12:UART.cpp      **** #include "UART.h"
  13:UART.cpp      **** 
  14:UART.cpp      **** 
  15:UART.cpp      **** #ifndef F_CPU
  16:UART.cpp      **** #define F_CPU 20000000UL
  17:UART.cpp      **** #endif
  18:UART.cpp      **** 
  19:UART.cpp      **** /* Size of the circular receive/transmit buffers, must be power of 2 */
  20:UART.cpp      **** #define UART0_RX_BUFFER_SIZE 64
  21:UART.cpp      **** #define UART0_TX_BUFFER_SIZE 64
  22:UART.cpp      **** #define UART1_RX_BUFFER_SIZE 64
  23:UART.cpp      **** #define UART1_TX_BUFFER_SIZE 64
  24:UART.cpp      **** 
  25:UART.cpp      **** /* size of RX/TX buffers */
  26:UART.cpp      **** #define UART0_RX_BUFFER_MASK	( UART0_RX_BUFFER_SIZE - 1)
  27:UART.cpp      **** #define UART0_TX_BUFFER_MASK	( UART0_TX_BUFFER_SIZE - 1)
  28:UART.cpp      **** #define UART1_RX_BUFFER_MASK	( UART1_RX_BUFFER_SIZE - 1)
  29:UART.cpp      **** #define UART1_TX_BUFFER_MASK	( UART1_TX_BUFFER_SIZE - 1)
  30:UART.cpp      **** 
  31:UART.cpp      **** /* module global variables */
  32:UART.cpp      **** static volatile unsigned char UART0_TxBuf[UART0_TX_BUFFER_SIZE];
  33:UART.cpp      **** static volatile unsigned char UART0_RxBuf[UART0_RX_BUFFER_SIZE];
  34:UART.cpp      **** static volatile unsigned char UART0_TxHead;
  35:UART.cpp      **** static volatile unsigned char UART0_TxTail;
  36:UART.cpp      **** static volatile unsigned char UART0_RxHead;
  37:UART.cpp      **** static volatile unsigned char UART0_RxTail;
  38:UART.cpp      **** static volatile unsigned char UART0_LastRxError;
  39:UART.cpp      **** 
  40:UART.cpp      **** static volatile unsigned char UART1_TxBuf[UART1_TX_BUFFER_SIZE];
  41:UART.cpp      **** static volatile unsigned char UART1_RxBuf[UART1_RX_BUFFER_SIZE];
  42:UART.cpp      **** static volatile unsigned char UART1_TxHead;
  43:UART.cpp      **** static volatile unsigned char UART1_TxTail;
  44:UART.cpp      **** static volatile unsigned char UART1_RxHead;
  45:UART.cpp      **** static volatile unsigned char UART1_RxTail;
  46:UART.cpp      **** static volatile unsigned char UART1_LastRxError;
  47:UART.cpp      **** 
  48:UART.cpp      **** 
  49:UART.cpp      **** /*************************************************************************
  50:UART.cpp      **** Function: UART0_Init()
  51:UART.cpp      **** Purpose:  initialize UART0 and set baudrate
  52:UART.cpp      **** Input:    baudrate, stop bits, parity
  53:UART.cpp      **** Returns:  none
  54:UART.cpp      **** **************************************************************************/
  55:UART.cpp      **** void UART0_Init(unsigned int baudrate, unsigned char stopbit, unsigned char parity)
  56:UART.cpp      **** {
  16               		.loc 1 56 1 view -0
  17               		.cfi_startproc
  18               		.loc 1 56 1 is_stmt 0 view .LVU1
  19 0000 CF93      		push r28
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 28, -2
  23 0002 DF93      		push r29
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 29, -3
  27               	/* prologue: function */
  28               	/* frame size = 0 */
  29               	/* stack size = 2 */
  30               	.L__stack_usage = 2
  31 0004 D62F      		mov r29,r22
  32 0006 C42F      		mov r28,r20
  57:UART.cpp      **** 	DDRD |= (1 << PORTD1);
  33               		.loc 1 57 2 is_stmt 1 view .LVU2
  34               		.loc 1 57 7 is_stmt 0 view .LVU3
  35 0008 519A      		sbi 0xa,1
  58:UART.cpp      **** 	PORTD |= (1 << PORTD1);
  36               		.loc 1 58 2 is_stmt 1 view .LVU4
  37               		.loc 1 58 8 is_stmt 0 view .LVU5
  38 000a 599A      		sbi 0xb,1
  59:UART.cpp      **** 	
  60:UART.cpp      **** 	UART0_TxHead = 0;
  39               		.loc 1 60 2 is_stmt 1 view .LVU6
  40               		.loc 1 60 15 is_stmt 0 view .LVU7
  41 000c 1092 0000 		sts _ZL12UART0_TxHead,__zero_reg__
  61:UART.cpp      **** 	UART0_TxTail = 0;
  42               		.loc 1 61 2 is_stmt 1 view .LVU8
  43               		.loc 1 61 15 is_stmt 0 view .LVU9
  44 0010 1092 0000 		sts _ZL12UART0_TxTail,__zero_reg__
  62:UART.cpp      **** 	UART0_RxHead = 0;
  45               		.loc 1 62 2 is_stmt 1 view .LVU10
  46               		.loc 1 62 15 is_stmt 0 view .LVU11
  47 0014 1092 0000 		sts _ZL12UART0_RxHead,__zero_reg__
  63:UART.cpp      **** 	UART0_RxTail = 0;
  48               		.loc 1 63 2 is_stmt 1 view .LVU12
  49               		.loc 1 63 15 is_stmt 0 view .LVU13
  50 0018 1092 0000 		sts _ZL12UART0_RxTail,__zero_reg__
  64:UART.cpp      **** 	
  65:UART.cpp      **** 	baudrate = UART_BAUD_SELECT(baudrate, F_CPU);
  51               		.loc 1 65 2 is_stmt 1 view .LVU14
  52               		.loc 1 65 13 is_stmt 0 view .LVU15
  53 001c B0E0      		ldi r27,0
  54 001e A0E0      		ldi r26,0
  55 0020 9C01      		movw r18,r24
  56 0022 AD01      		movw r20,r26
  57               	.LVL1:
  58               		.loc 1 65 13 view .LVU16
  59 0024 84E0      		ldi r24,4
  60               		1:
  61 0026 220F      		lsl r18
  62 0028 331F      		rol r19
  63 002a 441F      		rol r20
  64 002c 551F      		rol r21
  65 002e 8A95      		dec r24
  66 0030 01F4      		brne 1b
  67               	.LVL2:
  68               		.loc 1 65 13 view .LVU17
  69 0032 60E0      		ldi r22,0
  70 0034 7DE2      		ldi r23,lo8(45)
  71 0036 81E3      		ldi r24,lo8(49)
  72 0038 91E0      		ldi r25,lo8(1)
  73               	.LVL3:
  74               		.loc 1 65 13 view .LVU18
  75 003a 0E94 0000 		call __udivmodsi4
  76               		.loc 1 65 11 view .LVU19
  77 003e 2150      		subi r18,1
  78 0040 3109      		sbc r19,__zero_reg__
  79               	.LVL4:
  66:UART.cpp      **** 	
  67:UART.cpp      **** 	/*Set baud rate */
  68:UART.cpp      **** 	UBRR0H = (unsigned char)(baudrate >> 8);
  80               		.loc 1 68 2 is_stmt 1 view .LVU20
  81               		.loc 1 68 9 is_stmt 0 view .LVU21
  82 0042 3093 C500 		sts 197,r19
  69:UART.cpp      **** 	UBRR0L = (unsigned char)baudrate;
  83               		.loc 1 69 2 is_stmt 1 view .LVU22
  84               		.loc 1 69 9 is_stmt 0 view .LVU23
  85 0046 2093 C400 		sts 196,r18
  70:UART.cpp      **** 	
  71:UART.cpp      **** 	/* Set USART Mode */
  72:UART.cpp      **** 	UCSR0C &= ~((1 << UMSEL01) | (1 << UMSEL00));		// Asynchronous USART
  86               		.loc 1 72 2 is_stmt 1 view .LVU24
  87               		.loc 1 72 9 is_stmt 0 view .LVU25
  88 004a 8091 C200 		lds r24,194
  89 004e 8F73      		andi r24,lo8(63)
  90 0050 8093 C200 		sts 194,r24
  73:UART.cpp      **** 	
  74:UART.cpp      **** 	/* Set Stop Bit(s) */
  75:UART.cpp      **** 	if (stopbit == UART_2_STOP_BITS)
  91               		.loc 1 75 2 is_stmt 1 view .LVU26
  76:UART.cpp      **** 		UCSR0C |= (1 << USBS0);							// 2 Stop bits
  92               		.loc 1 76 10 is_stmt 0 view .LVU27
  93 0054 8091 C200 		lds r24,194
  75:UART.cpp      **** 		UCSR0C |= (1 << USBS0);							// 2 Stop bits
  94               		.loc 1 75 2 view .LVU28
  95 0058 D230      		cpi r29,lo8(2)
  96 005a 01F4      		brne .L2
  97               		.loc 1 76 3 is_stmt 1 view .LVU29
  98               		.loc 1 76 10 is_stmt 0 view .LVU30
  99 005c 8860      		ori r24,lo8(8)
 100               	.L7:
  77:UART.cpp      **** 	else
  78:UART.cpp      **** 		UCSR0C &= ~(1 << USBS0);						// 1 Stop bit
 101               		.loc 1 78 10 view .LVU31
 102 005e 8093 C200 		sts 194,r24
  79:UART.cpp      **** 
  80:UART.cpp      **** 	/* Set Parity */
  81:UART.cpp      **** 	if (parity == UART_EVEN_PARITY)
 103               		.loc 1 81 2 is_stmt 1 view .LVU32
  82:UART.cpp      **** 	{
  83:UART.cpp      **** 		UCSR0C &= ~(1 << UPM00);
 104               		.loc 1 83 10 is_stmt 0 view .LVU33
 105 0062 8091 C200 		lds r24,194
  81:UART.cpp      **** 	{
 106               		.loc 1 81 2 view .LVU34
 107 0066 C230      		cpi r28,lo8(2)
 108 0068 01F4      		brne .L4
 109               		.loc 1 83 3 is_stmt 1 view .LVU35
 110               		.loc 1 83 10 is_stmt 0 view .LVU36
 111 006a 8F7E      		andi r24,lo8(-17)
 112 006c 8093 C200 		sts 194,r24
  84:UART.cpp      **** 		UCSR0C |= (1 << UPM01);							// Even parity
 113               		.loc 1 84 3 is_stmt 1 view .LVU37
 114               		.loc 1 84 10 is_stmt 0 view .LVU38
 115 0070 8091 C200 		lds r24,194
 116 0074 8062      		ori r24,lo8(32)
 117               	.L8:
  85:UART.cpp      **** 	}
  86:UART.cpp      **** 	else if (parity == UART_ODD_PARITY)
  87:UART.cpp      **** 	{
  88:UART.cpp      **** 		UCSR0C |= ((1 << UPM01) | (1 << UPM00));		// Odd parity
  89:UART.cpp      **** 	}
  90:UART.cpp      **** 	else
  91:UART.cpp      **** 		UCSR0C &= ~((1 << UPM01) | (1 << UPM00));		// No parity
 118               		.loc 1 91 10 view .LVU39
 119 0076 8093 C200 		sts 194,r24
  92:UART.cpp      **** 	
  93:UART.cpp      **** 	/* Set Data Bits */
  94:UART.cpp      **** 	UCSR0C |= ((1 << UCSZ01) | (1 << UCSZ00));			// 8 Data bits
 120               		.loc 1 94 2 is_stmt 1 view .LVU40
 121               		.loc 1 94 9 is_stmt 0 view .LVU41
 122 007a 8091 C200 		lds r24,194
 123 007e 8660      		ori r24,lo8(6)
 124 0080 8093 C200 		sts 194,r24
  95:UART.cpp      **** 
  96:UART.cpp      **** 	/* Enable interrupts */
  97:UART.cpp      **** 	UCSR0B |= ((1 << RXCIE0) | (1 << UDRIE0));
 125               		.loc 1 97 2 is_stmt 1 view .LVU42
 126               		.loc 1 97 9 is_stmt 0 view .LVU43
 127 0084 8091 C100 		lds r24,193
 128 0088 806A      		ori r24,lo8(-96)
 129 008a 8093 C100 		sts 193,r24
  98:UART.cpp      **** 	
  99:UART.cpp      **** 	/*Enable receiver and transmitter */
 100:UART.cpp      **** 	UCSR0B |= ((1 << RXEN0) | (1 << TXEN0));
 130               		.loc 1 100 2 is_stmt 1 view .LVU44
 131               		.loc 1 100 9 is_stmt 0 view .LVU45
 132 008e 8091 C100 		lds r24,193
 133 0092 8861      		ori r24,lo8(24)
 134 0094 8093 C100 		sts 193,r24
 135               	/* epilogue start */
 101:UART.cpp      **** }
 136               		.loc 1 101 1 view .LVU46
 137 0098 DF91      		pop r29
 138               	.LVL5:
 139               		.loc 1 101 1 view .LVU47
 140 009a CF91      		pop r28
 141               	.LVL6:
 142               		.loc 1 101 1 view .LVU48
 143 009c 0895      		ret
 144               	.LVL7:
 145               	.L2:
  78:UART.cpp      **** 
 146               		.loc 1 78 3 is_stmt 1 view .LVU49
  78:UART.cpp      **** 
 147               		.loc 1 78 10 is_stmt 0 view .LVU50
 148 009e 877F      		andi r24,lo8(-9)
 149 00a0 00C0      		rjmp .L7
 150               	.L4:
  86:UART.cpp      **** 	{
 151               		.loc 1 86 7 is_stmt 1 view .LVU51
 152 00a2 C330      		cpi r28,lo8(3)
 153 00a4 01F4      		brne .L6
  88:UART.cpp      **** 	}
 154               		.loc 1 88 3 view .LVU52
  88:UART.cpp      **** 	}
 155               		.loc 1 88 10 is_stmt 0 view .LVU53
 156 00a6 8063      		ori r24,lo8(48)
 157 00a8 00C0      		rjmp .L8
 158               	.L6:
  91:UART.cpp      **** 	
 159               		.loc 1 91 3 is_stmt 1 view .LVU54
  91:UART.cpp      **** 	
 160               		.loc 1 91 10 is_stmt 0 view .LVU55
 161 00aa 8F7C      		andi r24,lo8(-49)
 162 00ac 00C0      		rjmp .L8
 163               		.cfi_endproc
 164               	.LFE1:
 166               	.global	_Z13UART0_GetCharv
 168               	_Z13UART0_GetCharv:
 169               	.LFB2:
 102:UART.cpp      **** 
 103:UART.cpp      **** 
 104:UART.cpp      **** /*************************************************************************
 105:UART.cpp      **** Function: UART0_GetChar()
 106:UART.cpp      **** Purpose:  return byte from ringbuffer  
 107:UART.cpp      **** Returns:  lower byte:  received byte from ringbuffer
 108:UART.cpp      ****           higher byte: last receive error
 109:UART.cpp      **** **************************************************************************/
 110:UART.cpp      **** unsigned int UART0_GetChar(void)
 111:UART.cpp      **** {
 170               		.loc 1 111 1 is_stmt 1 view -0
 171               		.cfi_startproc
 172               	/* prologue: function */
 173               	/* frame size = 0 */
 174               	/* stack size = 0 */
 175               	.L__stack_usage = 0
 112:UART.cpp      **** 	unsigned char tmptail;
 176               		.loc 1 112 2 view .LVU57
 113:UART.cpp      **** 	unsigned char data;
 177               		.loc 1 113 2 view .LVU58
 114:UART.cpp      **** 
 115:UART.cpp      **** 	if ( UART0_RxHead == UART0_RxTail )
 178               		.loc 1 115 2 view .LVU59
 179               		.loc 1 115 20 is_stmt 0 view .LVU60
 180 00ae 9091 0000 		lds r25,_ZL12UART0_RxHead
 181 00b2 8091 0000 		lds r24,_ZL12UART0_RxTail
 182               		.loc 1 115 2 view .LVU61
 183 00b6 9817      		cp r25,r24
 184 00b8 01F0      		breq .L11
 116:UART.cpp      **** 	{
 117:UART.cpp      **** 		return UART_NO_DATA;   /* no data available */
 118:UART.cpp      **** 	}
 119:UART.cpp      ****     
 120:UART.cpp      **** 	/* calculate /store buffer index */
 121:UART.cpp      **** 	tmptail = (UART0_RxTail + 1) & UART0_RX_BUFFER_MASK;
 185               		.loc 1 121 2 is_stmt 1 view .LVU62
 186               		.loc 1 121 31 is_stmt 0 view .LVU63
 187 00ba E091 0000 		lds r30,_ZL12UART0_RxTail
 188               		.loc 1 121 26 view .LVU64
 189 00be EF5F      		subi r30,lo8(-(1))
 190               		.loc 1 121 10 view .LVU65
 191 00c0 EF73      		andi r30,lo8(63)
 192               	.LVL8:
 122:UART.cpp      **** 	UART0_RxTail = tmptail;
 193               		.loc 1 122 2 is_stmt 1 view .LVU66
 194               		.loc 1 122 15 is_stmt 0 view .LVU67
 195 00c2 E093 0000 		sts _ZL12UART0_RxTail,r30
 123:UART.cpp      ****     
 124:UART.cpp      **** 	/* get data from receive buffer */
 125:UART.cpp      **** 	data = UART0_RxBuf[tmptail];
 196               		.loc 1 125 2 is_stmt 1 view .LVU68
 197               		.loc 1 125 21 is_stmt 0 view .LVU69
 198 00c6 F0E0      		ldi r31,0
 199               		.loc 1 125 7 view .LVU70
 200 00c8 E050      		subi r30,lo8(-(_ZL11UART0_RxBuf))
 201 00ca F040      		sbci r31,hi8(-(_ZL11UART0_RxBuf))
 202               	.LVL9:
 203               		.loc 1 125 7 view .LVU71
 204 00cc 2081      		ld r18,Z
 205               	.LVL10:
 126:UART.cpp      ****     
 127:UART.cpp      **** 	return (UART0_LastRxError << 8) + data;
 206               		.loc 1 127 2 is_stmt 1 view .LVU72
 207               		.loc 1 127 10 is_stmt 0 view .LVU73
 208 00ce 8091 0000 		lds r24,_ZL17UART0_LastRxError
 209 00d2 90E0      		ldi r25,0
 210               		.loc 1 127 28 view .LVU74
 211 00d4 982F      		mov r25,r24
 212 00d6 8827      		clr r24
 213               		.loc 1 127 34 view .LVU75
 214 00d8 820F      		add r24,r18
 215 00da 911D      		adc r25,__zero_reg__
 216               		.loc 1 127 36 view .LVU76
 217 00dc 0895      		ret
 218               	.LVL11:
 219               	.L11:
 117:UART.cpp      **** 	}
 220               		.loc 1 117 10 view .LVU77
 221 00de 80E0      		ldi r24,0
 222 00e0 91E0      		ldi r25,lo8(1)
 223               	/* epilogue start */
 128:UART.cpp      **** }
 224               		.loc 1 128 1 view .LVU78
 225 00e2 0895      		ret
 226               		.cfi_endproc
 227               	.LFE2:
 229               	.global	_Z13UART0_PutCharh
 231               	_Z13UART0_PutCharh:
 232               	.LVL12:
 233               	.LFB3:
 129:UART.cpp      **** 
 130:UART.cpp      **** 
 131:UART.cpp      **** /*************************************************************************
 132:UART.cpp      **** Function: UART0_PutChar()
 133:UART.cpp      **** Purpose:  write byte to ringbuffer for transmitting via UART
 134:UART.cpp      **** Input:    byte to be transmitted
 135:UART.cpp      **** Returns:  none
 136:UART.cpp      **** **************************************************************************/
 137:UART.cpp      **** void UART0_PutChar(unsigned char data)
 138:UART.cpp      **** {
 234               		.loc 1 138 1 is_stmt 1 view -0
 235               		.cfi_startproc
 236               	/* prologue: function */
 237               	/* frame size = 0 */
 238               	/* stack size = 0 */
 239               	.L__stack_usage = 0
 139:UART.cpp      **** 	unsigned char tmphead;
 240               		.loc 1 139 2 view .LVU80
 140:UART.cpp      ****     
 141:UART.cpp      **** 	/* calculate buffer index */
 142:UART.cpp      **** 	tmphead  = (UART0_TxHead + 1) & UART0_TX_BUFFER_MASK;
 241               		.loc 1 142 2 view .LVU81
 242               		.loc 1 142 32 is_stmt 0 view .LVU82
 243 00e4 9091 0000 		lds r25,_ZL12UART0_TxHead
 244               		.loc 1 142 27 view .LVU83
 245 00e8 9F5F      		subi r25,lo8(-(1))
 246               		.loc 1 142 11 view .LVU84
 247 00ea 9F73      		andi r25,lo8(63)
 248               	.LVL13:
 249               	.L13:
 143:UART.cpp      ****     
 144:UART.cpp      **** 	/* wait for free space in buffer */
 145:UART.cpp      **** 	while ( tmphead == UART0_TxTail );
 250               		.loc 1 145 2 is_stmt 1 view .LVU85
 251               		.loc 1 145 18 view .LVU86
 252 00ec 2091 0000 		lds r18,_ZL12UART0_TxTail
 253 00f0 2917      		cp r18,r25
 254 00f2 01F0      		breq .L13
 146:UART.cpp      ****     
 147:UART.cpp      **** 	UART0_TxBuf[tmphead] = data;
 255               		.loc 1 147 2 view .LVU87
 256               		.loc 1 147 14 is_stmt 0 view .LVU88
 257 00f4 E92F      		mov r30,r25
 258 00f6 F0E0      		ldi r31,0
 259               		.loc 1 147 23 view .LVU89
 260 00f8 E050      		subi r30,lo8(-(_ZL11UART0_TxBuf))
 261 00fa F040      		sbci r31,hi8(-(_ZL11UART0_TxBuf))
 262 00fc 8083      		st Z,r24
 148:UART.cpp      **** 	UART0_TxHead = tmphead;
 263               		.loc 1 148 2 is_stmt 1 view .LVU90
 264               		.loc 1 148 15 is_stmt 0 view .LVU91
 265 00fe 9093 0000 		sts _ZL12UART0_TxHead,r25
 149:UART.cpp      **** 
 150:UART.cpp      **** 	/* enable UDRE interrupt */
 151:UART.cpp      **** 	UCSR0B |= (1 << UDRIE0);
 266               		.loc 1 151 2 is_stmt 1 view .LVU92
 267               		.loc 1 151 9 is_stmt 0 view .LVU93
 268 0102 8091 C100 		lds r24,193
 269               	.LVL14:
 270               		.loc 1 151 9 view .LVU94
 271 0106 8062      		ori r24,lo8(32)
 272 0108 8093 C100 		sts 193,r24
 273               	/* epilogue start */
 152:UART.cpp      **** }
 274               		.loc 1 152 1 view .LVU95
 275 010c 0895      		ret
 276               		.cfi_endproc
 277               	.LFE3:
 279               	.global	_Z15UART0_PutStringPKc
 281               	_Z15UART0_PutStringPKc:
 282               	.LVL15:
 283               	.LFB4:
 153:UART.cpp      **** 
 154:UART.cpp      **** 
 155:UART.cpp      **** /*************************************************************************
 156:UART.cpp      **** Function: UART0_PutString()
 157:UART.cpp      **** Purpose:  transmit string to UART
 158:UART.cpp      **** Input:    string to be transmitted
 159:UART.cpp      **** Returns:  none
 160:UART.cpp      **** **************************************************************************/
 161:UART.cpp      **** void UART0_PutString(const char *s )
 162:UART.cpp      **** {
 284               		.loc 1 162 1 is_stmt 1 view -0
 285               		.cfi_startproc
 286               		.loc 1 162 1 is_stmt 0 view .LVU97
 287 010e CF93      		push r28
 288               	.LCFI2:
 289               		.cfi_def_cfa_offset 3
 290               		.cfi_offset 28, -2
 291 0110 DF93      		push r29
 292               	.LCFI3:
 293               		.cfi_def_cfa_offset 4
 294               		.cfi_offset 29, -3
 295               	/* prologue: function */
 296               	/* frame size = 0 */
 297               	/* stack size = 2 */
 298               	.L__stack_usage = 2
 299 0112 EC01      		movw r28,r24
 300               	.LVL16:
 301               	.L17:
 163:UART.cpp      ****     while (*s)
 302               		.loc 1 163 5 is_stmt 1 view .LVU98
 303               		.loc 1 163 12 view .LVU99
 304 0114 8991      		ld r24,Y+
 305               	.LVL17:
 306               		.loc 1 163 12 is_stmt 0 view .LVU100
 307 0116 8823      		tst r24
 308 0118 01F0      		breq .L15
 164:UART.cpp      **** 	{
 165:UART.cpp      **** 		UART0_PutChar(*s++);
 309               		.loc 1 165 3 is_stmt 1 view .LVU101
 310               	.LVL18:
 311               		.loc 1 165 16 is_stmt 0 view .LVU102
 312 011a 0E94 0000 		call _Z13UART0_PutCharh
 313               	.LVL19:
 163:UART.cpp      ****     while (*s)
 314               		.loc 1 163 5 view .LVU103
 315 011e 00C0      		rjmp .L17
 316               	.LVL20:
 317               	.L15:
 318               	/* epilogue start */
 166:UART.cpp      **** 	}
 167:UART.cpp      **** }
 319               		.loc 1 167 1 view .LVU104
 320 0120 DF91      		pop r29
 321 0122 CF91      		pop r28
 322               	.LVL21:
 323               		.loc 1 167 1 view .LVU105
 324 0124 0895      		ret
 325               		.cfi_endproc
 326               	.LFE4:
 328               	.global	_Z17UART0_PutString_pPKc
 330               	_Z17UART0_PutString_pPKc:
 331               	.LVL22:
 332               	.LFB5:
 168:UART.cpp      **** 
 169:UART.cpp      **** 
 170:UART.cpp      **** /*************************************************************************
 171:UART.cpp      **** Function: UART0_PutString_p()
 172:UART.cpp      **** Purpose:  transmit string from program memory to UART
 173:UART.cpp      **** Input:    program memory string to be transmitted
 174:UART.cpp      **** Returns:  none
 175:UART.cpp      **** **************************************************************************/
 176:UART.cpp      **** void UART0_PutString_p(const char *progmem_s )
 177:UART.cpp      **** {
 333               		.loc 1 177 1 is_stmt 1 view -0
 334               		.cfi_startproc
 335               		.loc 1 177 1 is_stmt 0 view .LVU107
 336 0126 CF93      		push r28
 337               	.LCFI4:
 338               		.cfi_def_cfa_offset 3
 339               		.cfi_offset 28, -2
 340 0128 DF93      		push r29
 341               	.LCFI5:
 342               		.cfi_def_cfa_offset 4
 343               		.cfi_offset 29, -3
 344               	/* prologue: function */
 345               	/* frame size = 0 */
 346               	/* stack size = 2 */
 347               	.L__stack_usage = 2
 348 012a EC01      		movw r28,r24
 349               	.LVL23:
 350               	.L20:
 178:UART.cpp      **** 	register char c;
 351               		.loc 1 178 2 is_stmt 1 view .LVU108
 179:UART.cpp      ****     
 180:UART.cpp      **** 	while ( (c = pgm_read_byte(progmem_s++)) )
 352               		.loc 1 180 2 view .LVU109
 353               		.loc 1 180 13 view .LVU110
 354               	.LBB2:
 355               		.loc 1 180 15 view .LVU111
 356               		.loc 1 180 15 view .LVU112
 357               		.loc 1 180 15 view .LVU113
 358 012c FE01      		movw r30,r28
 359               	/* #APP */
 360               	 ;  180 "UART.cpp" 1
 361 012e 8491      		lpm r24, Z
 362               		
 363               	 ;  0 "" 2
 364               	.LVL24:
 365               		.loc 1 180 15 view .LVU114
 366               		.loc 1 180 15 is_stmt 0 view .LVU115
 367               	/* #NOAPP */
 368               	.LBE2:
 369               		.loc 1 180 13 view .LVU116
 370 0130 2196      		adiw r28,1
 371               	.LVL25:
 372               		.loc 1 180 13 view .LVU117
 373 0132 8823      		tst r24
 374 0134 01F0      		breq .L18
 375               	.LBB3:
 181:UART.cpp      **** 	{
 182:UART.cpp      **** 		UART0_PutChar(c);
 376               		.loc 1 182 3 is_stmt 1 view .LVU118
 377               		.loc 1 182 16 is_stmt 0 view .LVU119
 378 0136 0E94 0000 		call _Z13UART0_PutCharh
 379               	.LVL26:
 380               		.loc 1 182 16 view .LVU120
 381               	.LBE3:
 180:UART.cpp      **** 	{
 382               		.loc 1 180 2 view .LVU121
 383 013a 00C0      		rjmp .L20
 384               	.LVL27:
 385               	.L18:
 386               	/* epilogue start */
 183:UART.cpp      **** 	}
 184:UART.cpp      **** }
 387               		.loc 1 184 1 view .LVU122
 388 013c DF91      		pop r29
 389 013e CF91      		pop r28
 390               	.LVL28:
 391               		.loc 1 184 1 view .LVU123
 392 0140 0895      		ret
 393               		.cfi_endproc
 394               	.LFE5:
 396               	.global	_Z17UART0_RxAvailablev
 398               	_Z17UART0_RxAvailablev:
 399               	.LFB6:
 185:UART.cpp      **** 
 186:UART.cpp      **** 
 187:UART.cpp      **** /*************************************************************************
 188:UART.cpp      **** Function: UART0_RX_Available()
 189:UART.cpp      **** Purpose:  Determine the number of bytes waiting in the receive buffer
 190:UART.cpp      **** Input:    None
 191:UART.cpp      **** Returns:  Boolean false if buffer is empty
 192:UART.cpp      **** **************************************************************************/
 193:UART.cpp      **** bool UART0_RxAvailable(void)
 194:UART.cpp      **** {
 400               		.loc 1 194 1 is_stmt 1 view -0
 401               		.cfi_startproc
 402               	/* prologue: function */
 403               	/* frame size = 0 */
 404               	/* stack size = 0 */
 405               	.L__stack_usage = 0
 195:UART.cpp      **** 	return (UART0_RxHead != UART0_RxTail);
 406               		.loc 1 195 2 view .LVU125
 407               		.loc 1 195 23 is_stmt 0 view .LVU126
 408 0142 2091 0000 		lds r18,_ZL12UART0_RxHead
 409 0146 9091 0000 		lds r25,_ZL12UART0_RxTail
 410               		.loc 1 195 38 view .LVU127
 411 014a 81E0      		ldi r24,lo8(1)
 412 014c 2913      		cpse r18,r25
 413 014e 00C0      		rjmp .L22
 414 0150 80E0      		ldi r24,0
 415               	.L22:
 416               	/* epilogue start */
 196:UART.cpp      **** }
 417               		.loc 1 196 1 view .LVU128
 418 0152 0895      		ret
 419               		.cfi_endproc
 420               	.LFE6:
 422               	.global	_Z17UART0_TxAvailablev
 424               	_Z17UART0_TxAvailablev:
 425               	.LFB7:
 197:UART.cpp      **** 
 198:UART.cpp      **** bool UART0_TxAvailable(void)
 199:UART.cpp      **** {
 426               		.loc 1 199 1 is_stmt 1 view -0
 427               		.cfi_startproc
 428               	/* prologue: function */
 429               	/* frame size = 0 */
 430               	/* stack size = 0 */
 431               	.L__stack_usage = 0
 200:UART.cpp      **** 	return (UART0_TxHead != UART0_TxTail);
 432               		.loc 1 200 2 view .LVU130
 433               		.loc 1 200 23 is_stmt 0 view .LVU131
 434 0154 2091 0000 		lds r18,_ZL12UART0_TxHead
 435 0158 9091 0000 		lds r25,_ZL12UART0_TxTail
 436               		.loc 1 200 38 view .LVU132
 437 015c 81E0      		ldi r24,lo8(1)
 438 015e 2913      		cpse r18,r25
 439 0160 00C0      		rjmp .L24
 440 0162 80E0      		ldi r24,0
 441               	.L24:
 442               	/* epilogue start */
 201:UART.cpp      **** }
 443               		.loc 1 201 1 view .LVU133
 444 0164 0895      		ret
 445               		.cfi_endproc
 446               	.LFE7:
 448               	.global	_Z11UART0_Flushv
 450               	_Z11UART0_Flushv:
 451               	.LFB8:
 202:UART.cpp      **** 
 203:UART.cpp      **** /*************************************************************************
 204:UART.cpp      **** Function: UART0_Flush()
 205:UART.cpp      **** Purpose:  Flush bytes waiting the receive buffer. Acutally ignores them.
 206:UART.cpp      **** Input:    None
 207:UART.cpp      **** Returns:  None
 208:UART.cpp      **** **************************************************************************/
 209:UART.cpp      **** void UART0_Flush(void)
 210:UART.cpp      **** {
 452               		.loc 1 210 1 is_stmt 1 view -0
 453               		.cfi_startproc
 454               	/* prologue: function */
 455               	/* frame size = 0 */
 456               	/* stack size = 0 */
 457               	.L__stack_usage = 0
 211:UART.cpp      **** 	UART0_RxHead = UART0_RxTail;
 458               		.loc 1 211 2 view .LVU135
 459               		.loc 1 211 15 is_stmt 0 view .LVU136
 460 0166 8091 0000 		lds r24,_ZL12UART0_RxTail
 461 016a 8093 0000 		sts _ZL12UART0_RxHead,r24
 462               	/* epilogue start */
 212:UART.cpp      **** }
 463               		.loc 1 212 1 view .LVU137
 464 016e 0895      		ret
 465               		.cfi_endproc
 466               	.LFE8:
 468               	.global	_Z15UART0_QueueCharh
 470               	_Z15UART0_QueueCharh:
 471               	.LVL29:
 472               	.LFB9:
 213:UART.cpp      **** 
 214:UART.cpp      **** 
 215:UART.cpp      **** int	UART0_QueueChar(unsigned char data)
 216:UART.cpp      **** {
 473               		.loc 1 216 1 is_stmt 1 view -0
 474               		.cfi_startproc
 475               	/* prologue: function */
 476               	/* frame size = 0 */
 477               	/* stack size = 0 */
 478               	.L__stack_usage = 0
 217:UART.cpp      **** 	unsigned char tmphead;
 479               		.loc 1 217 2 view .LVU139
 218:UART.cpp      **** 	
 219:UART.cpp      **** 	/* calculate buffer index */
 220:UART.cpp      **** 	tmphead = (UART0_TxHead + 1) & UART0_TX_BUFFER_MASK;
 480               		.loc 1 220 2 view .LVU140
 481               		.loc 1 220 31 is_stmt 0 view .LVU141
 482 0170 9091 0000 		lds r25,_ZL12UART0_TxHead
 483               		.loc 1 220 26 view .LVU142
 484 0174 9F5F      		subi r25,lo8(-(1))
 485               		.loc 1 220 10 view .LVU143
 486 0176 9F73      		andi r25,lo8(63)
 487               	.LVL30:
 221:UART.cpp      **** 	
 222:UART.cpp      **** 	/* check for free space in buffer */
 223:UART.cpp      **** 	if ( tmphead == UART0_TxTail )
 488               		.loc 1 223 2 is_stmt 1 view .LVU144
 489               		.loc 1 223 15 is_stmt 0 view .LVU145
 490 0178 2091 0000 		lds r18,_ZL12UART0_TxTail
 491               		.loc 1 223 2 view .LVU146
 492 017c 2917      		cp r18,r25
 493 017e 01F0      		breq .L28
 224:UART.cpp      **** 		return 0;
 225:UART.cpp      **** 	
 226:UART.cpp      **** 	UART0_TxBuf[tmphead] = data;
 494               		.loc 1 226 2 is_stmt 1 view .LVU147
 495               		.loc 1 226 14 is_stmt 0 view .LVU148
 496 0180 E92F      		mov r30,r25
 497 0182 F0E0      		ldi r31,0
 498               		.loc 1 226 23 view .LVU149
 499 0184 E050      		subi r30,lo8(-(_ZL11UART0_TxBuf))
 500 0186 F040      		sbci r31,hi8(-(_ZL11UART0_TxBuf))
 501 0188 8083      		st Z,r24
 227:UART.cpp      **** 	UART0_TxHead = tmphead;
 502               		.loc 1 227 2 is_stmt 1 view .LVU150
 503               		.loc 1 227 15 is_stmt 0 view .LVU151
 504 018a 9093 0000 		sts _ZL12UART0_TxHead,r25
 228:UART.cpp      **** 	
 229:UART.cpp      **** 	return 1;
 505               		.loc 1 229 2 is_stmt 1 view .LVU152
 506               		.loc 1 229 9 is_stmt 0 view .LVU153
 507 018e 81E0      		ldi r24,lo8(1)
 508 0190 90E0      		ldi r25,0
 509               	.LVL31:
 510               		.loc 1 229 9 view .LVU154
 511 0192 0895      		ret
 512               	.LVL32:
 513               	.L28:
 224:UART.cpp      **** 	
 514               		.loc 1 224 10 view .LVU155
 515 0194 90E0      		ldi r25,0
 516               	.LVL33:
 224:UART.cpp      **** 	
 517               		.loc 1 224 10 view .LVU156
 518 0196 80E0      		ldi r24,0
 519               	.LVL34:
 520               	/* epilogue start */
 230:UART.cpp      **** }
 521               		.loc 1 230 1 view .LVU157
 522 0198 0895      		ret
 523               		.cfi_endproc
 524               	.LFE9:
 526               	.global	_Z16UART0_QueueArrayPKch
 528               	_Z16UART0_QueueArrayPKch:
 529               	.LVL35:
 530               	.LFB10:
 231:UART.cpp      **** 
 232:UART.cpp      **** 
 233:UART.cpp      **** void UART0_QueueArray(const char *array, unsigned char length)
 234:UART.cpp      **** {
 531               		.loc 1 234 1 is_stmt 1 view -0
 532               		.cfi_startproc
 533               		.loc 1 234 1 is_stmt 0 view .LVU159
 534 019a 0F93      		push r16
 535               	.LCFI6:
 536               		.cfi_def_cfa_offset 3
 537               		.cfi_offset 16, -2
 538 019c 1F93      		push r17
 539               	.LCFI7:
 540               		.cfi_def_cfa_offset 4
 541               		.cfi_offset 17, -3
 542 019e CF93      		push r28
 543               	.LCFI8:
 544               		.cfi_def_cfa_offset 5
 545               		.cfi_offset 28, -4
 546 01a0 DF93      		push r29
 547               	.LCFI9:
 548               		.cfi_def_cfa_offset 6
 549               		.cfi_offset 29, -5
 550               	/* prologue: function */
 551               	/* frame size = 0 */
 552               	/* stack size = 4 */
 553               	.L__stack_usage = 4
 235:UART.cpp      **** 	unsigned char i = 0;
 554               		.loc 1 235 2 is_stmt 1 view .LVU160
 555               	.LVL36:
 236:UART.cpp      **** 	
 237:UART.cpp      **** 	for (i = 0; i < length; i++)
 556               		.loc 1 237 2 view .LVU161
 557               		.loc 1 237 2 is_stmt 0 view .LVU162
 558 01a2 EC01      		movw r28,r24
 559 01a4 8C01      		movw r16,r24
 560 01a6 060F      		add r16,r22
 561 01a8 111D      		adc r17,__zero_reg__
 562               	.LVL37:
 563               	.L31:
 564               		.loc 1 237 16 is_stmt 1 discriminator 3 view .LVU163
 565 01aa C017      		cp r28,r16
 566 01ac D107      		cpc r29,r17
 567 01ae 01F0      		breq .L29
 238:UART.cpp      **** 	{
 239:UART.cpp      **** 		UART0_QueueChar(array[i]);
 568               		.loc 1 239 3 discriminator 2 view .LVU164
 569               		.loc 1 239 18 is_stmt 0 discriminator 2 view .LVU165
 570 01b0 8991      		ld r24,Y+
 571               	.LVL38:
 572               		.loc 1 239 18 discriminator 2 view .LVU166
 573 01b2 0E94 0000 		call _Z15UART0_QueueCharh
 574               	.LVL39:
 237:UART.cpp      **** 	{
 575               		.loc 1 237 2 is_stmt 1 discriminator 2 view .LVU167
 237:UART.cpp      **** 	{
 576               		.loc 1 237 2 is_stmt 0 discriminator 2 view .LVU168
 577 01b6 00C0      		rjmp .L31
 578               	.L29:
 579               	/* epilogue start */
 240:UART.cpp      **** 	}
 241:UART.cpp      **** }
 580               		.loc 1 241 1 view .LVU169
 581 01b8 DF91      		pop r29
 582 01ba CF91      		pop r28
 583               	.LVL40:
 584               		.loc 1 241 1 view .LVU170
 585 01bc 1F91      		pop r17
 586 01be 0F91      		pop r16
 587 01c0 0895      		ret
 588               		.cfi_endproc
 589               	.LFE10:
 591               	.global	_Z14UART0_PutQueuev
 593               	_Z14UART0_PutQueuev:
 594               	.LFB11:
 242:UART.cpp      **** 
 243:UART.cpp      **** 
 244:UART.cpp      **** void UART0_PutQueue(void)
 245:UART.cpp      **** {
 595               		.loc 1 245 1 is_stmt 1 view -0
 596               		.cfi_startproc
 597               	/* prologue: function */
 598               	/* frame size = 0 */
 599               	/* stack size = 0 */
 600               	.L__stack_usage = 0
 246:UART.cpp      **** 	/* enable UDRE interrupt */
 247:UART.cpp      **** 	UCSR0B |= (1 << UDRIE0);
 601               		.loc 1 247 2 view .LVU172
 602               		.loc 1 247 9 is_stmt 0 view .LVU173
 603 01c2 E1EC      		ldi r30,lo8(-63)
 604 01c4 F0E0      		ldi r31,0
 605 01c6 8081      		ld r24,Z
 606 01c8 8062      		ori r24,lo8(32)
 607 01ca 8083      		st Z,r24
 608               	/* epilogue start */
 248:UART.cpp      **** }
 609               		.loc 1 248 1 view .LVU174
 610 01cc 0895      		ret
 611               		.cfi_endproc
 612               	.LFE11:
 614               	.global	__vector_20
 616               	__vector_20:
 617               	.LFB12:
 249:UART.cpp      **** 
 250:UART.cpp      **** 
 251:UART.cpp      **** /*************************************************************************
 252:UART.cpp      **** Function: UART0 Receive Complete interrupt
 253:UART.cpp      **** Purpose:  called when the UART has received a character
 254:UART.cpp      **** **************************************************************************/
 255:UART.cpp      **** ISR(USART0_RX_vect)
 256:UART.cpp      **** {
 618               		.loc 1 256 1 is_stmt 1 view -0
 619               		.cfi_startproc
 620 01ce 2F93 2FB7 		__gcc_isr 1
 620      2F93 
 621 01d4 8F93      		push r24
 622               	.LCFI10:
 623               		.cfi_def_cfa_offset 3
 624               		.cfi_offset 24, -2
 625 01d6 9F93      		push r25
 626               	.LCFI11:
 627               		.cfi_def_cfa_offset 4
 628               		.cfi_offset 25, -3
 629 01d8 EF93      		push r30
 630               	.LCFI12:
 631               		.cfi_def_cfa_offset 5
 632               		.cfi_offset 30, -4
 633 01da FF93      		push r31
 634               	.LCFI13:
 635               		.cfi_def_cfa_offset 6
 636               		.cfi_offset 31, -5
 637               	/* prologue: Signal */
 638               	/* frame size = 0 */
 639               	/* stack size = 4...8 */
 640               	.L__stack_usage = 4 + __gcc_isr.n_pushed
 257:UART.cpp      **** 	unsigned char tmphead;
 641               		.loc 1 257 2 view .LVU176
 258:UART.cpp      **** 	unsigned char data;
 642               		.loc 1 258 2 view .LVU177
 259:UART.cpp      **** 	unsigned char usr;
 643               		.loc 1 259 2 view .LVU178
 260:UART.cpp      **** 	unsigned char lastRxError;
 644               		.loc 1 260 2 view .LVU179
 261:UART.cpp      ****     
 262:UART.cpp      ****     
 263:UART.cpp      **** 	/* read UART status register and UART data register */
 264:UART.cpp      **** 	usr  = UCSR0A;
 645               		.loc 1 264 2 view .LVU180
 646               		.loc 1 264 7 is_stmt 0 view .LVU181
 647 01dc 8091 C000 		lds r24,192
 648               	.LVL41:
 265:UART.cpp      **** 	data = UDR0;
 649               		.loc 1 265 2 is_stmt 1 view .LVU182
 650               		.loc 1 265 7 is_stmt 0 view .LVU183
 651 01e0 9091 C600 		lds r25,198
 652               	.LVL42:
 266:UART.cpp      ****     
 267:UART.cpp      **** 	/* */
 268:UART.cpp      **** 	lastRxError = (usr & (FE0 | DOR0));
 653               		.loc 1 268 2 is_stmt 1 view .LVU184
 269:UART.cpp      ****     
 270:UART.cpp      **** 	/* calculate buffer index */
 271:UART.cpp      **** 	tmphead = ( UART0_RxHead + 1) & UART0_RX_BUFFER_MASK;
 654               		.loc 1 271 2 view .LVU185
 655               		.loc 1 271 32 is_stmt 0 view .LVU186
 656 01e4 E091 0000 		lds r30,_ZL12UART0_RxHead
 657               		.loc 1 271 27 view .LVU187
 658 01e8 EF5F      		subi r30,lo8(-(1))
 659               		.loc 1 271 10 view .LVU188
 660 01ea EF73      		andi r30,lo8(63)
 661               	.LVL43:
 272:UART.cpp      ****     
 273:UART.cpp      **** 	if ( tmphead == UART0_RxTail )
 662               		.loc 1 273 2 is_stmt 1 view .LVU189
 663               		.loc 1 273 15 is_stmt 0 view .LVU190
 664 01ec 2091 0000 		lds r18,_ZL12UART0_RxTail
 665               		.loc 1 273 2 view .LVU191
 666 01f0 2E17      		cp r18,r30
 667 01f2 01F0      		breq .L35
 268:UART.cpp      ****     
 668               		.loc 1 268 14 view .LVU192
 669 01f4 8770      		andi r24,lo8(7)
 670               	.LVL44:
 274:UART.cpp      **** 	{
 275:UART.cpp      **** 		/* error: receive buffer overflow */
 276:UART.cpp      **** 		lastRxError = UART_BUFFER_OVERFLOW >> 8;
 277:UART.cpp      **** 	}
 278:UART.cpp      **** 	else
 279:UART.cpp      **** 	{
 280:UART.cpp      **** 		/* store new index */
 281:UART.cpp      **** 		UART0_RxHead = tmphead;
 671               		.loc 1 281 3 is_stmt 1 view .LVU193
 672               		.loc 1 281 16 is_stmt 0 view .LVU194
 673 01f6 E093 0000 		sts _ZL12UART0_RxHead,r30
 282:UART.cpp      **** 		/* store received data in buffer */
 283:UART.cpp      **** 		UART0_RxBuf[tmphead] = data;
 674               		.loc 1 283 3 is_stmt 1 view .LVU195
 675               		.loc 1 283 15 is_stmt 0 view .LVU196
 676 01fa F0E0      		ldi r31,0
 677               		.loc 1 283 24 view .LVU197
 678 01fc E050      		subi r30,lo8(-(_ZL11UART0_RxBuf))
 679 01fe F040      		sbci r31,hi8(-(_ZL11UART0_RxBuf))
 680               	.LVL45:
 681               		.loc 1 283 24 view .LVU198
 682 0200 9083      		st Z,r25
 683               	.LVL46:
 684               	.L34:
 284:UART.cpp      **** 	}
 285:UART.cpp      **** 
 286:UART.cpp      **** 	UART0_LastRxError = lastRxError;
 685               		.loc 1 286 2 is_stmt 1 view .LVU199
 686               		.loc 1 286 20 is_stmt 0 view .LVU200
 687 0202 8093 0000 		sts _ZL17UART0_LastRxError,r24
 688               	/* epilogue start */
 287:UART.cpp      **** }
 689               		.loc 1 287 1 view .LVU201
 690 0206 FF91      		pop r31
 691 0208 EF91      		pop r30
 692 020a 9F91      		pop r25
 693               	.LVL47:
 694               		.loc 1 287 1 view .LVU202
 695 020c 8F91      		pop r24
 696               	.LVL48:
 697               		.loc 1 287 1 view .LVU203
 698 020e 2F91 2FBF 		__gcc_isr 2
 698      2F91 
 699 0214 1895      		reti
 700               	.LVL49:
 701               	.L35:
 276:UART.cpp      **** 	}
 702               		.loc 1 276 15 view .LVU204
 703 0216 82E0      		ldi r24,lo8(2)
 704               	.LVL50:
 276:UART.cpp      **** 	}
 705               		.loc 1 276 15 view .LVU205
 706 0218 00C0      		rjmp .L34
 707               		__gcc_isr 0,r18
 708               		.cfi_endproc
 709               	.LFE12:
 711               	.global	__vector_21
 713               	__vector_21:
 714               	.LFB13:
 288:UART.cpp      **** 
 289:UART.cpp      **** 
 290:UART.cpp      **** /*************************************************************************
 291:UART.cpp      **** Function: UART0 Data Register Empty interrupt
 292:UART.cpp      **** Purpose:  called when the UART is ready to transmit the next byte
 293:UART.cpp      **** **************************************************************************/
 294:UART.cpp      **** ISR(USART0_UDRE_vect)
 295:UART.cpp      **** {
 715               		.loc 1 295 1 is_stmt 1 view -0
 716               		.cfi_startproc
 717 021a 8F93 8FB7 		__gcc_isr 1
 717      8F93 
 718 0220 9F93      		push r25
 719               	.LCFI14:
 720               		.cfi_def_cfa_offset 3
 721               		.cfi_offset 25, -2
 722 0222 EF93      		push r30
 723               	.LCFI15:
 724               		.cfi_def_cfa_offset 4
 725               		.cfi_offset 30, -3
 726 0224 FF93      		push r31
 727               	.LCFI16:
 728               		.cfi_def_cfa_offset 5
 729               		.cfi_offset 31, -4
 730               	/* prologue: Signal */
 731               	/* frame size = 0 */
 732               	/* stack size = 3...7 */
 733               	.L__stack_usage = 3 + __gcc_isr.n_pushed
 296:UART.cpp      **** 	unsigned char tmptail;
 734               		.loc 1 296 2 view .LVU207
 297:UART.cpp      ****     
 298:UART.cpp      **** 	if ( UART0_TxHead != UART0_TxTail)
 735               		.loc 1 298 2 view .LVU208
 736               		.loc 1 298 20 is_stmt 0 view .LVU209
 737 0226 9091 0000 		lds r25,_ZL12UART0_TxHead
 738 022a 8091 0000 		lds r24,_ZL12UART0_TxTail
 739               		.loc 1 298 2 view .LVU210
 740 022e 9817      		cp r25,r24
 741 0230 01F0      		breq .L37
 299:UART.cpp      **** 	{
 300:UART.cpp      **** 		/* calculate and store new buffer index */
 301:UART.cpp      **** 		tmptail = (UART0_TxTail + 1) & UART0_TX_BUFFER_MASK;
 742               		.loc 1 301 3 is_stmt 1 view .LVU211
 743               		.loc 1 301 32 is_stmt 0 view .LVU212
 744 0232 E091 0000 		lds r30,_ZL12UART0_TxTail
 745               		.loc 1 301 27 view .LVU213
 746 0236 EF5F      		subi r30,lo8(-(1))
 747               		.loc 1 301 11 view .LVU214
 748 0238 EF73      		andi r30,lo8(63)
 749               	.LVL51:
 302:UART.cpp      **** 		UART0_TxTail = tmptail;
 750               		.loc 1 302 3 is_stmt 1 view .LVU215
 751               		.loc 1 302 16 is_stmt 0 view .LVU216
 752 023a E093 0000 		sts _ZL12UART0_TxTail,r30
 303:UART.cpp      **** 
 304:UART.cpp      **** 		/* get one byte from buffer and write it to UART */
 305:UART.cpp      **** 		UDR0 = UART0_TxBuf[tmptail];  /* start transmission */
 753               		.loc 1 305 3 is_stmt 1 view .LVU217
 754               		.loc 1 305 22 is_stmt 0 view .LVU218
 755 023e F0E0      		ldi r31,0
 756               		.loc 1 305 29 view .LVU219
 757 0240 E050      		subi r30,lo8(-(_ZL11UART0_TxBuf))
 758 0242 F040      		sbci r31,hi8(-(_ZL11UART0_TxBuf))
 759               	.LVL52:
 760               		.loc 1 305 29 view .LVU220
 761 0244 8081      		ld r24,Z
 762               		.loc 1 305 8 view .LVU221
 763 0246 8093 C600 		sts 198,r24
 764               	.LVL53:
 765               	.L36:
 766               	/* epilogue start */
 306:UART.cpp      **** 	}
 307:UART.cpp      **** 	else
 308:UART.cpp      **** 	{
 309:UART.cpp      **** 		/* tx buffer empty, disable UDRE interrupt */
 310:UART.cpp      **** 		UCSR0B &= ~(1 << UDRIE0);
 311:UART.cpp      **** 	}
 312:UART.cpp      **** }
 767               		.loc 1 312 1 view .LVU222
 768 024a FF91      		pop r31
 769 024c EF91      		pop r30
 770 024e 9F91      		pop r25
 771 0250 8F91 8FBF 		__gcc_isr 2
 771      8F91 
 772 0256 1895      		reti
 773               	.L37:
 310:UART.cpp      **** 	}
 774               		.loc 1 310 3 is_stmt 1 view .LVU223
 310:UART.cpp      **** 	}
 775               		.loc 1 310 10 is_stmt 0 view .LVU224
 776 0258 8091 C100 		lds r24,193
 777 025c 8F7D      		andi r24,lo8(-33)
 778 025e 8093 C100 		sts 193,r24
 779               		.loc 1 312 1 view .LVU225
 780 0262 00C0      		rjmp .L36
 781               		__gcc_isr 0,r24
 782               		.cfi_endproc
 783               	.LFE13:
 785               	.global	_Z10UART1_Initjhh
 787               	_Z10UART1_Initjhh:
 788               	.LVL54:
 789               	.LFB14:
 313:UART.cpp      **** 
 314:UART.cpp      **** 
 315:UART.cpp      **** /*************************************************************************
 316:UART.cpp      **** Function: UART1_Init()
 317:UART.cpp      **** Purpose:  initialize UART1 and set baudrate
 318:UART.cpp      **** Input:    baudrate, stop bits, parity
 319:UART.cpp      **** Returns:  none
 320:UART.cpp      **** **************************************************************************/
 321:UART.cpp      **** void UART1_Init(unsigned int baudrate, unsigned char stopbit, unsigned char parity)
 322:UART.cpp      **** {
 790               		.loc 1 322 1 is_stmt 1 view -0
 791               		.cfi_startproc
 792               		.loc 1 322 1 is_stmt 0 view .LVU227
 793 0264 CF93      		push r28
 794               	.LCFI17:
 795               		.cfi_def_cfa_offset 3
 796               		.cfi_offset 28, -2
 797 0266 DF93      		push r29
 798               	.LCFI18:
 799               		.cfi_def_cfa_offset 4
 800               		.cfi_offset 29, -3
 801               	/* prologue: function */
 802               	/* frame size = 0 */
 803               	/* stack size = 2 */
 804               	.L__stack_usage = 2
 805 0268 D62F      		mov r29,r22
 806 026a C42F      		mov r28,r20
 323:UART.cpp      **** 	DDRD |= (1 << PORTD3);
 807               		.loc 1 323 2 is_stmt 1 view .LVU228
 808               		.loc 1 323 7 is_stmt 0 view .LVU229
 809 026c 539A      		sbi 0xa,3
 324:UART.cpp      **** 	PORTD |= (1 << PORTD3);
 810               		.loc 1 324 2 is_stmt 1 view .LVU230
 811               		.loc 1 324 8 is_stmt 0 view .LVU231
 812 026e 5B9A      		sbi 0xb,3
 325:UART.cpp      **** 	
 326:UART.cpp      **** 	UART1_TxHead = 0;
 813               		.loc 1 326 2 is_stmt 1 view .LVU232
 814               		.loc 1 326 15 is_stmt 0 view .LVU233
 815 0270 1092 0000 		sts _ZL12UART1_TxHead,__zero_reg__
 327:UART.cpp      **** 	UART1_TxTail = 0;
 816               		.loc 1 327 2 is_stmt 1 view .LVU234
 817               		.loc 1 327 15 is_stmt 0 view .LVU235
 818 0274 1092 0000 		sts _ZL12UART1_TxTail,__zero_reg__
 328:UART.cpp      **** 	UART1_RxHead = 0;
 819               		.loc 1 328 2 is_stmt 1 view .LVU236
 820               		.loc 1 328 15 is_stmt 0 view .LVU237
 821 0278 1092 0000 		sts _ZL12UART1_RxHead,__zero_reg__
 329:UART.cpp      **** 	UART1_RxTail = 0;
 822               		.loc 1 329 2 is_stmt 1 view .LVU238
 823               		.loc 1 329 15 is_stmt 0 view .LVU239
 824 027c 1092 0000 		sts _ZL12UART1_RxTail,__zero_reg__
 330:UART.cpp      **** 	
 331:UART.cpp      **** 	baudrate = UART_BAUD_SELECT(baudrate, F_CPU);
 825               		.loc 1 331 2 is_stmt 1 view .LVU240
 826               		.loc 1 331 13 is_stmt 0 view .LVU241
 827 0280 B0E0      		ldi r27,0
 828 0282 A0E0      		ldi r26,0
 829 0284 9C01      		movw r18,r24
 830 0286 AD01      		movw r20,r26
 831               	.LVL55:
 832               		.loc 1 331 13 view .LVU242
 833 0288 84E0      		ldi r24,4
 834               		1:
 835 028a 220F      		lsl r18
 836 028c 331F      		rol r19
 837 028e 441F      		rol r20
 838 0290 551F      		rol r21
 839 0292 8A95      		dec r24
 840 0294 01F4      		brne 1b
 841               	.LVL56:
 842               		.loc 1 331 13 view .LVU243
 843 0296 60E0      		ldi r22,0
 844 0298 7DE2      		ldi r23,lo8(45)
 845 029a 81E3      		ldi r24,lo8(49)
 846 029c 91E0      		ldi r25,lo8(1)
 847               	.LVL57:
 848               		.loc 1 331 13 view .LVU244
 849 029e 0E94 0000 		call __udivmodsi4
 850               		.loc 1 331 11 view .LVU245
 851 02a2 2150      		subi r18,1
 852 02a4 3109      		sbc r19,__zero_reg__
 853               	.LVL58:
 332:UART.cpp      **** 	
 333:UART.cpp      **** 	/*Set baud rate */
 334:UART.cpp      **** 	UBRR1H = (unsigned char)(baudrate >> 8);
 854               		.loc 1 334 2 is_stmt 1 view .LVU246
 855               		.loc 1 334 9 is_stmt 0 view .LVU247
 856 02a6 3093 CD00 		sts 205,r19
 335:UART.cpp      **** 	UBRR1L = (unsigned char)baudrate;
 857               		.loc 1 335 2 is_stmt 1 view .LVU248
 858               		.loc 1 335 9 is_stmt 0 view .LVU249
 859 02aa 2093 CC00 		sts 204,r18
 336:UART.cpp      **** 		
 337:UART.cpp      **** 	/* Set USART Mode */
 338:UART.cpp      **** 	UCSR1C &= ~((1 << UMSEL11) | (1 << UMSEL10));		// Asynchronous USART
 860               		.loc 1 338 2 is_stmt 1 view .LVU250
 861               		.loc 1 338 9 is_stmt 0 view .LVU251
 862 02ae 8091 CA00 		lds r24,202
 863 02b2 8F73      		andi r24,lo8(63)
 864 02b4 8093 CA00 		sts 202,r24
 339:UART.cpp      **** 		
 340:UART.cpp      **** 	/* Set Stop Bit(s) */
 341:UART.cpp      **** 	if (stopbit == UART_2_STOP_BITS)
 865               		.loc 1 341 2 is_stmt 1 view .LVU252
 342:UART.cpp      **** 		UCSR1C |= (1 << USBS1);							// 2 Stop bits
 866               		.loc 1 342 10 is_stmt 0 view .LVU253
 867 02b8 8091 CA00 		lds r24,202
 341:UART.cpp      **** 		UCSR1C |= (1 << USBS1);							// 2 Stop bits
 868               		.loc 1 341 2 view .LVU254
 869 02bc D230      		cpi r29,lo8(2)
 870 02be 01F4      		brne .L40
 871               		.loc 1 342 3 is_stmt 1 view .LVU255
 872               		.loc 1 342 10 is_stmt 0 view .LVU256
 873 02c0 8860      		ori r24,lo8(8)
 874               	.L45:
 343:UART.cpp      **** 	else
 344:UART.cpp      **** 		UCSR1C &= ~(1 << USBS1);						// 1 Stop bit
 875               		.loc 1 344 10 view .LVU257
 876 02c2 8093 CA00 		sts 202,r24
 345:UART.cpp      **** 
 346:UART.cpp      **** 	/* Set Parity */
 347:UART.cpp      **** 	if (parity == UART_EVEN_PARITY)
 877               		.loc 1 347 2 is_stmt 1 view .LVU258
 348:UART.cpp      **** 	{
 349:UART.cpp      **** 		UCSR1C |= (1 << UPM11);							// Even parity
 878               		.loc 1 349 10 is_stmt 0 view .LVU259
 879 02c6 8091 CA00 		lds r24,202
 347:UART.cpp      **** 	{
 880               		.loc 1 347 2 view .LVU260
 881 02ca C230      		cpi r28,lo8(2)
 882 02cc 01F4      		brne .L42
 883               		.loc 1 349 3 is_stmt 1 view .LVU261
 884               		.loc 1 349 10 is_stmt 0 view .LVU262
 885 02ce 8062      		ori r24,lo8(32)
 886               	.L46:
 350:UART.cpp      **** 	}
 351:UART.cpp      **** 	else if (parity == UART_ODD_PARITY)
 352:UART.cpp      **** 	{
 353:UART.cpp      **** 		UCSR1C |= ((1 << UPM11) | (1 << UPM10));		// Odd parity
 354:UART.cpp      **** 	}
 355:UART.cpp      **** 	else
 356:UART.cpp      **** 		UCSR1C &= ~((1 << UPM11) | (1 << UPM10));		// No parity
 887               		.loc 1 356 10 view .LVU263
 888 02d0 8093 CA00 		sts 202,r24
 357:UART.cpp      **** 		
 358:UART.cpp      **** 	/* Set Data Bits */
 359:UART.cpp      **** 	UCSR1C |= ((1 << UCSZ11) | (1 << UCSZ10));			// 8 Data bits
 889               		.loc 1 359 2 is_stmt 1 view .LVU264
 890               		.loc 1 359 9 is_stmt 0 view .LVU265
 891 02d4 8091 CA00 		lds r24,202
 892 02d8 8660      		ori r24,lo8(6)
 893 02da 8093 CA00 		sts 202,r24
 360:UART.cpp      **** 
 361:UART.cpp      **** 	/* Enable interrupts */
 362:UART.cpp      **** 	UCSR1B |= ((1 << RXCIE1) | (1 << UDRIE1));
 894               		.loc 1 362 2 is_stmt 1 view .LVU266
 895               		.loc 1 362 9 is_stmt 0 view .LVU267
 896 02de 8091 C900 		lds r24,201
 897 02e2 806A      		ori r24,lo8(-96)
 898 02e4 8093 C900 		sts 201,r24
 363:UART.cpp      **** 	
 364:UART.cpp      **** 	/*Enable receiver and transmitter */
 365:UART.cpp      **** 	UCSR1B |= ((1 << RXEN1) | (1 << TXEN1));
 899               		.loc 1 365 2 is_stmt 1 view .LVU268
 900               		.loc 1 365 9 is_stmt 0 view .LVU269
 901 02e8 8091 C900 		lds r24,201
 902 02ec 8861      		ori r24,lo8(24)
 903 02ee 8093 C900 		sts 201,r24
 904               	/* epilogue start */
 366:UART.cpp      **** }
 905               		.loc 1 366 1 view .LVU270
 906 02f2 DF91      		pop r29
 907               	.LVL59:
 908               		.loc 1 366 1 view .LVU271
 909 02f4 CF91      		pop r28
 910               	.LVL60:
 911               		.loc 1 366 1 view .LVU272
 912 02f6 0895      		ret
 913               	.LVL61:
 914               	.L40:
 344:UART.cpp      **** 
 915               		.loc 1 344 3 is_stmt 1 view .LVU273
 344:UART.cpp      **** 
 916               		.loc 1 344 10 is_stmt 0 view .LVU274
 917 02f8 877F      		andi r24,lo8(-9)
 918 02fa 00C0      		rjmp .L45
 919               	.L42:
 351:UART.cpp      **** 	{
 920               		.loc 1 351 7 is_stmt 1 view .LVU275
 921 02fc C330      		cpi r28,lo8(3)
 922 02fe 01F4      		brne .L44
 353:UART.cpp      **** 	}
 923               		.loc 1 353 3 view .LVU276
 353:UART.cpp      **** 	}
 924               		.loc 1 353 10 is_stmt 0 view .LVU277
 925 0300 8063      		ori r24,lo8(48)
 926 0302 00C0      		rjmp .L46
 927               	.L44:
 356:UART.cpp      **** 		
 928               		.loc 1 356 3 is_stmt 1 view .LVU278
 356:UART.cpp      **** 		
 929               		.loc 1 356 10 is_stmt 0 view .LVU279
 930 0304 8F7C      		andi r24,lo8(-49)
 931 0306 00C0      		rjmp .L46
 932               		.cfi_endproc
 933               	.LFE14:
 935               	.global	_Z13UART1_GetCharv
 937               	_Z13UART1_GetCharv:
 938               	.LFB15:
 367:UART.cpp      **** 
 368:UART.cpp      **** 
 369:UART.cpp      **** /*************************************************************************
 370:UART.cpp      **** Function: UART1_GetChar()
 371:UART.cpp      **** Purpose:  return byte from ringbuffer  
 372:UART.cpp      **** Returns:  lower byte:  received byte from ringbuffer
 373:UART.cpp      ****           higher byte: last receive error
 374:UART.cpp      **** **************************************************************************/
 375:UART.cpp      **** unsigned int UART1_GetChar(void)
 376:UART.cpp      **** {
 939               		.loc 1 376 1 is_stmt 1 view -0
 940               		.cfi_startproc
 941               	/* prologue: function */
 942               	/* frame size = 0 */
 943               	/* stack size = 0 */
 944               	.L__stack_usage = 0
 377:UART.cpp      **** 	unsigned char tmptail;
 945               		.loc 1 377 2 view .LVU281
 378:UART.cpp      **** 	unsigned char data;
 946               		.loc 1 378 2 view .LVU282
 379:UART.cpp      **** 
 380:UART.cpp      **** 	if ( UART1_RxHead == UART1_RxTail )
 947               		.loc 1 380 2 view .LVU283
 948               		.loc 1 380 20 is_stmt 0 view .LVU284
 949 0308 9091 0000 		lds r25,_ZL12UART1_RxHead
 950 030c 8091 0000 		lds r24,_ZL12UART1_RxTail
 951               		.loc 1 380 2 view .LVU285
 952 0310 9817      		cp r25,r24
 953 0312 01F0      		breq .L49
 381:UART.cpp      **** 	{
 382:UART.cpp      **** 		return UART_NO_DATA;   /* no data available */
 383:UART.cpp      **** 	}
 384:UART.cpp      **** 		
 385:UART.cpp      **** 	/* calculate /store buffer index */
 386:UART.cpp      **** 	tmptail = (UART1_RxTail + 1) & UART1_RX_BUFFER_MASK;
 954               		.loc 1 386 2 is_stmt 1 view .LVU286
 955               		.loc 1 386 31 is_stmt 0 view .LVU287
 956 0314 E091 0000 		lds r30,_ZL12UART1_RxTail
 957               		.loc 1 386 26 view .LVU288
 958 0318 EF5F      		subi r30,lo8(-(1))
 959               		.loc 1 386 10 view .LVU289
 960 031a EF73      		andi r30,lo8(63)
 961               	.LVL62:
 387:UART.cpp      **** 	UART1_RxTail = tmptail;
 962               		.loc 1 387 2 is_stmt 1 view .LVU290
 963               		.loc 1 387 15 is_stmt 0 view .LVU291
 964 031c E093 0000 		sts _ZL12UART1_RxTail,r30
 388:UART.cpp      **** 		
 389:UART.cpp      **** 	/* get data from receive buffer */
 390:UART.cpp      **** 	data = UART1_RxBuf[tmptail];
 965               		.loc 1 390 2 is_stmt 1 view .LVU292
 966               		.loc 1 390 21 is_stmt 0 view .LVU293
 967 0320 F0E0      		ldi r31,0
 968               		.loc 1 390 7 view .LVU294
 969 0322 E050      		subi r30,lo8(-(_ZL11UART1_RxBuf))
 970 0324 F040      		sbci r31,hi8(-(_ZL11UART1_RxBuf))
 971               	.LVL63:
 972               		.loc 1 390 7 view .LVU295
 973 0326 2081      		ld r18,Z
 974               	.LVL64:
 391:UART.cpp      **** 		
 392:UART.cpp      **** 	return (UART1_LastRxError << 8) + data;
 975               		.loc 1 392 2 is_stmt 1 view .LVU296
 976               		.loc 1 392 10 is_stmt 0 view .LVU297
 977 0328 8091 0000 		lds r24,_ZL17UART1_LastRxError
 978 032c 90E0      		ldi r25,0
 979               		.loc 1 392 28 view .LVU298
 980 032e 982F      		mov r25,r24
 981 0330 8827      		clr r24
 982               		.loc 1 392 34 view .LVU299
 983 0332 820F      		add r24,r18
 984 0334 911D      		adc r25,__zero_reg__
 985               		.loc 1 392 36 view .LVU300
 986 0336 0895      		ret
 987               	.LVL65:
 988               	.L49:
 382:UART.cpp      **** 	}
 989               		.loc 1 382 10 view .LVU301
 990 0338 80E0      		ldi r24,0
 991 033a 91E0      		ldi r25,lo8(1)
 992               	/* epilogue start */
 393:UART.cpp      **** }
 993               		.loc 1 393 1 view .LVU302
 994 033c 0895      		ret
 995               		.cfi_endproc
 996               	.LFE15:
 998               	.global	_Z13UART1_PutCharh
 1000               	_Z13UART1_PutCharh:
 1001               	.LVL66:
 1002               	.LFB16:
 394:UART.cpp      **** 
 395:UART.cpp      **** 
 396:UART.cpp      **** /*************************************************************************
 397:UART.cpp      **** Function: UART1_PutChar()
 398:UART.cpp      **** Purpose:  write byte to ringbuffer for transmitting via UART
 399:UART.cpp      **** Input:    byte to be transmitted
 400:UART.cpp      **** Returns:  none
 401:UART.cpp      **** **************************************************************************/
 402:UART.cpp      **** void UART1_PutChar(unsigned char data)
 403:UART.cpp      **** {
 1003               		.loc 1 403 1 is_stmt 1 view -0
 1004               		.cfi_startproc
 1005               	/* prologue: function */
 1006               	/* frame size = 0 */
 1007               	/* stack size = 0 */
 1008               	.L__stack_usage = 0
 404:UART.cpp      **** 	unsigned char tmphead;
 1009               		.loc 1 404 2 view .LVU304
 405:UART.cpp      **** 		
 406:UART.cpp      **** 	/* calculate buffer index */
 407:UART.cpp      **** 	tmphead  = (UART1_TxHead + 1) & UART1_TX_BUFFER_MASK;
 1010               		.loc 1 407 2 view .LVU305
 1011               		.loc 1 407 32 is_stmt 0 view .LVU306
 1012 033e 9091 0000 		lds r25,_ZL12UART1_TxHead
 1013               		.loc 1 407 27 view .LVU307
 1014 0342 9F5F      		subi r25,lo8(-(1))
 1015               		.loc 1 407 11 view .LVU308
 1016 0344 9F73      		andi r25,lo8(63)
 1017               	.LVL67:
 1018               	.L51:
 408:UART.cpp      **** 		
 409:UART.cpp      **** 	/* wait for free space in buffer */
 410:UART.cpp      **** 	while ( tmphead == UART1_TxTail );
 1019               		.loc 1 410 2 is_stmt 1 view .LVU309
 1020               		.loc 1 410 18 view .LVU310
 1021 0346 2091 0000 		lds r18,_ZL12UART1_TxTail
 1022 034a 2917      		cp r18,r25
 1023 034c 01F0      		breq .L51
 411:UART.cpp      **** 		
 412:UART.cpp      **** 	UART1_TxBuf[tmphead] = data;
 1024               		.loc 1 412 2 view .LVU311
 1025               		.loc 1 412 14 is_stmt 0 view .LVU312
 1026 034e E92F      		mov r30,r25
 1027 0350 F0E0      		ldi r31,0
 1028               		.loc 1 412 23 view .LVU313
 1029 0352 E050      		subi r30,lo8(-(_ZL11UART1_TxBuf))
 1030 0354 F040      		sbci r31,hi8(-(_ZL11UART1_TxBuf))
 1031 0356 8083      		st Z,r24
 413:UART.cpp      **** 	UART1_TxHead = tmphead;
 1032               		.loc 1 413 2 is_stmt 1 view .LVU314
 1033               		.loc 1 413 15 is_stmt 0 view .LVU315
 1034 0358 9093 0000 		sts _ZL12UART1_TxHead,r25
 414:UART.cpp      **** 
 415:UART.cpp      **** 	/* enable UDRE interrupt */
 416:UART.cpp      **** 	UCSR1B |= (1 << UDRIE1);
 1035               		.loc 1 416 2 is_stmt 1 view .LVU316
 1036               		.loc 1 416 9 is_stmt 0 view .LVU317
 1037 035c 8091 C900 		lds r24,201
 1038               	.LVL68:
 1039               		.loc 1 416 9 view .LVU318
 1040 0360 8062      		ori r24,lo8(32)
 1041 0362 8093 C900 		sts 201,r24
 1042               	/* epilogue start */
 417:UART.cpp      **** }
 1043               		.loc 1 417 1 view .LVU319
 1044 0366 0895      		ret
 1045               		.cfi_endproc
 1046               	.LFE16:
 1048               	.global	_Z15UART1_PutStringPKc
 1050               	_Z15UART1_PutStringPKc:
 1051               	.LVL69:
 1052               	.LFB17:
 418:UART.cpp      **** 
 419:UART.cpp      **** 
 420:UART.cpp      **** /*************************************************************************
 421:UART.cpp      **** Function: UART1_PutString()
 422:UART.cpp      **** Purpose:  transmit string to UART
 423:UART.cpp      **** Input:    string to be transmitted
 424:UART.cpp      **** Returns:  none
 425:UART.cpp      **** **************************************************************************/
 426:UART.cpp      **** void UART1_PutString(const char *s )
 427:UART.cpp      **** {
 1053               		.loc 1 427 1 is_stmt 1 view -0
 1054               		.cfi_startproc
 1055               		.loc 1 427 1 is_stmt 0 view .LVU321
 1056 0368 CF93      		push r28
 1057               	.LCFI19:
 1058               		.cfi_def_cfa_offset 3
 1059               		.cfi_offset 28, -2
 1060 036a DF93      		push r29
 1061               	.LCFI20:
 1062               		.cfi_def_cfa_offset 4
 1063               		.cfi_offset 29, -3
 1064               	/* prologue: function */
 1065               	/* frame size = 0 */
 1066               	/* stack size = 2 */
 1067               	.L__stack_usage = 2
 1068 036c EC01      		movw r28,r24
 1069               	.LVL70:
 1070               	.L55:
 428:UART.cpp      **** 	while (*s)
 1071               		.loc 1 428 2 is_stmt 1 view .LVU322
 1072               		.loc 1 428 9 view .LVU323
 1073 036e 8991      		ld r24,Y+
 1074               	.LVL71:
 1075               		.loc 1 428 9 is_stmt 0 view .LVU324
 1076 0370 8823      		tst r24
 1077 0372 01F0      		breq .L53
 429:UART.cpp      **** 	{
 430:UART.cpp      **** 		UART1_PutChar(*s++);
 1078               		.loc 1 430 3 is_stmt 1 view .LVU325
 1079               	.LVL72:
 1080               		.loc 1 430 16 is_stmt 0 view .LVU326
 1081 0374 0E94 0000 		call _Z13UART1_PutCharh
 1082               	.LVL73:
 428:UART.cpp      **** 	while (*s)
 1083               		.loc 1 428 2 view .LVU327
 1084 0378 00C0      		rjmp .L55
 1085               	.LVL74:
 1086               	.L53:
 1087               	/* epilogue start */
 431:UART.cpp      **** 	}
 432:UART.cpp      **** }
 1088               		.loc 1 432 1 view .LVU328
 1089 037a DF91      		pop r29
 1090 037c CF91      		pop r28
 1091               	.LVL75:
 1092               		.loc 1 432 1 view .LVU329
 1093 037e 0895      		ret
 1094               		.cfi_endproc
 1095               	.LFE17:
 1097               	.global	_Z17UART1_PutString_pPKc
 1099               	_Z17UART1_PutString_pPKc:
 1100               	.LVL76:
 1101               	.LFB18:
 433:UART.cpp      **** 
 434:UART.cpp      **** 
 435:UART.cpp      **** /*************************************************************************
 436:UART.cpp      **** Function: UART1_PutString_p()
 437:UART.cpp      **** Purpose:  transmit string from program memory to UART
 438:UART.cpp      **** Input:    program memory string to be transmitted
 439:UART.cpp      **** Returns:  none
 440:UART.cpp      **** **************************************************************************/
 441:UART.cpp      **** void UART1_PutString_p(const char *progmem_s )
 442:UART.cpp      **** {
 1102               		.loc 1 442 1 is_stmt 1 view -0
 1103               		.cfi_startproc
 1104               		.loc 1 442 1 is_stmt 0 view .LVU331
 1105 0380 CF93      		push r28
 1106               	.LCFI21:
 1107               		.cfi_def_cfa_offset 3
 1108               		.cfi_offset 28, -2
 1109 0382 DF93      		push r29
 1110               	.LCFI22:
 1111               		.cfi_def_cfa_offset 4
 1112               		.cfi_offset 29, -3
 1113               	/* prologue: function */
 1114               	/* frame size = 0 */
 1115               	/* stack size = 2 */
 1116               	.L__stack_usage = 2
 1117 0384 EC01      		movw r28,r24
 1118               	.LVL77:
 1119               	.L58:
 443:UART.cpp      **** 	register char c;
 1120               		.loc 1 443 2 is_stmt 1 view .LVU332
 444:UART.cpp      **** 		
 445:UART.cpp      **** 	while ( (c = pgm_read_byte(progmem_s++)) )
 1121               		.loc 1 445 2 view .LVU333
 1122               		.loc 1 445 13 view .LVU334
 1123               	.LBB4:
 1124               		.loc 1 445 15 view .LVU335
 1125               		.loc 1 445 15 view .LVU336
 1126               		.loc 1 445 15 view .LVU337
 1127 0386 FE01      		movw r30,r28
 1128               	/* #APP */
 1129               	 ;  445 "UART.cpp" 1
 1130 0388 8491      		lpm r24, Z
 1131               		
 1132               	 ;  0 "" 2
 1133               	.LVL78:
 1134               		.loc 1 445 15 view .LVU338
 1135               		.loc 1 445 15 is_stmt 0 view .LVU339
 1136               	/* #NOAPP */
 1137               	.LBE4:
 1138               		.loc 1 445 13 view .LVU340
 1139 038a 2196      		adiw r28,1
 1140               	.LVL79:
 1141               		.loc 1 445 13 view .LVU341
 1142 038c 8823      		tst r24
 1143 038e 01F0      		breq .L56
 1144               	.LBB5:
 446:UART.cpp      **** 	{
 447:UART.cpp      **** 		UART1_PutChar(c);
 1145               		.loc 1 447 3 is_stmt 1 view .LVU342
 1146               		.loc 1 447 16 is_stmt 0 view .LVU343
 1147 0390 0E94 0000 		call _Z13UART1_PutCharh
 1148               	.LVL80:
 1149               		.loc 1 447 16 view .LVU344
 1150               	.LBE5:
 445:UART.cpp      **** 	{
 1151               		.loc 1 445 2 view .LVU345
 1152 0394 00C0      		rjmp .L58
 1153               	.LVL81:
 1154               	.L56:
 1155               	/* epilogue start */
 448:UART.cpp      **** 	}
 449:UART.cpp      **** }
 1156               		.loc 1 449 1 view .LVU346
 1157 0396 DF91      		pop r29
 1158 0398 CF91      		pop r28
 1159               	.LVL82:
 1160               		.loc 1 449 1 view .LVU347
 1161 039a 0895      		ret
 1162               		.cfi_endproc
 1163               	.LFE18:
 1165               	.global	_Z17UART1_RxAvailablev
 1167               	_Z17UART1_RxAvailablev:
 1168               	.LFB19:
 450:UART.cpp      **** 
 451:UART.cpp      **** 
 452:UART.cpp      **** /*************************************************************************
 453:UART.cpp      **** Function: UART1_RxAvailable()
 454:UART.cpp      **** Purpose:  Determine the number of bytes waiting in the receive buffer
 455:UART.cpp      **** Input:    None
 456:UART.cpp      **** Returns:  Boolean false if buffer is empty
 457:UART.cpp      **** **************************************************************************/
 458:UART.cpp      **** bool UART1_RxAvailable(void)
 459:UART.cpp      **** {
 1169               		.loc 1 459 1 is_stmt 1 view -0
 1170               		.cfi_startproc
 1171               	/* prologue: function */
 1172               	/* frame size = 0 */
 1173               	/* stack size = 0 */
 1174               	.L__stack_usage = 0
 460:UART.cpp      **** 	return (UART1_RxHead != UART1_RxTail);
 1175               		.loc 1 460 2 view .LVU349
 1176               		.loc 1 460 23 is_stmt 0 view .LVU350
 1177 039c 2091 0000 		lds r18,_ZL12UART1_RxHead
 1178 03a0 9091 0000 		lds r25,_ZL12UART1_RxTail
 1179               		.loc 1 460 38 view .LVU351
 1180 03a4 81E0      		ldi r24,lo8(1)
 1181 03a6 2913      		cpse r18,r25
 1182 03a8 00C0      		rjmp .L60
 1183 03aa 80E0      		ldi r24,0
 1184               	.L60:
 1185               	/* epilogue start */
 461:UART.cpp      **** }
 1186               		.loc 1 461 1 view .LVU352
 1187 03ac 0895      		ret
 1188               		.cfi_endproc
 1189               	.LFE19:
 1191               	.global	_Z17UART1_TxAvailablev
 1193               	_Z17UART1_TxAvailablev:
 1194               	.LFB20:
 462:UART.cpp      **** 
 463:UART.cpp      **** bool UART1_TxAvailable(void)
 464:UART.cpp      **** {
 1195               		.loc 1 464 1 is_stmt 1 view -0
 1196               		.cfi_startproc
 1197               	/* prologue: function */
 1198               	/* frame size = 0 */
 1199               	/* stack size = 0 */
 1200               	.L__stack_usage = 0
 465:UART.cpp      **** 	return (UART1_TxHead != UART1_TxTail);
 1201               		.loc 1 465 2 view .LVU354
 1202               		.loc 1 465 23 is_stmt 0 view .LVU355
 1203 03ae 2091 0000 		lds r18,_ZL12UART1_TxHead
 1204 03b2 9091 0000 		lds r25,_ZL12UART1_TxTail
 1205               		.loc 1 465 38 view .LVU356
 1206 03b6 81E0      		ldi r24,lo8(1)
 1207 03b8 2913      		cpse r18,r25
 1208 03ba 00C0      		rjmp .L62
 1209 03bc 80E0      		ldi r24,0
 1210               	.L62:
 1211               	/* epilogue start */
 466:UART.cpp      **** }
 1212               		.loc 1 466 1 view .LVU357
 1213 03be 0895      		ret
 1214               		.cfi_endproc
 1215               	.LFE20:
 1217               	.global	_Z11UART1_Flushv
 1219               	_Z11UART1_Flushv:
 1220               	.LFB21:
 467:UART.cpp      **** 
 468:UART.cpp      **** 
 469:UART.cpp      **** /*************************************************************************
 470:UART.cpp      **** Function: UART1_Flush()
 471:UART.cpp      **** Purpose:  Flush bytes waiting the receive buffer. Acutally ignores them.
 472:UART.cpp      **** Input:    None
 473:UART.cpp      **** Returns:  None
 474:UART.cpp      **** **************************************************************************/
 475:UART.cpp      **** void UART1_Flush(void)
 476:UART.cpp      **** {
 1221               		.loc 1 476 1 is_stmt 1 view -0
 1222               		.cfi_startproc
 1223               	/* prologue: function */
 1224               	/* frame size = 0 */
 1225               	/* stack size = 0 */
 1226               	.L__stack_usage = 0
 477:UART.cpp      **** 	UART1_RxHead = UART1_RxTail;
 1227               		.loc 1 477 2 view .LVU359
 1228               		.loc 1 477 15 is_stmt 0 view .LVU360
 1229 03c0 8091 0000 		lds r24,_ZL12UART1_RxTail
 1230 03c4 8093 0000 		sts _ZL12UART1_RxHead,r24
 1231               	/* epilogue start */
 478:UART.cpp      **** }
 1232               		.loc 1 478 1 view .LVU361
 1233 03c8 0895      		ret
 1234               		.cfi_endproc
 1235               	.LFE21:
 1237               	.global	__vector_28
 1239               	__vector_28:
 1240               	.LFB22:
 479:UART.cpp      **** 
 480:UART.cpp      **** 
 481:UART.cpp      **** /*************************************************************************
 482:UART.cpp      **** Function: UART1 Receive Complete interrupt
 483:UART.cpp      **** Purpose:  called when the UART has received a character
 484:UART.cpp      **** **************************************************************************/
 485:UART.cpp      **** ISR(USART1_RX_vect)
 486:UART.cpp      **** {
 1241               		.loc 1 486 1 is_stmt 1 view -0
 1242               		.cfi_startproc
 1243 03ca 2F93 2FB7 		__gcc_isr 1
 1243      2F93 
 1244 03d0 8F93      		push r24
 1245               	.LCFI23:
 1246               		.cfi_def_cfa_offset 3
 1247               		.cfi_offset 24, -2
 1248 03d2 9F93      		push r25
 1249               	.LCFI24:
 1250               		.cfi_def_cfa_offset 4
 1251               		.cfi_offset 25, -3
 1252 03d4 EF93      		push r30
 1253               	.LCFI25:
 1254               		.cfi_def_cfa_offset 5
 1255               		.cfi_offset 30, -4
 1256 03d6 FF93      		push r31
 1257               	.LCFI26:
 1258               		.cfi_def_cfa_offset 6
 1259               		.cfi_offset 31, -5
 1260               	/* prologue: Signal */
 1261               	/* frame size = 0 */
 1262               	/* stack size = 4...8 */
 1263               	.L__stack_usage = 4 + __gcc_isr.n_pushed
 487:UART.cpp      **** 	unsigned char tmphead;
 1264               		.loc 1 487 2 view .LVU363
 488:UART.cpp      **** 	unsigned char data;
 1265               		.loc 1 488 2 view .LVU364
 489:UART.cpp      **** 	unsigned char usr;
 1266               		.loc 1 489 2 view .LVU365
 490:UART.cpp      **** 	unsigned char lastRxError;
 1267               		.loc 1 490 2 view .LVU366
 491:UART.cpp      **** 	
 492:UART.cpp      **** 	
 493:UART.cpp      **** 	/* read UART status register and UART data register */
 494:UART.cpp      **** 	usr  = UCSR1A;
 1268               		.loc 1 494 2 view .LVU367
 1269               		.loc 1 494 7 is_stmt 0 view .LVU368
 1270 03d8 8091 C800 		lds r24,200
 1271               	.LVL83:
 495:UART.cpp      **** 	data = UDR1;
 1272               		.loc 1 495 2 is_stmt 1 view .LVU369
 1273               		.loc 1 495 7 is_stmt 0 view .LVU370
 1274 03dc 9091 CE00 		lds r25,206
 1275               	.LVL84:
 496:UART.cpp      **** 	
 497:UART.cpp      **** 	/* */
 498:UART.cpp      **** 	lastRxError = (usr & (FE1 | DOR1));
 1276               		.loc 1 498 2 is_stmt 1 view .LVU371
 499:UART.cpp      **** 	
 500:UART.cpp      **** 	/* calculate buffer index */
 501:UART.cpp      **** 	tmphead = ( UART1_RxHead + 1) & UART1_RX_BUFFER_MASK;
 1277               		.loc 1 501 2 view .LVU372
 1278               		.loc 1 501 32 is_stmt 0 view .LVU373
 1279 03e0 E091 0000 		lds r30,_ZL12UART1_RxHead
 1280               		.loc 1 501 27 view .LVU374
 1281 03e4 EF5F      		subi r30,lo8(-(1))
 1282               		.loc 1 501 10 view .LVU375
 1283 03e6 EF73      		andi r30,lo8(63)
 1284               	.LVL85:
 502:UART.cpp      **** 	
 503:UART.cpp      **** 	if ( tmphead == UART1_RxTail )
 1285               		.loc 1 503 2 is_stmt 1 view .LVU376
 1286               		.loc 1 503 15 is_stmt 0 view .LVU377
 1287 03e8 2091 0000 		lds r18,_ZL12UART1_RxTail
 1288               		.loc 1 503 2 view .LVU378
 1289 03ec 2E17      		cp r18,r30
 1290 03ee 01F0      		breq .L66
 498:UART.cpp      **** 	
 1291               		.loc 1 498 14 view .LVU379
 1292 03f0 8770      		andi r24,lo8(7)
 1293               	.LVL86:
 504:UART.cpp      **** 	{
 505:UART.cpp      **** 		/* error: receive buffer overflow */
 506:UART.cpp      **** 		lastRxError = UART_BUFFER_OVERFLOW >> 8;
 507:UART.cpp      **** 	}
 508:UART.cpp      **** 	else
 509:UART.cpp      **** 	{
 510:UART.cpp      **** 		/* store new index */
 511:UART.cpp      **** 		UART1_RxHead = tmphead;
 1294               		.loc 1 511 3 is_stmt 1 view .LVU380
 1295               		.loc 1 511 16 is_stmt 0 view .LVU381
 1296 03f2 E093 0000 		sts _ZL12UART1_RxHead,r30
 512:UART.cpp      **** 		/* store received data in buffer */
 513:UART.cpp      **** 		UART1_RxBuf[tmphead] = data;
 1297               		.loc 1 513 3 is_stmt 1 view .LVU382
 1298               		.loc 1 513 15 is_stmt 0 view .LVU383
 1299 03f6 F0E0      		ldi r31,0
 1300               		.loc 1 513 24 view .LVU384
 1301 03f8 E050      		subi r30,lo8(-(_ZL11UART1_RxBuf))
 1302 03fa F040      		sbci r31,hi8(-(_ZL11UART1_RxBuf))
 1303               	.LVL87:
 1304               		.loc 1 513 24 view .LVU385
 1305 03fc 9083      		st Z,r25
 1306               	.LVL88:
 1307               	.L65:
 514:UART.cpp      **** 	}
 515:UART.cpp      **** 
 516:UART.cpp      **** 	UART1_LastRxError = lastRxError;
 1308               		.loc 1 516 2 is_stmt 1 view .LVU386
 1309               		.loc 1 516 20 is_stmt 0 view .LVU387
 1310 03fe 8093 0000 		sts _ZL17UART1_LastRxError,r24
 1311               	/* epilogue start */
 517:UART.cpp      **** }
 1312               		.loc 1 517 1 view .LVU388
 1313 0402 FF91      		pop r31
 1314 0404 EF91      		pop r30
 1315 0406 9F91      		pop r25
 1316               	.LVL89:
 1317               		.loc 1 517 1 view .LVU389
 1318 0408 8F91      		pop r24
 1319               	.LVL90:
 1320               		.loc 1 517 1 view .LVU390
 1321 040a 2F91 2FBF 		__gcc_isr 2
 1321      2F91 
 1322 0410 1895      		reti
 1323               	.LVL91:
 1324               	.L66:
 506:UART.cpp      **** 	}
 1325               		.loc 1 506 15 view .LVU391
 1326 0412 82E0      		ldi r24,lo8(2)
 1327               	.LVL92:
 506:UART.cpp      **** 	}
 1328               		.loc 1 506 15 view .LVU392
 1329 0414 00C0      		rjmp .L65
 1330               		__gcc_isr 0,r18
 1331               		.cfi_endproc
 1332               	.LFE22:
 1334               	.global	__vector_29
 1336               	__vector_29:
 1337               	.LFB23:
 518:UART.cpp      **** 
 519:UART.cpp      **** 
 520:UART.cpp      **** /*************************************************************************
 521:UART.cpp      **** Function: UART1 Data Register Empty interrupt
 522:UART.cpp      **** Purpose:  called when the UART is ready to transmit the next byte
 523:UART.cpp      **** **************************************************************************/
 524:UART.cpp      **** ISR(USART1_UDRE_vect)
 525:UART.cpp      **** {
 1338               		.loc 1 525 1 is_stmt 1 view -0
 1339               		.cfi_startproc
 1340 0416 8F93 8FB7 		__gcc_isr 1
 1340      8F93 
 1341 041c 9F93      		push r25
 1342               	.LCFI27:
 1343               		.cfi_def_cfa_offset 3
 1344               		.cfi_offset 25, -2
 1345 041e EF93      		push r30
 1346               	.LCFI28:
 1347               		.cfi_def_cfa_offset 4
 1348               		.cfi_offset 30, -3
 1349 0420 FF93      		push r31
 1350               	.LCFI29:
 1351               		.cfi_def_cfa_offset 5
 1352               		.cfi_offset 31, -4
 1353               	/* prologue: Signal */
 1354               	/* frame size = 0 */
 1355               	/* stack size = 3...7 */
 1356               	.L__stack_usage = 3 + __gcc_isr.n_pushed
 526:UART.cpp      **** 	unsigned char tmptail;
 1357               		.loc 1 526 2 view .LVU394
 527:UART.cpp      **** 	
 528:UART.cpp      **** 	if ( UART1_TxHead != UART1_TxTail)
 1358               		.loc 1 528 2 view .LVU395
 1359               		.loc 1 528 20 is_stmt 0 view .LVU396
 1360 0422 9091 0000 		lds r25,_ZL12UART1_TxHead
 1361 0426 8091 0000 		lds r24,_ZL12UART1_TxTail
 1362               		.loc 1 528 2 view .LVU397
 1363 042a 9817      		cp r25,r24
 1364 042c 01F0      		breq .L68
 529:UART.cpp      **** 	{
 530:UART.cpp      **** 		/* calculate and store new buffer index */
 531:UART.cpp      **** 		tmptail = (UART1_TxTail + 1) & UART1_TX_BUFFER_MASK;
 1365               		.loc 1 531 3 is_stmt 1 view .LVU398
 1366               		.loc 1 531 32 is_stmt 0 view .LVU399
 1367 042e E091 0000 		lds r30,_ZL12UART1_TxTail
 1368               		.loc 1 531 27 view .LVU400
 1369 0432 EF5F      		subi r30,lo8(-(1))
 1370               		.loc 1 531 11 view .LVU401
 1371 0434 EF73      		andi r30,lo8(63)
 1372               	.LVL93:
 532:UART.cpp      **** 		UART1_TxTail = tmptail;
 1373               		.loc 1 532 3 is_stmt 1 view .LVU402
 1374               		.loc 1 532 16 is_stmt 0 view .LVU403
 1375 0436 E093 0000 		sts _ZL12UART1_TxTail,r30
 533:UART.cpp      **** 
 534:UART.cpp      **** 		/* get one byte from buffer and write it to UART */
 535:UART.cpp      **** 		UDR1 = UART1_TxBuf[tmptail];  /* start transmission */
 1376               		.loc 1 535 3 is_stmt 1 view .LVU404
 1377               		.loc 1 535 22 is_stmt 0 view .LVU405
 1378 043a F0E0      		ldi r31,0
 1379               		.loc 1 535 29 view .LVU406
 1380 043c E050      		subi r30,lo8(-(_ZL11UART1_TxBuf))
 1381 043e F040      		sbci r31,hi8(-(_ZL11UART1_TxBuf))
 1382               	.LVL94:
 1383               		.loc 1 535 29 view .LVU407
 1384 0440 8081      		ld r24,Z
 1385               		.loc 1 535 8 view .LVU408
 1386 0442 8093 CE00 		sts 206,r24
 1387               	.LVL95:
 1388               	.L67:
 1389               	/* epilogue start */
 536:UART.cpp      **** 	}
 537:UART.cpp      **** 	else
 538:UART.cpp      **** 	{
 539:UART.cpp      **** 		/* tx buffer empty, disable UDRE interrupt */
 540:UART.cpp      **** 		UCSR1B &= ~(1 << UDRIE1);
 541:UART.cpp      **** 	}
 542:UART.cpp      **** }...
 1390               		.loc 1 542 1 view .LVU409
 1391 0446 FF91      		pop r31
 1392 0448 EF91      		pop r30
 1393 044a 9F91      		pop r25
 1394 044c 8F91 8FBF 		__gcc_isr 2
 1394      8F91 
 1395 0452 1895      		reti
 1396               	.L68:
 540:UART.cpp      **** 		UCSR1B &= ~(1 << UDRIE1);
 1397               		.loc 1 540 3 is_stmt 1 view .LVU410
 540:UART.cpp      **** 		UCSR1B &= ~(1 << UDRIE1);
 1398               		.loc 1 540 10 is_stmt 0 view .LVU411
 1399 0454 8091 C900 		lds r24,201
 1400 0458 8F7D      		andi r24,lo8(-33)
 1401 045a 8093 C900 		sts 201,r24
 1402               		.loc 1 542 1 view .LVU412
 1403 045e 00C0      		rjmp .L67
 1404               		__gcc_isr 0,r24
 1405               		.cfi_endproc
 1406               	.LFE23:
 1408               		.local	_ZL17UART1_LastRxError
 1409               		.comm	_ZL17UART1_LastRxError,1,1
 1410               		.local	_ZL12UART1_RxTail
 1411               		.comm	_ZL12UART1_RxTail,1,1
 1412               		.local	_ZL12UART1_RxHead
 1413               		.comm	_ZL12UART1_RxHead,1,1
 1414               		.local	_ZL12UART1_TxTail
 1415               		.comm	_ZL12UART1_TxTail,1,1
 1416               		.local	_ZL12UART1_TxHead
 1417               		.comm	_ZL12UART1_TxHead,1,1
 1418               		.local	_ZL11UART1_RxBuf
 1419               		.comm	_ZL11UART1_RxBuf,64,1
 1420               		.local	_ZL11UART1_TxBuf
 1421               		.comm	_ZL11UART1_TxBuf,64,1
 1422               		.local	_ZL17UART0_LastRxError
 1423               		.comm	_ZL17UART0_LastRxError,1,1
 1424               		.local	_ZL12UART0_RxTail
 1425               		.comm	_ZL12UART0_RxTail,1,1
 1426               		.local	_ZL12UART0_RxHead
 1427               		.comm	_ZL12UART0_RxHead,1,1
 1428               		.local	_ZL12UART0_TxTail
 1429               		.comm	_ZL12UART0_TxTail,1,1
 1430               		.local	_ZL12UART0_TxHead
 1431               		.comm	_ZL12UART0_TxHead,1,1
 1432               		.local	_ZL11UART0_RxBuf
 1433               		.comm	_ZL11UART0_RxBuf,64,1
 1434               		.local	_ZL11UART0_TxBuf
 1435               		.comm	_ZL11UART0_TxBuf,64,1
 1436               	.Letext0:
 1437               		.file 2 "/usr/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 UART.cpp
     /tmp/ccQfu3Av.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccQfu3Av.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccQfu3Av.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccQfu3Av.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccQfu3Av.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccQfu3Av.s:12     .text:0000000000000000 _Z10UART0_Initjhh
     /tmp/ccQfu3Av.s:1429   .bss:0000000000000089 _ZL12UART0_TxHead
     /tmp/ccQfu3Av.s:1427   .bss:0000000000000088 _ZL12UART0_TxTail
     /tmp/ccQfu3Av.s:1425   .bss:0000000000000087 _ZL12UART0_RxHead
     /tmp/ccQfu3Av.s:1423   .bss:0000000000000086 _ZL12UART0_RxTail
     /tmp/ccQfu3Av.s:168    .text:00000000000000ae _Z13UART0_GetCharv
     /tmp/ccQfu3Av.s:1431   .bss:000000000000008a _ZL11UART0_RxBuf
     /tmp/ccQfu3Av.s:1421   .bss:0000000000000085 _ZL17UART0_LastRxError
     /tmp/ccQfu3Av.s:231    .text:00000000000000e4 _Z13UART0_PutCharh
     /tmp/ccQfu3Av.s:1433   .bss:00000000000000ca _ZL11UART0_TxBuf
     /tmp/ccQfu3Av.s:281    .text:000000000000010e _Z15UART0_PutStringPKc
     /tmp/ccQfu3Av.s:330    .text:0000000000000126 _Z17UART0_PutString_pPKc
     /tmp/ccQfu3Av.s:398    .text:0000000000000142 _Z17UART0_RxAvailablev
     /tmp/ccQfu3Av.s:424    .text:0000000000000154 _Z17UART0_TxAvailablev
     /tmp/ccQfu3Av.s:450    .text:0000000000000166 _Z11UART0_Flushv
     /tmp/ccQfu3Av.s:470    .text:0000000000000170 _Z15UART0_QueueCharh
     /tmp/ccQfu3Av.s:528    .text:000000000000019a _Z16UART0_QueueArrayPKch
     /tmp/ccQfu3Av.s:593    .text:00000000000001c2 _Z14UART0_PutQueuev
     /tmp/ccQfu3Av.s:616    .text:00000000000001ce __vector_20
                            *ABS*:0000000000000002 __gcc_isr.n_pushed.001
     /tmp/ccQfu3Av.s:713    .text:000000000000021a __vector_21
                            *ABS*:0000000000000002 __gcc_isr.n_pushed.002
     /tmp/ccQfu3Av.s:787    .text:0000000000000264 _Z10UART1_Initjhh
     /tmp/ccQfu3Av.s:1415   .bss:0000000000000004 _ZL12UART1_TxHead
     /tmp/ccQfu3Av.s:1413   .bss:0000000000000003 _ZL12UART1_TxTail
     /tmp/ccQfu3Av.s:1411   .bss:0000000000000002 _ZL12UART1_RxHead
     /tmp/ccQfu3Av.s:1409   .bss:0000000000000001 _ZL12UART1_RxTail
     /tmp/ccQfu3Av.s:937    .text:0000000000000308 _Z13UART1_GetCharv
     /tmp/ccQfu3Av.s:1417   .bss:0000000000000005 _ZL11UART1_RxBuf
                             .bss:0000000000000000 _ZL17UART1_LastRxError
     /tmp/ccQfu3Av.s:1000   .text:000000000000033e _Z13UART1_PutCharh
     /tmp/ccQfu3Av.s:1419   .bss:0000000000000045 _ZL11UART1_TxBuf
     /tmp/ccQfu3Av.s:1050   .text:0000000000000368 _Z15UART1_PutStringPKc
     /tmp/ccQfu3Av.s:1099   .text:0000000000000380 _Z17UART1_PutString_pPKc
     /tmp/ccQfu3Av.s:1167   .text:000000000000039c _Z17UART1_RxAvailablev
     /tmp/ccQfu3Av.s:1193   .text:00000000000003ae _Z17UART1_TxAvailablev
     /tmp/ccQfu3Av.s:1219   .text:00000000000003c0 _Z11UART1_Flushv
     /tmp/ccQfu3Av.s:1239   .text:00000000000003ca __vector_28
                            *ABS*:0000000000000002 __gcc_isr.n_pushed.003
     /tmp/ccQfu3Av.s:1336   .text:0000000000000416 __vector_29
                            *ABS*:0000000000000002 __gcc_isr.n_pushed.004

UNDEFINED SYMBOLS
__udivmodsi4
__do_clear_bss
