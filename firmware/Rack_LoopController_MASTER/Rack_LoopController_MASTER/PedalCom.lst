   1               		.file	"PedalCom.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  11               	_Z12Select_RX_TXh.part.0:
  12               	.LFB15:
  13               		.file 1 "PedalCom.cpp"
   1:PedalCom.cpp  **** /*
   2:PedalCom.cpp  ****  * PedalComunication.cpp
   3:PedalCom.cpp  ****  *
   4:PedalCom.cpp  ****  * Created: 27-01-2020 19:35:30
   5:PedalCom.cpp  ****  *  Author: Esben
   6:PedalCom.cpp  ****  */ 
   7:PedalCom.cpp  **** 
   8:PedalCom.cpp  **** /* Includes */
   9:PedalCom.cpp  **** #include <avr/io.h>
  10:PedalCom.cpp  **** #include <avr/interrupt.h>
  11:PedalCom.cpp  **** #include "PedalCom.h"
  12:PedalCom.cpp  **** #include "UART.h"
  13:PedalCom.cpp  **** #include "System.h"
  14:PedalCom.cpp  **** 
  15:PedalCom.cpp  **** /* Defines */
  16:PedalCom.cpp  **** #define SELECT_RX_TX_DDR				DDRB
  17:PedalCom.cpp  **** #define SELECT_RX_TX_PORT				PORTB
  18:PedalCom.cpp  **** #define SELECT_RX_PORT					PORTB3
  19:PedalCom.cpp  **** #define SELECT_RX_MASK					(1 << SELECT_RX_PORT)
  20:PedalCom.cpp  **** #define SELECT_TX_PORT					PORTB4
  21:PedalCom.cpp  **** #define SELECT_TX_MASK					(1 << SELECT_TX_PORT)
  22:PedalCom.cpp  **** 
  23:PedalCom.cpp  **** /* Size of the circular receive/transmit queues, must be power of 2 */
  24:PedalCom.cpp  **** #define RX_QUEUE_SIZE		4
  25:PedalCom.cpp  **** #define TX_QUEUE_SIZE		8
  26:PedalCom.cpp  **** 
  27:PedalCom.cpp  **** /* Mask for calculating RX/TX queues head/tail */
  28:PedalCom.cpp  **** #define RX_QUEUE_MASK	( RX_QUEUE_SIZE - 1)
  29:PedalCom.cpp  **** #define TX_QUEUE_MASK	( TX_QUEUE_SIZE - 1)
  30:PedalCom.cpp  **** 
  31:PedalCom.cpp  **** #define CMD_HEADER_SIZE		4
  32:PedalCom.cpp  **** #define SOF_BYTE			0x5F
  33:PedalCom.cpp  **** #define EOF_BYTE			0xEF
  34:PedalCom.cpp  **** 
  35:PedalCom.cpp  **** #define SOF_BYTE_IDX		0
  36:PedalCom.cpp  **** #define LENGTH_BYTE_IDX		1
  37:PedalCom.cpp  **** #define CMD_BYTE_IDX		2
  38:PedalCom.cpp  **** #define DATA_BYTE_IDX		3
  39:PedalCom.cpp  **** 
  40:PedalCom.cpp  **** #define RX_BUFFER_SIZE		16
  41:PedalCom.cpp  **** 
  42:PedalCom.cpp  **** #define DIR_TRANSMIT		0
  43:PedalCom.cpp  **** #define DIR_RECEIVE			1
  44:PedalCom.cpp  **** 
  45:PedalCom.cpp  **** #define MAX_RETRANSMITS		5
  46:PedalCom.cpp  **** 
  47:PedalCom.cpp  **** 
  48:PedalCom.cpp  **** /* Function prototypes */
  49:PedalCom.cpp  **** void Select_RX_TX(uint8_t dir);
  50:PedalCom.cpp  **** 
  51:PedalCom.cpp  **** /* Global variables */
  52:PedalCom.cpp  **** volatile bool PedalCom_DelayTxFlag = false;
  53:PedalCom.cpp  **** volatile uint8_t PedalCom_DelayTXOvfCnt = 0;
  54:PedalCom.cpp  **** volatile uint16_t PedalCom_ResponseTimeoutOvfCnt = 0;
  55:PedalCom.cpp  **** volatile bool PedalCom_ResponseTimeoutFlag = false;
  56:PedalCom.cpp  **** volatile uint16_t PedalCom_FullFrameTimeoutOvfCnt = 0;
  57:PedalCom.cpp  **** volatile bool PedalCom_FullFrameTimeoutFlag = false;
  58:PedalCom.cpp  **** volatile uint16_t PedalCom_HeartbeatOvfCnt = 1;
  59:PedalCom.cpp  **** volatile bool PedalCom_HeartbeatFlag = false;
  60:PedalCom.cpp  **** volatile bool PedalCom_ConnectionOpen = true;
  61:PedalCom.cpp  **** 
  62:PedalCom.cpp  **** /* Local variables */
  63:PedalCom.cpp  **** volatile unsigned char RX_Buffer[RX_BUFFER_SIZE] = {0};
  64:PedalCom.cpp  **** 
  65:PedalCom.cpp  **** volatile CommandStruct RX_CommandQueue[RX_QUEUE_SIZE] = {Empty, 0, {0,0,0,0}, false, false};
  66:PedalCom.cpp  **** volatile CommandStruct TX_CommandQueue[TX_QUEUE_SIZE] = {Empty, 0, {0,0,0,0}, false, true};
  67:PedalCom.cpp  **** volatile uint8_t RxHead = 0;
  68:PedalCom.cpp  **** volatile uint8_t RxTail = 0;
  69:PedalCom.cpp  **** volatile uint8_t TxHead = 0;
  70:PedalCom.cpp  **** volatile uint8_t TxTail = 0;
  71:PedalCom.cpp  **** 
  72:PedalCom.cpp  **** volatile uint8_t RetransmitCnt = 0;
  73:PedalCom.cpp  **** 
  74:PedalCom.cpp  **** /* Function implementations */
  75:PedalCom.cpp  **** void PedalCom_Init()
  76:PedalCom.cpp  **** {
  77:PedalCom.cpp  **** 	/* Set RX/TX Select GPIOs to output */
  78:PedalCom.cpp  **** 	SELECT_RX_TX_DDR |= (SELECT_RX_MASK | SELECT_TX_MASK);
  79:PedalCom.cpp  **** 	
  80:PedalCom.cpp  **** 	/* Activate receive */
  81:PedalCom.cpp  **** 	Select_RX_TX(DIR_RECEIVE);
  82:PedalCom.cpp  **** 	
  83:PedalCom.cpp  **** 	/* Enable TX Complete Interrupt */
  84:PedalCom.cpp  **** 	UCSR0B |= (1 << TXCIE0);
  85:PedalCom.cpp  **** }
  86:PedalCom.cpp  **** 
  87:PedalCom.cpp  **** bool PedalCom_RxAvailable()
  88:PedalCom.cpp  **** {
  89:PedalCom.cpp  **** 	return (RxHead != RxTail);
  90:PedalCom.cpp  **** }
  91:PedalCom.cpp  **** 
  92:PedalCom.cpp  **** bool PedalCom_TxAvailable()
  93:PedalCom.cpp  **** {
  94:PedalCom.cpp  **** 	return (TxHead != TxTail);
  95:PedalCom.cpp  **** }
  96:PedalCom.cpp  **** 
  97:PedalCom.cpp  **** void PedalCom_FlushTxQueue()
  98:PedalCom.cpp  **** {
  99:PedalCom.cpp  **** 	TxTail = TxHead;
 100:PedalCom.cpp  **** 	TX_CommandQueue[TxHead].acked = true;
 101:PedalCom.cpp  **** }
 102:PedalCom.cpp  **** 
 103:PedalCom.cpp  **** 
 104:PedalCom.cpp  **** void PedalCom_Receive()
 105:PedalCom.cpp  **** {
 106:PedalCom.cpp  **** 	static uint8_t RX_ByteCnt = 0;
 107:PedalCom.cpp  **** 	
 108:PedalCom.cpp  **** 	/* Start/reset Delay TX timer. Both in case a NACK needs to be sent, and also to
 109:PedalCom.cpp  **** 	   prevent response to previous command being sent while still receiving new data. */
 110:PedalCom.cpp  **** 	if (PedalCom_DelayTXOvfCnt != 0)
 111:PedalCom.cpp  **** 	{
 112:PedalCom.cpp  **** 		PedalCom_DelayTXOvfCnt = 1;
 113:PedalCom.cpp  **** 	}
 114:PedalCom.cpp  **** 	
 115:PedalCom.cpp  **** 	/* Fetch new byte from UART buffer */
 116:PedalCom.cpp  **** 	RX_Buffer[RX_ByteCnt] = UART0_GetChar();
 117:PedalCom.cpp  **** 	RX_ByteCnt++;
 118:PedalCom.cpp  **** 	
 119:PedalCom.cpp  **** 	/* Handle new byte */
 120:PedalCom.cpp  **** 	if ((RX_ByteCnt - 1) == SOF_BYTE_IDX)
 121:PedalCom.cpp  **** 	{
 122:PedalCom.cpp  **** 		PedalCom_ResponseTimeoutOvfCnt = 0;		// Stop counter
 123:PedalCom.cpp  **** 		
 124:PedalCom.cpp  **** 		if (RX_Buffer[SOF_BYTE_IDX] == SOF_BYTE)
 125:PedalCom.cpp  **** 		{
 126:PedalCom.cpp  **** 			PedalCom_FullFrameTimeoutOvfCnt = 1;
 127:PedalCom.cpp  **** 		}
 128:PedalCom.cpp  **** 		else
 129:PedalCom.cpp  **** 		{
 130:PedalCom.cpp  **** 			RX_ByteCnt = 0;
 131:PedalCom.cpp  **** 			PedalCom_DelayTXOvfCnt = 1;	// Start/reset Delay TX counter in case a new message is in queue to
 132:PedalCom.cpp  **** 				
 133:PedalCom.cpp  **** 			if (RX_Buffer[SOF_BYTE_IDX] == ACK_BYTE)
 134:PedalCom.cpp  **** 			{
 135:PedalCom.cpp  **** 				RetransmitCnt = 0;	// Reset retransmit counter
 136:PedalCom.cpp  **** 				TX_CommandQueue[TxTail].acked = true;
 137:PedalCom.cpp  **** 				
 138:PedalCom.cpp  **** 				if (!PedalCom_ConnectionOpen)
 139:PedalCom.cpp  **** 				{
 140:PedalCom.cpp  **** 					PedalCom_ConnectionOpen = true;
 141:PedalCom.cpp  **** 					
 142:PedalCom.cpp  **** 					/* Set system state to initialize Pedal */
 143:PedalCom.cpp  **** 					SystemState = INITIALIZE_SYSTEM;
 144:PedalCom.cpp  **** 				}
 145:PedalCom.cpp  **** 			}
 146:PedalCom.cpp  **** 			else if (RX_Buffer[SOF_BYTE_IDX] == NACK_BYTE)
 147:PedalCom.cpp  **** 			{
 148:PedalCom.cpp  **** 				PedalCom_PrepareRetransmit();
 149:PedalCom.cpp  **** 			}
 150:PedalCom.cpp  **** 		}
 151:PedalCom.cpp  **** 	}
 152:PedalCom.cpp  **** 	else if ((RX_ByteCnt - 1) == LENGTH_BYTE_IDX)
 153:PedalCom.cpp  **** 	{
 154:PedalCom.cpp  **** 		RX_CommandQueue[RxHead].length = RX_Buffer[LENGTH_BYTE_IDX];
 155:PedalCom.cpp  **** 	}
 156:PedalCom.cpp  **** 	else if (RX_ByteCnt == RX_CommandQueue[RxHead].length)
 157:PedalCom.cpp  **** 	{
 158:PedalCom.cpp  **** 		PedalCom_FullFrameTimeoutOvfCnt = 0;
 159:PedalCom.cpp  **** 		
 160:PedalCom.cpp  **** 		/* If full frame received */
 161:PedalCom.cpp  **** 		if (RX_Buffer[RX_CommandQueue[RxHead].length - 1] == EOF_BYTE)
 162:PedalCom.cpp  **** 		{
 163:PedalCom.cpp  **** 			RX_CommandQueue[RxHead].command = (CMD)RX_Buffer[CMD_BYTE_IDX];
 164:PedalCom.cpp  **** 			
 165:PedalCom.cpp  **** 			for (uint8_t i = 0; i < (RX_CommandQueue[RxHead].length - CMD_HEADER_SIZE); i++)
 166:PedalCom.cpp  **** 			{
 167:PedalCom.cpp  **** 				RX_CommandQueue[RxHead].data[i] = RX_Buffer[DATA_BYTE_IDX + i];
 168:PedalCom.cpp  **** 			}
 169:PedalCom.cpp  **** 			
 170:PedalCom.cpp  **** 			/* calculate new RX head index */
 171:PedalCom.cpp  **** 			uint8_t tmpHead = (RxHead + 1) & RX_QUEUE_MASK;
 172:PedalCom.cpp  **** 				
 173:PedalCom.cpp  **** 			if ( tmpHead == RxTail )
 174:PedalCom.cpp  **** 			{
 175:PedalCom.cpp  **** 				/* error: RX command queue overflow */
 176:PedalCom.cpp  **** 			}
 177:PedalCom.cpp  **** 			else
 178:PedalCom.cpp  **** 			{
 179:PedalCom.cpp  **** 				/* store new index */
 180:PedalCom.cpp  **** 				RxHead = tmpHead;
 181:PedalCom.cpp  **** 			}
 182:PedalCom.cpp  **** 		}
 183:PedalCom.cpp  **** 		else
 184:PedalCom.cpp  **** 		{
 185:PedalCom.cpp  **** 			/* Prepare Transmit NACK */
 186:PedalCom.cpp  **** 			UART0_QueueChar(NACK_BYTE);
 187:PedalCom.cpp  **** 			PedalCom_DelayTXOvfCnt = 1;	// Start/reset Delay TX timer
 188:PedalCom.cpp  **** 		}
 189:PedalCom.cpp  **** 			
 190:PedalCom.cpp  **** 		RX_ByteCnt = 0;
 191:PedalCom.cpp  **** 	}	
 192:PedalCom.cpp  **** }
 193:PedalCom.cpp  **** 
 194:PedalCom.cpp  **** 
 195:PedalCom.cpp  **** void PedalCom_HandleReceived()
 196:PedalCom.cpp  **** {
 197:PedalCom.cpp  **** 	unsigned char response;
 198:PedalCom.cpp  **** 	response = System_HandlePedalCommand(RX_CommandQueue[RxTail].command, RX_CommandQueue[RxTail].leng
 199:PedalCom.cpp  **** 		
 200:PedalCom.cpp  **** 	/* Calculate and store new queue index */
 201:PedalCom.cpp  **** 	RxTail = (RxTail + 1) & RX_QUEUE_MASK;
 202:PedalCom.cpp  **** 
 203:PedalCom.cpp  **** 	/* Prepare Transmit response */
 204:PedalCom.cpp  **** 	UART0_QueueChar(response);
 205:PedalCom.cpp  **** 	
 206:PedalCom.cpp  **** 	/* Start/reset Delay TX timer */
 207:PedalCom.cpp  **** 	PedalCom_DelayTXOvfCnt = 1;
 208:PedalCom.cpp  **** }
 209:PedalCom.cpp  **** 
 210:PedalCom.cpp  **** 
 211:PedalCom.cpp  **** bool PedalCom_QueueCommand(CMD cmd, uint8_t datLen, uint8_t *dat)
 212:PedalCom.cpp  **** {
 213:PedalCom.cpp  **** 	/* Calculate new queue head index */
 214:PedalCom.cpp  **** 	uint8_t tmpHead = (TxHead + 1) & TX_QUEUE_MASK;
 215:PedalCom.cpp  **** 	
 216:PedalCom.cpp  **** 	/* Check for free space in queue */
 217:PedalCom.cpp  **** 	if ( tmpHead == TxTail )
 218:PedalCom.cpp  **** 		return false;
 219:PedalCom.cpp  **** 	
 220:PedalCom.cpp  **** 	/* Copy command to queue */
 221:PedalCom.cpp  **** 	TX_CommandQueue[TxHead].command = cmd;
 222:PedalCom.cpp  **** 	TX_CommandQueue[TxHead].length = datLen + CMD_HEADER_SIZE;
 223:PedalCom.cpp  **** 	TX_CommandQueue[TxHead].sent = false;
 224:PedalCom.cpp  **** 	TX_CommandQueue[TxHead].acked = false;
 225:PedalCom.cpp  **** 	
 226:PedalCom.cpp  **** 	for (uint8_t i = 0; i < datLen; i++)
 227:PedalCom.cpp  **** 	{
 228:PedalCom.cpp  **** 		TX_CommandQueue[TxHead].data[i] = dat[i];
 229:PedalCom.cpp  **** 	}
 230:PedalCom.cpp  **** 	
 231:PedalCom.cpp  **** 	/* Update queue head */
 232:PedalCom.cpp  **** 	TxHead = tmpHead;
 233:PedalCom.cpp  **** 	
 234:PedalCom.cpp  **** 	return true;
 235:PedalCom.cpp  **** }
 236:PedalCom.cpp  **** 
 237:PedalCom.cpp  **** 
 238:PedalCom.cpp  **** void PedalCom_PutCommand()
 239:PedalCom.cpp  **** {
 240:PedalCom.cpp  **** 	/* Only transmit new command if previous one got an ACK */
 241:PedalCom.cpp  **** 	if (TX_CommandQueue[TxTail].acked)
 242:PedalCom.cpp  **** 	{
 243:PedalCom.cpp  **** 		/* Calculate and store new queue tail index */
 244:PedalCom.cpp  **** 		TxTail = (TxTail + 1) & TX_QUEUE_MASK;
 245:PedalCom.cpp  **** 	}
 246:PedalCom.cpp  **** 	else if (!(TX_CommandQueue[TxTail].sent))
 247:PedalCom.cpp  **** 	{
 248:PedalCom.cpp  **** 		/* Send command frame to UART TX buffer */
 249:PedalCom.cpp  **** 		UART0_QueueChar(SOF_BYTE);
 250:PedalCom.cpp  **** 		UART0_QueueChar((unsigned char)TX_CommandQueue[TxTail].length);
 251:PedalCom.cpp  **** 		UART0_QueueChar((unsigned char)TX_CommandQueue[TxTail].command);
 252:PedalCom.cpp  **** 		
 253:PedalCom.cpp  **** 		for (uint8_t i = 0; i < (TX_CommandQueue[TxTail].length - CMD_HEADER_SIZE); i++)
 254:PedalCom.cpp  **** 		{
 255:PedalCom.cpp  **** 			UART0_QueueChar((unsigned char)TX_CommandQueue[TxTail].data[i]);
 256:PedalCom.cpp  **** 		}
 257:PedalCom.cpp  **** 		
 258:PedalCom.cpp  **** 		UART0_QueueChar(EOF_BYTE);
 259:PedalCom.cpp  **** 		
 260:PedalCom.cpp  **** 		/* If no data is waiting to be transmitted */
 261:PedalCom.cpp  **** 		if (PedalCom_DelayTXOvfCnt == 0)
 262:PedalCom.cpp  **** 		{
 263:PedalCom.cpp  **** 			/* Signal that data is waiting to be transmitted without delay */
 264:PedalCom.cpp  **** 			PedalCom_DelayTxFlag = true;
 265:PedalCom.cpp  **** 		}
 266:PedalCom.cpp  **** 		
 267:PedalCom.cpp  **** 		TX_CommandQueue[TxTail].sent = true;
 268:PedalCom.cpp  **** 		
 269:PedalCom.cpp  **** 		/* Start response timer */
 270:PedalCom.cpp  **** 		PedalCom_ResponseTimeoutOvfCnt = 1;
 271:PedalCom.cpp  **** 	}
 272:PedalCom.cpp  **** }
 273:PedalCom.cpp  **** 
 274:PedalCom.cpp  **** 
 275:PedalCom.cpp  **** void PedalCom_PrepareRetransmit()
 276:PedalCom.cpp  **** {
 277:PedalCom.cpp  **** 	if (RetransmitCnt < MAX_RETRANSMITS)
 278:PedalCom.cpp  **** 	{
 279:PedalCom.cpp  **** 		RetransmitCnt++;
 280:PedalCom.cpp  **** 		
 281:PedalCom.cpp  **** 		/* Prepare retransmit latest command */
 282:PedalCom.cpp  **** 		TX_CommandQueue[TxTail].sent = false;
 283:PedalCom.cpp  **** 	}
 284:PedalCom.cpp  **** }
 285:PedalCom.cpp  **** 
 286:PedalCom.cpp  **** 
 287:PedalCom.cpp  **** void PedalCom_Transmit()
 288:PedalCom.cpp  **** {
 289:PedalCom.cpp  **** 	/* Activate Transmit */
 290:PedalCom.cpp  **** 	Select_RX_TX(DIR_TRANSMIT);
 291:PedalCom.cpp  **** 	
 292:PedalCom.cpp  **** 	/* Start transmit */
 293:PedalCom.cpp  **** 	UART0_PutQueue();
 294:PedalCom.cpp  **** }
 295:PedalCom.cpp  **** 
 296:PedalCom.cpp  **** 
 297:PedalCom.cpp  **** void Select_RX_TX(uint8_t dir)
  14               		.loc 1 297 6 view -0
  15               		.cfi_startproc
  16               	/* prologue: function */
  17               	/* frame size = 0 */
  18               	/* stack size = 0 */
  19               	.L__stack_usage = 0
  20               	.LVL0:
 298:PedalCom.cpp  **** {
 299:PedalCom.cpp  **** 	if (dir == DIR_TRANSMIT)
 300:PedalCom.cpp  **** 	{
 301:PedalCom.cpp  **** 		SELECT_RX_TX_PORT &= ~(SELECT_RX_MASK);
  21               		.loc 1 301 3 view .LVU1
  22               		.loc 1 301 21 is_stmt 0 view .LVU2
  23 0000 2B98      		cbi 0x5,3
 302:PedalCom.cpp  **** 		SELECT_RX_TX_PORT |= SELECT_TX_MASK;
  24               		.loc 1 302 3 is_stmt 1 view .LVU3
  25               		.loc 1 302 21 is_stmt 0 view .LVU4
  26 0002 2C9A      		sbi 0x5,4
  27               	/* epilogue start */
 303:PedalCom.cpp  **** 	}
 304:PedalCom.cpp  **** 	else
 305:PedalCom.cpp  **** 	{
 306:PedalCom.cpp  **** 		SELECT_RX_TX_PORT |= SELECT_RX_MASK;
 307:PedalCom.cpp  **** 		SELECT_RX_TX_PORT &= ~(SELECT_TX_MASK);
 308:PedalCom.cpp  **** 	}
 309:PedalCom.cpp  **** }
  28               		.loc 1 309 1 view .LVU5
  29 0004 0895      		ret
  30               		.cfi_endproc
  31               	.LFE15:
  33               	.global	_Z20PedalCom_RxAvailablev
  35               	_Z20PedalCom_RxAvailablev:
  36               	.LFB3:
  88:PedalCom.cpp  **** 	return (RxHead != RxTail);
  37               		.loc 1 88 1 is_stmt 1 view -0
  38               		.cfi_startproc
  39               	/* prologue: function */
  40               	/* frame size = 0 */
  41               	/* stack size = 0 */
  42               	.L__stack_usage = 0
  89:PedalCom.cpp  **** }
  43               		.loc 1 89 2 view .LVU7
  89:PedalCom.cpp  **** }
  44               		.loc 1 89 17 is_stmt 0 view .LVU8
  45 0006 2091 0000 		lds r18,RxHead
  46 000a 9091 0000 		lds r25,RxTail
  89:PedalCom.cpp  **** }
  47               		.loc 1 89 26 view .LVU9
  48 000e 81E0      		ldi r24,lo8(1)
  49 0010 2913      		cpse r18,r25
  50 0012 00C0      		rjmp .L3
  51 0014 80E0      		ldi r24,0
  52               	.L3:
  53               	/* epilogue start */
  90:PedalCom.cpp  **** 
  54               		.loc 1 90 1 view .LVU10
  55 0016 0895      		ret
  56               		.cfi_endproc
  57               	.LFE3:
  59               	.global	_Z20PedalCom_TxAvailablev
  61               	_Z20PedalCom_TxAvailablev:
  62               	.LFB4:
  93:PedalCom.cpp  **** 	return (TxHead != TxTail);
  63               		.loc 1 93 1 is_stmt 1 view -0
  64               		.cfi_startproc
  65               	/* prologue: function */
  66               	/* frame size = 0 */
  67               	/* stack size = 0 */
  68               	.L__stack_usage = 0
  94:PedalCom.cpp  **** }
  69               		.loc 1 94 2 view .LVU12
  94:PedalCom.cpp  **** }
  70               		.loc 1 94 17 is_stmt 0 view .LVU13
  71 0018 2091 0000 		lds r18,TxHead
  72 001c 9091 0000 		lds r25,TxTail
  94:PedalCom.cpp  **** }
  73               		.loc 1 94 26 view .LVU14
  74 0020 81E0      		ldi r24,lo8(1)
  75 0022 2913      		cpse r18,r25
  76 0024 00C0      		rjmp .L5
  77 0026 80E0      		ldi r24,0
  78               	.L5:
  79               	/* epilogue start */
  95:PedalCom.cpp  **** 
  80               		.loc 1 95 1 view .LVU15
  81 0028 0895      		ret
  82               		.cfi_endproc
  83               	.LFE4:
  85               	.global	_Z21PedalCom_FlushTxQueuev
  87               	_Z21PedalCom_FlushTxQueuev:
  88               	.LFB5:
  98:PedalCom.cpp  **** 	TxTail = TxHead;
  89               		.loc 1 98 1 is_stmt 1 view -0
  90               		.cfi_startproc
  91               	/* prologue: function */
  92               	/* frame size = 0 */
  93               	/* stack size = 0 */
  94               	.L__stack_usage = 0
  99:PedalCom.cpp  **** 	TX_CommandQueue[TxHead].acked = true;
  95               		.loc 1 99 2 view .LVU17
  99:PedalCom.cpp  **** 	TX_CommandQueue[TxHead].acked = true;
  96               		.loc 1 99 9 is_stmt 0 view .LVU18
  97 002a 8091 0000 		lds r24,TxHead
  98 002e 8093 0000 		sts TxTail,r24
 100:PedalCom.cpp  **** }
  99               		.loc 1 100 2 is_stmt 1 view .LVU19
 100:PedalCom.cpp  **** }
 100               		.loc 1 100 18 is_stmt 0 view .LVU20
 101 0032 E091 0000 		lds r30,TxHead
 100:PedalCom.cpp  **** }
 102               		.loc 1 100 32 view .LVU21
 103 0036 88E0      		ldi r24,lo8(8)
 104 0038 E89F      		mul r30,r24
 105 003a F001      		movw r30,r0
 106 003c 1124      		clr __zero_reg__
 107 003e E050      		subi r30,lo8(-(TX_CommandQueue))
 108 0040 F040      		sbci r31,hi8(-(TX_CommandQueue))
 109 0042 81E0      		ldi r24,lo8(1)
 110 0044 8783      		std Z+7,r24
 111               	/* epilogue start */
 101:PedalCom.cpp  **** 
 112               		.loc 1 101 1 view .LVU22
 113 0046 0895      		ret
 114               		.cfi_endproc
 115               	.LFE5:
 117               	.global	_Z23PedalCom_HandleReceivedv
 119               	_Z23PedalCom_HandleReceivedv:
 120               	.LFB7:
 196:PedalCom.cpp  **** 	unsigned char response;
 121               		.loc 1 196 1 is_stmt 1 view -0
 122               		.cfi_startproc
 123               	/* prologue: function */
 124               	/* frame size = 0 */
 125               	/* stack size = 0 */
 126               	.L__stack_usage = 0
 197:PedalCom.cpp  **** 	response = System_HandlePedalCommand(RX_CommandQueue[RxTail].command, RX_CommandQueue[RxTail].leng
 127               		.loc 1 197 2 view .LVU24
 198:PedalCom.cpp  **** 		
 128               		.loc 1 198 2 view .LVU25
 198:PedalCom.cpp  **** 		
 129               		.loc 1 198 131 is_stmt 0 view .LVU26
 130 0048 4091 0000 		lds r20,RxTail
 198:PedalCom.cpp  **** 		
 131               		.loc 1 198 88 view .LVU27
 132 004c E091 0000 		lds r30,RxTail
 198:PedalCom.cpp  **** 		
 133               		.loc 1 198 96 view .LVU28
 134 0050 88E0      		ldi r24,lo8(8)
 135 0052 E89F      		mul r30,r24
 136 0054 F001      		movw r30,r0
 137 0056 1124      		clr __zero_reg__
 138 0058 E050      		subi r30,lo8(-(RX_CommandQueue))
 139 005a F040      		sbci r31,hi8(-(RX_CommandQueue))
 140 005c 6181      		ldd r22,Z+1
 198:PedalCom.cpp  **** 		
 141               		.loc 1 198 55 view .LVU29
 142 005e E091 0000 		lds r30,RxTail
 198:PedalCom.cpp  **** 		
 143               		.loc 1 198 63 view .LVU30
 144 0062 98E0      		ldi r25,lo8(8)
 145 0064 E99F      		mul r30,r25
 146 0066 F001      		movw r30,r0
 147 0068 1124      		clr __zero_reg__
 148 006a E050      		subi r30,lo8(-(RX_CommandQueue))
 149 006c F040      		sbci r31,hi8(-(RX_CommandQueue))
 150 006e 8081      		ld r24,Z
 198:PedalCom.cpp  **** 		
 151               		.loc 1 198 139 view .LVU31
 152 0070 98E0      		ldi r25,lo8(8)
 153 0072 499F      		mul r20,r25
 154 0074 A001      		movw r20,r0
 155 0076 1124      		clr __zero_reg__
 156 0078 4050      		subi r20,lo8(-(RX_CommandQueue+2))
 157 007a 5040      		sbci r21,hi8(-(RX_CommandQueue+2))
 198:PedalCom.cpp  **** 		
 158               		.loc 1 198 38 view .LVU32
 159 007c 0E94 0000 		call _Z25System_HandlePedalCommand3CMDhPh
 160               	.LVL1:
 201:PedalCom.cpp  **** 
 161               		.loc 1 201 2 is_stmt 1 view .LVU33
 201:PedalCom.cpp  **** 
 162               		.loc 1 201 24 is_stmt 0 view .LVU34
 163 0080 9091 0000 		lds r25,RxTail
 201:PedalCom.cpp  **** 
 164               		.loc 1 201 19 view .LVU35
 165 0084 9F5F      		subi r25,lo8(-(1))
 201:PedalCom.cpp  **** 
 166               		.loc 1 201 24 view .LVU36
 167 0086 9370      		andi r25,lo8(3)
 201:PedalCom.cpp  **** 
 168               		.loc 1 201 9 view .LVU37
 169 0088 9093 0000 		sts RxTail,r25
 204:PedalCom.cpp  **** 	
 170               		.loc 1 204 2 is_stmt 1 view .LVU38
 204:PedalCom.cpp  **** 	
 171               		.loc 1 204 17 is_stmt 0 view .LVU39
 172 008c 0E94 0000 		call _Z15UART0_QueueCharh
 173               	.LVL2:
 207:PedalCom.cpp  **** }
 174               		.loc 1 207 2 is_stmt 1 view .LVU40
 207:PedalCom.cpp  **** }
 175               		.loc 1 207 25 is_stmt 0 view .LVU41
 176 0090 81E0      		ldi r24,lo8(1)
 177 0092 8093 0000 		sts PedalCom_DelayTXOvfCnt,r24
 178               	/* epilogue start */
 208:PedalCom.cpp  **** 
 179               		.loc 1 208 1 view .LVU42
 180 0096 0895      		ret
 181               		.cfi_endproc
 182               	.LFE7:
 184               	.global	_Z21PedalCom_QueueCommand3CMDhPh
 186               	_Z21PedalCom_QueueCommand3CMDhPh:
 187               	.LVL3:
 188               	.LFB8:
 212:PedalCom.cpp  **** 	/* Calculate new queue head index */
 189               		.loc 1 212 1 is_stmt 1 view -0
 190               		.cfi_startproc
 191               	/* prologue: function */
 192               	/* frame size = 0 */
 193               	/* stack size = 0 */
 194               	.L__stack_usage = 0
 214:PedalCom.cpp  **** 	
 195               		.loc 1 214 2 view .LVU44
 214:PedalCom.cpp  **** 	
 196               		.loc 1 214 33 is_stmt 0 view .LVU45
 197 0098 9091 0000 		lds r25,TxHead
 214:PedalCom.cpp  **** 	
 198               		.loc 1 214 28 view .LVU46
 199 009c 9F5F      		subi r25,lo8(-(1))
 214:PedalCom.cpp  **** 	
 200               		.loc 1 214 35 view .LVU47
 201 009e 9770      		andi r25,lo8(7)
 202               	.LVL4:
 217:PedalCom.cpp  **** 		return false;
 203               		.loc 1 217 2 is_stmt 1 view .LVU48
 217:PedalCom.cpp  **** 		return false;
 204               		.loc 1 217 15 is_stmt 0 view .LVU49
 205 00a0 2091 0000 		lds r18,TxTail
 217:PedalCom.cpp  **** 		return false;
 206               		.loc 1 217 2 view .LVU50
 207 00a4 2917      		cp r18,r25
 208 00a6 01F0      		breq .L12
 221:PedalCom.cpp  **** 	TX_CommandQueue[TxHead].length = datLen + CMD_HEADER_SIZE;
 209               		.loc 1 221 2 is_stmt 1 view .LVU51
 221:PedalCom.cpp  **** 	TX_CommandQueue[TxHead].length = datLen + CMD_HEADER_SIZE;
 210               		.loc 1 221 18 is_stmt 0 view .LVU52
 211 00a8 E091 0000 		lds r30,TxHead
 221:PedalCom.cpp  **** 	TX_CommandQueue[TxHead].length = datLen + CMD_HEADER_SIZE;
 212               		.loc 1 221 34 view .LVU53
 213 00ac 28E0      		ldi r18,lo8(8)
 214 00ae E29F      		mul r30,r18
 215 00b0 F001      		movw r30,r0
 216 00b2 1124      		clr __zero_reg__
 217 00b4 E050      		subi r30,lo8(-(TX_CommandQueue))
 218 00b6 F040      		sbci r31,hi8(-(TX_CommandQueue))
 219 00b8 8083      		st Z,r24
 222:PedalCom.cpp  **** 	TX_CommandQueue[TxHead].sent = false;
 220               		.loc 1 222 2 is_stmt 1 view .LVU54
 222:PedalCom.cpp  **** 	TX_CommandQueue[TxHead].sent = false;
 221               		.loc 1 222 18 is_stmt 0 view .LVU55
 222 00ba E091 0000 		lds r30,TxHead
 222:PedalCom.cpp  **** 	TX_CommandQueue[TxHead].sent = false;
 223               		.loc 1 222 33 view .LVU56
 224 00be 88E0      		ldi r24,lo8(8)
 225               	.LVL5:
 222:PedalCom.cpp  **** 	TX_CommandQueue[TxHead].sent = false;
 226               		.loc 1 222 33 view .LVU57
 227 00c0 E89F      		mul r30,r24
 228 00c2 F001      		movw r30,r0
 229 00c4 1124      		clr __zero_reg__
 230 00c6 E050      		subi r30,lo8(-(TX_CommandQueue))
 231 00c8 F040      		sbci r31,hi8(-(TX_CommandQueue))
 232 00ca 84E0      		ldi r24,lo8(4)
 233 00cc 860F      		add r24,r22
 234 00ce 8183      		std Z+1,r24
 223:PedalCom.cpp  **** 	TX_CommandQueue[TxHead].acked = false;
 235               		.loc 1 223 2 is_stmt 1 view .LVU58
 223:PedalCom.cpp  **** 	TX_CommandQueue[TxHead].acked = false;
 236               		.loc 1 223 18 is_stmt 0 view .LVU59
 237 00d0 E091 0000 		lds r30,TxHead
 223:PedalCom.cpp  **** 	TX_CommandQueue[TxHead].acked = false;
 238               		.loc 1 223 31 view .LVU60
 239 00d4 28E0      		ldi r18,lo8(8)
 240 00d6 E29F      		mul r30,r18
 241 00d8 F001      		movw r30,r0
 242 00da 1124      		clr __zero_reg__
 243 00dc E050      		subi r30,lo8(-(TX_CommandQueue))
 244 00de F040      		sbci r31,hi8(-(TX_CommandQueue))
 245 00e0 1682      		std Z+6,__zero_reg__
 224:PedalCom.cpp  **** 	
 246               		.loc 1 224 2 is_stmt 1 view .LVU61
 224:PedalCom.cpp  **** 	
 247               		.loc 1 224 18 is_stmt 0 view .LVU62
 248 00e2 E091 0000 		lds r30,TxHead
 224:PedalCom.cpp  **** 	
 249               		.loc 1 224 32 view .LVU63
 250 00e6 88E0      		ldi r24,lo8(8)
 251 00e8 E89F      		mul r30,r24
 252 00ea F001      		movw r30,r0
 253 00ec 1124      		clr __zero_reg__
 254 00ee E050      		subi r30,lo8(-(TX_CommandQueue))
 255 00f0 F040      		sbci r31,hi8(-(TX_CommandQueue))
 256 00f2 1782      		std Z+7,__zero_reg__
 226:PedalCom.cpp  **** 	{
 257               		.loc 1 226 2 is_stmt 1 view .LVU64
 258               	.LVL6:
 226:PedalCom.cpp  **** 	{
 259               		.loc 1 226 2 is_stmt 0 view .LVU65
 260 00f4 DA01      		movw r26,r20
 224:PedalCom.cpp  **** 	
 261               		.loc 1 224 32 view .LVU66
 262 00f6 30E0      		ldi r19,0
 263 00f8 20E0      		ldi r18,0
 264               	.LVL7:
 265               	.L11:
 266               	.LBB4:
 226:PedalCom.cpp  **** 	{
 267               		.loc 1 226 24 is_stmt 1 discriminator 3 view .LVU67
 268 00fa 2617      		cp r18,r22
 269 00fc 00F4      		brsh .L10
 228:PedalCom.cpp  **** 	}
 270               		.loc 1 228 3 discriminator 2 view .LVU68
 228:PedalCom.cpp  **** 	}
 271               		.loc 1 228 19 is_stmt 0 discriminator 2 view .LVU69
 272 00fe E091 0000 		lds r30,TxHead
 228:PedalCom.cpp  **** 	}
 273               		.loc 1 228 42 discriminator 2 view .LVU70
 274 0102 8D91      		ld r24,X+
 228:PedalCom.cpp  **** 	}
 275               		.loc 1 228 35 discriminator 2 view .LVU71
 276 0104 48E0      		ldi r20,lo8(8)
 277 0106 E49F      		mul r30,r20
 278 0108 F001      		movw r30,r0
 279 010a 1124      		clr __zero_reg__
 280 010c E050      		subi r30,lo8(-(TX_CommandQueue))
 281 010e F040      		sbci r31,hi8(-(TX_CommandQueue))
 282 0110 E20F      		add r30,r18
 283 0112 F31F      		adc r31,r19
 284 0114 8283      		std Z+2,r24
 226:PedalCom.cpp  **** 	{
 285               		.loc 1 226 2 is_stmt 1 discriminator 2 view .LVU72
 286               	.LVL8:
 226:PedalCom.cpp  **** 	{
 287               		.loc 1 226 2 is_stmt 0 discriminator 2 view .LVU73
 288 0116 2F5F      		subi r18,-1
 289 0118 3F4F      		sbci r19,-1
 290               	.LVL9:
 226:PedalCom.cpp  **** 	{
 291               		.loc 1 226 2 discriminator 2 view .LVU74
 292 011a 00C0      		rjmp .L11
 293               	.L10:
 226:PedalCom.cpp  **** 	{
 294               		.loc 1 226 2 discriminator 2 view .LVU75
 295               	.LBE4:
 232:PedalCom.cpp  **** 	
 296               		.loc 1 232 2 is_stmt 1 view .LVU76
 232:PedalCom.cpp  **** 	
 297               		.loc 1 232 9 is_stmt 0 view .LVU77
 298 011c 9093 0000 		sts TxHead,r25
 234:PedalCom.cpp  **** }
 299               		.loc 1 234 2 is_stmt 1 view .LVU78
 234:PedalCom.cpp  **** }
 300               		.loc 1 234 9 is_stmt 0 view .LVU79
 301 0120 81E0      		ldi r24,lo8(1)
 302 0122 0895      		ret
 303               	.LVL10:
 304               	.L12:
 218:PedalCom.cpp  **** 	
 305               		.loc 1 218 10 view .LVU80
 306 0124 80E0      		ldi r24,0
 307               	.LVL11:
 308               	/* epilogue start */
 235:PedalCom.cpp  **** 
 309               		.loc 1 235 1 view .LVU81
 310 0126 0895      		ret
 311               		.cfi_endproc
 312               	.LFE8:
 314               	.global	_Z19PedalCom_PutCommandv
 316               	_Z19PedalCom_PutCommandv:
 317               	.LFB9:
 239:PedalCom.cpp  **** 	/* Only transmit new command if previous one got an ACK */
 318               		.loc 1 239 1 is_stmt 1 view -0
 319               		.cfi_startproc
 320 0128 CF93      		push r28
 321               	.LCFI0:
 322               		.cfi_def_cfa_offset 3
 323               		.cfi_offset 28, -2
 324               	/* prologue: function */
 325               	/* frame size = 0 */
 326               	/* stack size = 1 */
 327               	.L__stack_usage = 1
 241:PedalCom.cpp  **** 	{
 328               		.loc 1 241 2 view .LVU83
 329               	.LBB5:
 241:PedalCom.cpp  **** 	{
 330               		.loc 1 241 22 is_stmt 0 view .LVU84
 331 012a E091 0000 		lds r30,TxTail
 241:PedalCom.cpp  **** 	{
 332               		.loc 1 241 30 view .LVU85
 333 012e 88E0      		ldi r24,lo8(8)
 334 0130 E89F      		mul r30,r24
 335 0132 F001      		movw r30,r0
 336 0134 1124      		clr __zero_reg__
 337 0136 E050      		subi r30,lo8(-(TX_CommandQueue))
 338 0138 F040      		sbci r31,hi8(-(TX_CommandQueue))
 339 013a 8781      		ldd r24,Z+7
 241:PedalCom.cpp  **** 	{
 340               		.loc 1 241 2 view .LVU86
 341 013c 8823      		tst r24
 342 013e 01F0      		breq .L14
 244:PedalCom.cpp  **** 	}
 343               		.loc 1 244 3 is_stmt 1 view .LVU87
 244:PedalCom.cpp  **** 	}
 344               		.loc 1 244 25 is_stmt 0 view .LVU88
 345 0140 8091 0000 		lds r24,TxTail
 244:PedalCom.cpp  **** 	}
 346               		.loc 1 244 20 view .LVU89
 347 0144 8F5F      		subi r24,lo8(-(1))
 244:PedalCom.cpp  **** 	}
 348               		.loc 1 244 25 view .LVU90
 349 0146 8770      		andi r24,lo8(7)
 244:PedalCom.cpp  **** 	}
 350               		.loc 1 244 10 view .LVU91
 351 0148 8093 0000 		sts TxTail,r24
 352               	.L13:
 353               	/* epilogue start */
 354               	.LBE5:
 272:PedalCom.cpp  **** 
 355               		.loc 1 272 1 view .LVU92
 356 014c CF91      		pop r28
 357 014e 0895      		ret
 358               	.L14:
 246:PedalCom.cpp  **** 	{
 359               		.loc 1 246 7 is_stmt 1 view .LVU93
 360               	.LBB9:
 361               	.LBB6:
 246:PedalCom.cpp  **** 	{
 362               		.loc 1 246 29 is_stmt 0 view .LVU94
 363 0150 E091 0000 		lds r30,TxTail
 246:PedalCom.cpp  **** 	{
 364               		.loc 1 246 37 view .LVU95
 365 0154 88E0      		ldi r24,lo8(8)
 366 0156 E89F      		mul r30,r24
 367 0158 F001      		movw r30,r0
 368 015a 1124      		clr __zero_reg__
 369 015c E050      		subi r30,lo8(-(TX_CommandQueue))
 370 015e F040      		sbci r31,hi8(-(TX_CommandQueue))
 371 0160 8681      		ldd r24,Z+6
 246:PedalCom.cpp  **** 	{
 372               		.loc 1 246 7 view .LVU96
 373 0162 8111      		cpse r24,__zero_reg__
 374 0164 00C0      		rjmp .L13
 375               	.LBB7:
 249:PedalCom.cpp  **** 		UART0_QueueChar((unsigned char)TX_CommandQueue[TxTail].length);
 376               		.loc 1 249 3 is_stmt 1 view .LVU97
 249:PedalCom.cpp  **** 		UART0_QueueChar((unsigned char)TX_CommandQueue[TxTail].length);
 377               		.loc 1 249 18 is_stmt 0 view .LVU98
 378 0166 8FE5      		ldi r24,lo8(95)
 379 0168 0E94 0000 		call _Z15UART0_QueueCharh
 380               	.LVL12:
 250:PedalCom.cpp  **** 		UART0_QueueChar((unsigned char)TX_CommandQueue[TxTail].command);
 381               		.loc 1 250 3 is_stmt 1 view .LVU99
 250:PedalCom.cpp  **** 		UART0_QueueChar((unsigned char)TX_CommandQueue[TxTail].command);
 382               		.loc 1 250 50 is_stmt 0 view .LVU100
 383 016c E091 0000 		lds r30,TxTail
 250:PedalCom.cpp  **** 		UART0_QueueChar((unsigned char)TX_CommandQueue[TxTail].command);
 384               		.loc 1 250 58 view .LVU101
 385 0170 88E0      		ldi r24,lo8(8)
 386 0172 E89F      		mul r30,r24
 387 0174 F001      		movw r30,r0
 388 0176 1124      		clr __zero_reg__
 389 0178 E050      		subi r30,lo8(-(TX_CommandQueue))
 390 017a F040      		sbci r31,hi8(-(TX_CommandQueue))
 391 017c 8181      		ldd r24,Z+1
 250:PedalCom.cpp  **** 		UART0_QueueChar((unsigned char)TX_CommandQueue[TxTail].command);
 392               		.loc 1 250 18 view .LVU102
 393 017e 0E94 0000 		call _Z15UART0_QueueCharh
 394               	.LVL13:
 251:PedalCom.cpp  **** 		
 395               		.loc 1 251 3 is_stmt 1 view .LVU103
 251:PedalCom.cpp  **** 		
 396               		.loc 1 251 50 is_stmt 0 view .LVU104
 397 0182 E091 0000 		lds r30,TxTail
 251:PedalCom.cpp  **** 		
 398               		.loc 1 251 58 view .LVU105
 399 0186 88E0      		ldi r24,lo8(8)
 400 0188 E89F      		mul r30,r24
 401 018a F001      		movw r30,r0
 402 018c 1124      		clr __zero_reg__
 403 018e E050      		subi r30,lo8(-(TX_CommandQueue))
 404 0190 F040      		sbci r31,hi8(-(TX_CommandQueue))
 405 0192 8081      		ld r24,Z
 251:PedalCom.cpp  **** 		
 406               		.loc 1 251 18 view .LVU106
 407 0194 0E94 0000 		call _Z15UART0_QueueCharh
 408               	.LVL14:
 253:PedalCom.cpp  **** 		{
 409               		.loc 1 253 3 is_stmt 1 view .LVU107
 410               	.LBB8:
 253:PedalCom.cpp  **** 		{
 411               		.loc 1 253 16 is_stmt 0 view .LVU108
 412 0198 C0E0      		ldi r28,0
 413               	.LVL15:
 414               	.L17:
 253:PedalCom.cpp  **** 		{
 415               		.loc 1 253 25 is_stmt 1 discriminator 3 view .LVU109
 253:PedalCom.cpp  **** 		{
 416               		.loc 1 253 23 is_stmt 0 discriminator 3 view .LVU110
 417 019a 2C2F      		mov r18,r28
 418 019c 30E0      		ldi r19,0
 253:PedalCom.cpp  **** 		{
 419               		.loc 1 253 44 discriminator 3 view .LVU111
 420 019e A091 0000 		lds r26,TxTail
 253:PedalCom.cpp  **** 		{
 421               		.loc 1 253 52 discriminator 3 view .LVU112
 422 01a2 88E0      		ldi r24,lo8(8)
 423 01a4 A89F      		mul r26,r24
 424 01a6 D001      		movw r26,r0
 425 01a8 1124      		clr __zero_reg__
 426 01aa A050      		subi r26,lo8(-(TX_CommandQueue))
 427 01ac B040      		sbci r27,hi8(-(TX_CommandQueue))
 428 01ae 1196      		adiw r26,1
 429 01b0 8C91      		ld r24,X
 253:PedalCom.cpp  **** 		{
 430               		.loc 1 253 59 discriminator 3 view .LVU113
 431 01b2 8450      		subi r24,4
 432 01b4 990B      		sbc r25,r25
 253:PedalCom.cpp  **** 		{
 433               		.loc 1 253 25 discriminator 3 view .LVU114
 434 01b6 2817      		cp r18,r24
 435 01b8 3907      		cpc r19,r25
 436 01ba 04F4      		brge .L16
 255:PedalCom.cpp  **** 		}
 437               		.loc 1 255 4 is_stmt 1 discriminator 2 view .LVU115
 255:PedalCom.cpp  **** 		}
 438               		.loc 1 255 51 is_stmt 0 discriminator 2 view .LVU116
 439 01bc E091 0000 		lds r30,TxTail
 255:PedalCom.cpp  **** 		}
 440               		.loc 1 255 65 discriminator 2 view .LVU117
 441 01c0 88E0      		ldi r24,lo8(8)
 442 01c2 E89F      		mul r30,r24
 443 01c4 F001      		movw r30,r0
 444 01c6 1124      		clr __zero_reg__
 445 01c8 E050      		subi r30,lo8(-(TX_CommandQueue))
 446 01ca F040      		sbci r31,hi8(-(TX_CommandQueue))
 447 01cc E20F      		add r30,r18
 448 01ce F31F      		adc r31,r19
 449 01d0 8281      		ldd r24,Z+2
 255:PedalCom.cpp  **** 		}
 450               		.loc 1 255 19 discriminator 2 view .LVU118
 451 01d2 0E94 0000 		call _Z15UART0_QueueCharh
 452               	.LVL16:
 253:PedalCom.cpp  **** 		{
 453               		.loc 1 253 3 is_stmt 1 discriminator 2 view .LVU119
 454 01d6 CF5F      		subi r28,lo8(-(1))
 455               	.LVL17:
 253:PedalCom.cpp  **** 		{
 456               		.loc 1 253 3 is_stmt 0 discriminator 2 view .LVU120
 457 01d8 00C0      		rjmp .L17
 458               	.LVL18:
 459               	.L16:
 253:PedalCom.cpp  **** 		{
 460               		.loc 1 253 3 discriminator 2 view .LVU121
 461               	.LBE8:
 258:PedalCom.cpp  **** 		
 462               		.loc 1 258 3 is_stmt 1 view .LVU122
 258:PedalCom.cpp  **** 		
 463               		.loc 1 258 18 is_stmt 0 view .LVU123
 464 01da 8FEE      		ldi r24,lo8(-17)
 465 01dc 0E94 0000 		call _Z15UART0_QueueCharh
 466               	.LVL19:
 261:PedalCom.cpp  **** 		{
 467               		.loc 1 261 3 is_stmt 1 view .LVU124
 261:PedalCom.cpp  **** 		{
 468               		.loc 1 261 30 is_stmt 0 view .LVU125
 469 01e0 8091 0000 		lds r24,PedalCom_DelayTXOvfCnt
 261:PedalCom.cpp  **** 		{
 470               		.loc 1 261 3 view .LVU126
 471 01e4 8111      		cpse r24,__zero_reg__
 472 01e6 00C0      		rjmp .L18
 264:PedalCom.cpp  **** 		}
 473               		.loc 1 264 4 is_stmt 1 view .LVU127
 264:PedalCom.cpp  **** 		}
 474               		.loc 1 264 25 is_stmt 0 view .LVU128
 475 01e8 81E0      		ldi r24,lo8(1)
 476 01ea 8093 0000 		sts PedalCom_DelayTxFlag,r24
 477               	.L18:
 267:PedalCom.cpp  **** 		
 478               		.loc 1 267 3 is_stmt 1 view .LVU129
 267:PedalCom.cpp  **** 		
 479               		.loc 1 267 19 is_stmt 0 view .LVU130
 480 01ee E091 0000 		lds r30,TxTail
 267:PedalCom.cpp  **** 		
 481               		.loc 1 267 32 view .LVU131
 482 01f2 88E0      		ldi r24,lo8(8)
 483 01f4 E89F      		mul r30,r24
 484 01f6 F001      		movw r30,r0
 485 01f8 1124      		clr __zero_reg__
 486 01fa E050      		subi r30,lo8(-(TX_CommandQueue))
 487 01fc F040      		sbci r31,hi8(-(TX_CommandQueue))
 488 01fe 81E0      		ldi r24,lo8(1)
 489 0200 8683      		std Z+6,r24
 270:PedalCom.cpp  **** 	}
 490               		.loc 1 270 3 is_stmt 1 view .LVU132
 270:PedalCom.cpp  **** 	}
 491               		.loc 1 270 34 is_stmt 0 view .LVU133
 492 0202 81E0      		ldi r24,lo8(1)
 493 0204 90E0      		ldi r25,0
 494 0206 9093 0000 		sts PedalCom_ResponseTimeoutOvfCnt+1,r25
 495 020a 8093 0000 		sts PedalCom_ResponseTimeoutOvfCnt,r24
 496               	.LBE7:
 497               	.LBE6:
 498               	.LBE9:
 272:PedalCom.cpp  **** 
 499               		.loc 1 272 1 view .LVU134
 500 020e 00C0      		rjmp .L13
 501               		.cfi_endproc
 502               	.LFE9:
 504               	.global	_Z26PedalCom_PrepareRetransmitv
 506               	_Z26PedalCom_PrepareRetransmitv:
 507               	.LFB10:
 276:PedalCom.cpp  **** 	if (RetransmitCnt < MAX_RETRANSMITS)
 508               		.loc 1 276 1 is_stmt 1 view -0
 509               		.cfi_startproc
 510               	/* prologue: function */
 511               	/* frame size = 0 */
 512               	/* stack size = 0 */
 513               	.L__stack_usage = 0
 277:PedalCom.cpp  **** 	{
 514               		.loc 1 277 2 view .LVU136
 277:PedalCom.cpp  **** 	{
 515               		.loc 1 277 20 is_stmt 0 view .LVU137
 516 0210 8091 0000 		lds r24,RetransmitCnt
 277:PedalCom.cpp  **** 	{
 517               		.loc 1 277 2 view .LVU138
 518 0214 8530      		cpi r24,lo8(5)
 519 0216 00F4      		brsh .L19
 520               	.LBB12:
 521               	.LBI12:
 275:PedalCom.cpp  **** {
 522               		.loc 1 275 6 is_stmt 1 view .LVU139
 523               	.LBB13:
 279:PedalCom.cpp  **** 		
 524               		.loc 1 279 3 view .LVU140
 279:PedalCom.cpp  **** 		
 525               		.loc 1 279 16 is_stmt 0 view .LVU141
 526 0218 8091 0000 		lds r24,RetransmitCnt
 527 021c 8F5F      		subi r24,lo8(-(1))
 528 021e 8093 0000 		sts RetransmitCnt,r24
 282:PedalCom.cpp  **** 	}
 529               		.loc 1 282 3 is_stmt 1 view .LVU142
 282:PedalCom.cpp  **** 	}
 530               		.loc 1 282 19 is_stmt 0 view .LVU143
 531 0222 E091 0000 		lds r30,TxTail
 282:PedalCom.cpp  **** 	}
 532               		.loc 1 282 32 view .LVU144
 533 0226 88E0      		ldi r24,lo8(8)
 534 0228 E89F      		mul r30,r24
 535 022a F001      		movw r30,r0
 536 022c 1124      		clr __zero_reg__
 537 022e E050      		subi r30,lo8(-(TX_CommandQueue))
 538 0230 F040      		sbci r31,hi8(-(TX_CommandQueue))
 539 0232 1682      		std Z+6,__zero_reg__
 540               	.L19:
 541               	/* epilogue start */
 542               	.LBE13:
 543               	.LBE12:
 284:PedalCom.cpp  **** 
 544               		.loc 1 284 1 view .LVU145
 545 0234 0895      		ret
 546               		.cfi_endproc
 547               	.LFE10:
 549               	.global	_Z16PedalCom_Receivev
 551               	_Z16PedalCom_Receivev:
 552               	.LFB6:
 105:PedalCom.cpp  **** 	static uint8_t RX_ByteCnt = 0;
 553               		.loc 1 105 1 is_stmt 1 view -0
 554               		.cfi_startproc
 555               	/* prologue: function */
 556               	/* frame size = 0 */
 557               	/* stack size = 0 */
 558               	.L__stack_usage = 0
 106:PedalCom.cpp  **** 	
 559               		.loc 1 106 2 view .LVU147
 110:PedalCom.cpp  **** 	{
 560               		.loc 1 110 2 view .LVU148
 110:PedalCom.cpp  **** 	{
 561               		.loc 1 110 29 is_stmt 0 view .LVU149
 562 0236 8091 0000 		lds r24,PedalCom_DelayTXOvfCnt
 110:PedalCom.cpp  **** 	{
 563               		.loc 1 110 2 view .LVU150
 564 023a 8823      		tst r24
 565 023c 01F0      		breq .L22
 112:PedalCom.cpp  **** 	}
 566               		.loc 1 112 3 is_stmt 1 view .LVU151
 112:PedalCom.cpp  **** 	}
 567               		.loc 1 112 26 is_stmt 0 view .LVU152
 568 023e 81E0      		ldi r24,lo8(1)
 569 0240 8093 0000 		sts PedalCom_DelayTXOvfCnt,r24
 570               	.L22:
 116:PedalCom.cpp  **** 	RX_ByteCnt++;
 571               		.loc 1 116 2 is_stmt 1 view .LVU153
 116:PedalCom.cpp  **** 	RX_ByteCnt++;
 572               		.loc 1 116 39 is_stmt 0 view .LVU154
 573 0244 0E94 0000 		call _Z13UART0_GetCharv
 574               	.LVL20:
 575 0248 982F      		mov r25,r24
 116:PedalCom.cpp  **** 	RX_ByteCnt++;
 576               		.loc 1 116 12 view .LVU155
 577 024a 8091 0000 		lds r24,_ZZ16PedalCom_ReceivevE10RX_ByteCnt
 578 024e E82F      		mov r30,r24
 579 0250 F0E0      		ldi r31,0
 116:PedalCom.cpp  **** 	RX_ByteCnt++;
 580               		.loc 1 116 24 view .LVU156
 581 0252 E050      		subi r30,lo8(-(RX_Buffer))
 582 0254 F040      		sbci r31,hi8(-(RX_Buffer))
 583 0256 9083      		st Z,r25
 117:PedalCom.cpp  **** 	
 584               		.loc 1 117 2 is_stmt 1 view .LVU157
 117:PedalCom.cpp  **** 	
 585               		.loc 1 117 12 is_stmt 0 view .LVU158
 586 0258 8F5F      		subi r24,lo8(-(1))
 587 025a 8093 0000 		sts _ZZ16PedalCom_ReceivevE10RX_ByteCnt,r24
 120:PedalCom.cpp  **** 	{
 588               		.loc 1 120 2 is_stmt 1 view .LVU159
 589               	.LBB14:
 590 025e 8130      		cpi r24,lo8(1)
 591 0260 01F4      		brne .L23
 122:PedalCom.cpp  **** 		
 592               		.loc 1 122 3 view .LVU160
 122:PedalCom.cpp  **** 		
 593               		.loc 1 122 34 is_stmt 0 view .LVU161
 594 0262 1092 0000 		sts PedalCom_ResponseTimeoutOvfCnt+1,__zero_reg__
 595 0266 1092 0000 		sts PedalCom_ResponseTimeoutOvfCnt,__zero_reg__
 124:PedalCom.cpp  **** 		{
 596               		.loc 1 124 3 is_stmt 1 view .LVU162
 124:PedalCom.cpp  **** 		{
 597               		.loc 1 124 29 is_stmt 0 view .LVU163
 598 026a 9091 0000 		lds r25,RX_Buffer
 124:PedalCom.cpp  **** 		{
 599               		.loc 1 124 3 view .LVU164
 600 026e 9F35      		cpi r25,lo8(95)
 601 0270 01F4      		brne .L24
 126:PedalCom.cpp  **** 		}
 602               		.loc 1 126 4 is_stmt 1 view .LVU165
 126:PedalCom.cpp  **** 		}
 603               		.loc 1 126 36 is_stmt 0 view .LVU166
 604 0272 81E0      		ldi r24,lo8(1)
 605 0274 90E0      		ldi r25,0
 606 0276 9093 0000 		sts PedalCom_FullFrameTimeoutOvfCnt+1,r25
 607 027a 8093 0000 		sts PedalCom_FullFrameTimeoutOvfCnt,r24
 608 027e 0895      		ret
 609               	.L24:
 130:PedalCom.cpp  **** 			PedalCom_DelayTXOvfCnt = 1;	// Start/reset Delay TX counter in case a new message is in queue to
 610               		.loc 1 130 4 is_stmt 1 view .LVU167
 130:PedalCom.cpp  **** 			PedalCom_DelayTXOvfCnt = 1;	// Start/reset Delay TX counter in case a new message is in queue to
 611               		.loc 1 130 15 is_stmt 0 view .LVU168
 612 0280 1092 0000 		sts _ZZ16PedalCom_ReceivevE10RX_ByteCnt,__zero_reg__
 131:PedalCom.cpp  **** 				
 613               		.loc 1 131 4 is_stmt 1 view .LVU169
 131:PedalCom.cpp  **** 				
 614               		.loc 1 131 27 is_stmt 0 view .LVU170
 615 0284 8093 0000 		sts PedalCom_DelayTXOvfCnt,r24
 133:PedalCom.cpp  **** 			{
 616               		.loc 1 133 4 is_stmt 1 view .LVU171
 133:PedalCom.cpp  **** 			{
 617               		.loc 1 133 30 is_stmt 0 view .LVU172
 618 0288 9091 0000 		lds r25,RX_Buffer
 133:PedalCom.cpp  **** 			{
 619               		.loc 1 133 4 view .LVU173
 620 028c 9C3A      		cpi r25,lo8(-84)
 621 028e 01F4      		brne .L26
 135:PedalCom.cpp  **** 				TX_CommandQueue[TxTail].acked = true;
 622               		.loc 1 135 5 is_stmt 1 view .LVU174
 135:PedalCom.cpp  **** 				TX_CommandQueue[TxTail].acked = true;
 623               		.loc 1 135 19 is_stmt 0 view .LVU175
 624 0290 1092 0000 		sts RetransmitCnt,__zero_reg__
 136:PedalCom.cpp  **** 				
 625               		.loc 1 136 5 is_stmt 1 view .LVU176
 136:PedalCom.cpp  **** 				
 626               		.loc 1 136 21 is_stmt 0 view .LVU177
 627 0294 E091 0000 		lds r30,TxTail
 136:PedalCom.cpp  **** 				
 628               		.loc 1 136 35 view .LVU178
 629 0298 48E0      		ldi r20,lo8(8)
 630 029a E49F      		mul r30,r20
 631 029c F001      		movw r30,r0
 632 029e 1124      		clr __zero_reg__
 633 02a0 E050      		subi r30,lo8(-(TX_CommandQueue))
 634 02a2 F040      		sbci r31,hi8(-(TX_CommandQueue))
 635 02a4 8783      		std Z+7,r24
 138:PedalCom.cpp  **** 				{
 636               		.loc 1 138 5 is_stmt 1 view .LVU179
 138:PedalCom.cpp  **** 				{
 637               		.loc 1 138 10 is_stmt 0 view .LVU180
 638 02a6 9091 0000 		lds r25,PedalCom_ConnectionOpen
 138:PedalCom.cpp  **** 				{
 639               		.loc 1 138 5 view .LVU181
 640 02aa 9111      		cpse r25,__zero_reg__
 641 02ac 00C0      		rjmp .L21
 140:PedalCom.cpp  **** 					
 642               		.loc 1 140 6 is_stmt 1 view .LVU182
 140:PedalCom.cpp  **** 					
 643               		.loc 1 140 30 is_stmt 0 view .LVU183
 644 02ae 8093 0000 		sts PedalCom_ConnectionOpen,r24
 143:PedalCom.cpp  **** 				}
 645               		.loc 1 143 6 is_stmt 1 view .LVU184
 143:PedalCom.cpp  **** 				}
 646               		.loc 1 143 18 is_stmt 0 view .LVU185
 647 02b2 82E0      		ldi r24,lo8(2)
 648 02b4 8093 0000 		sts SystemState,r24
 649 02b8 0895      		ret
 650               	.L26:
 146:PedalCom.cpp  **** 			{
 651               		.loc 1 146 9 is_stmt 1 view .LVU186
 146:PedalCom.cpp  **** 			{
 652               		.loc 1 146 35 is_stmt 0 view .LVU187
 653 02ba 8091 0000 		lds r24,RX_Buffer
 146:PedalCom.cpp  **** 			{
 654               		.loc 1 146 9 view .LVU188
 655 02be 8A32      		cpi r24,lo8(42)
 656 02c0 01F0      		breq .+2
 657 02c2 00C0      		rjmp .L21
 148:PedalCom.cpp  **** 			}
 658               		.loc 1 148 5 is_stmt 1 view .LVU189
 148:PedalCom.cpp  **** 			}
 659               		.loc 1 148 31 is_stmt 0 view .LVU190
 660 02c4 0C94 0000 		jmp _Z26PedalCom_PrepareRetransmitv
 661               	.LVL21:
 662               	.L23:
 663               	.LBE14:
 152:PedalCom.cpp  **** 	{
 664               		.loc 1 152 7 is_stmt 1 view .LVU191
 665               	.LBB26:
 666               	.LBB15:
 154:PedalCom.cpp  **** 	}
 667               		.loc 1 154 19 is_stmt 0 view .LVU192
 668 02c8 E091 0000 		lds r30,RxHead
 152:PedalCom.cpp  **** 	{
 669               		.loc 1 152 7 view .LVU193
 670 02cc 8230      		cpi r24,lo8(2)
 671 02ce 01F4      		brne .L29
 154:PedalCom.cpp  **** 	}
 672               		.loc 1 154 3 is_stmt 1 view .LVU194
 154:PedalCom.cpp  **** 	}
 673               		.loc 1 154 61 is_stmt 0 view .LVU195
 674 02d0 8091 0000 		lds r24,RX_Buffer+1
 154:PedalCom.cpp  **** 	}
 675               		.loc 1 154 34 view .LVU196
 676 02d4 98E0      		ldi r25,lo8(8)
 677 02d6 E99F      		mul r30,r25
 678 02d8 F001      		movw r30,r0
 679 02da 1124      		clr __zero_reg__
 680 02dc E050      		subi r30,lo8(-(RX_CommandQueue))
 681 02de F040      		sbci r31,hi8(-(RX_CommandQueue))
 682 02e0 8183      		std Z+1,r24
 683 02e2 0895      		ret
 684               	.L29:
 685               	.LBE15:
 686               	.LBE26:
 156:PedalCom.cpp  **** 	{
 687               		.loc 1 156 7 is_stmt 1 view .LVU197
 688               	.LBB27:
 689               	.LBB24:
 690               	.LBB16:
 156:PedalCom.cpp  **** 	{
 691               		.loc 1 156 49 is_stmt 0 view .LVU198
 692 02e4 48E0      		ldi r20,lo8(8)
 693 02e6 E49F      		mul r30,r20
 694 02e8 F001      		movw r30,r0
 695 02ea 1124      		clr __zero_reg__
 696 02ec E050      		subi r30,lo8(-(RX_CommandQueue))
 697 02ee F040      		sbci r31,hi8(-(RX_CommandQueue))
 698 02f0 9181      		ldd r25,Z+1
 156:PedalCom.cpp  **** 	{
 699               		.loc 1 156 7 view .LVU199
 700 02f2 8913      		cpse r24,r25
 701 02f4 00C0      		rjmp .L21
 702               	.LBB17:
 158:PedalCom.cpp  **** 		
 703               		.loc 1 158 3 is_stmt 1 view .LVU200
 158:PedalCom.cpp  **** 		
 704               		.loc 1 158 35 is_stmt 0 view .LVU201
 705 02f6 1092 0000 		sts PedalCom_FullFrameTimeoutOvfCnt+1,__zero_reg__
 706 02fa 1092 0000 		sts PedalCom_FullFrameTimeoutOvfCnt,__zero_reg__
 161:PedalCom.cpp  **** 		{
 707               		.loc 1 161 3 is_stmt 1 view .LVU202
 708               	.LBB18:
 161:PedalCom.cpp  **** 		{
 709               		.loc 1 161 33 is_stmt 0 view .LVU203
 710 02fe E091 0000 		lds r30,RxHead
 161:PedalCom.cpp  **** 		{
 711               		.loc 1 161 41 view .LVU204
 712 0302 88E0      		ldi r24,lo8(8)
 713 0304 E89F      		mul r30,r24
 714 0306 F001      		movw r30,r0
 715 0308 1124      		clr __zero_reg__
 716 030a E050      		subi r30,lo8(-(RX_CommandQueue))
 717 030c F040      		sbci r31,hi8(-(RX_CommandQueue))
 718 030e E181      		ldd r30,Z+1
 161:PedalCom.cpp  **** 		{
 719               		.loc 1 161 48 view .LVU205
 720 0310 E150      		subi r30,1
 721 0312 FF0B      		sbc r31,r31
 161:PedalCom.cpp  **** 		{
 722               		.loc 1 161 51 view .LVU206
 723 0314 E050      		subi r30,lo8(-(RX_Buffer))
 724 0316 F040      		sbci r31,hi8(-(RX_Buffer))
 725 0318 8081      		ld r24,Z
 161:PedalCom.cpp  **** 		{
 726               		.loc 1 161 3 view .LVU207
 727 031a 8F3E      		cpi r24,lo8(-17)
 728 031c 01F4      		brne .L30
 729               	.LBB19:
 163:PedalCom.cpp  **** 			
 730               		.loc 1 163 4 is_stmt 1 view .LVU208
 163:PedalCom.cpp  **** 			
 731               		.loc 1 163 20 is_stmt 0 view .LVU209
 732 031e E091 0000 		lds r30,RxHead
 163:PedalCom.cpp  **** 			
 733               		.loc 1 163 65 view .LVU210
 734 0322 8091 0000 		lds r24,RX_Buffer+2
 163:PedalCom.cpp  **** 			
 735               		.loc 1 163 36 view .LVU211
 736 0326 98E0      		ldi r25,lo8(8)
 737 0328 E99F      		mul r30,r25
 738 032a F001      		movw r30,r0
 739 032c 1124      		clr __zero_reg__
 740 032e E050      		subi r30,lo8(-(RX_CommandQueue))
 741 0330 F040      		sbci r31,hi8(-(RX_CommandQueue))
 742 0332 8083      		st Z,r24
 165:PedalCom.cpp  **** 			{
 743               		.loc 1 165 4 is_stmt 1 view .LVU212
 744               	.LVL22:
 745               	.LBB20:
 165:PedalCom.cpp  **** 			{
 746               		.loc 1 165 17 is_stmt 0 view .LVU213
 747 0334 80E0      		ldi r24,0
 748               	.LVL23:
 749               	.L32:
 165:PedalCom.cpp  **** 			{
 750               		.loc 1 165 26 is_stmt 1 discriminator 3 view .LVU214
 165:PedalCom.cpp  **** 			{
 751               		.loc 1 165 24 is_stmt 0 discriminator 3 view .LVU215
 752 0336 282F      		mov r18,r24
 753 0338 30E0      		ldi r19,0
 165:PedalCom.cpp  **** 			{
 754               		.loc 1 165 45 discriminator 3 view .LVU216
 755 033a A091 0000 		lds r26,RxHead
 165:PedalCom.cpp  **** 			{
 756               		.loc 1 165 53 discriminator 3 view .LVU217
 757 033e 48E0      		ldi r20,lo8(8)
 758 0340 A49F      		mul r26,r20
 759 0342 D001      		movw r26,r0
 760 0344 1124      		clr __zero_reg__
 761 0346 A050      		subi r26,lo8(-(RX_CommandQueue))
 762 0348 B040      		sbci r27,hi8(-(RX_CommandQueue))
 763 034a 1196      		adiw r26,1
 764 034c 4C91      		ld r20,X
 165:PedalCom.cpp  **** 			{
 765               		.loc 1 165 60 discriminator 3 view .LVU218
 766 034e 4450      		subi r20,4
 767 0350 550B      		sbc r21,r21
 165:PedalCom.cpp  **** 			{
 768               		.loc 1 165 26 discriminator 3 view .LVU219
 769 0352 2417      		cp r18,r20
 770 0354 3507      		cpc r19,r21
 771 0356 04F4      		brge .L31
 167:PedalCom.cpp  **** 			}
 772               		.loc 1 167 5 is_stmt 1 discriminator 2 view .LVU220
 167:PedalCom.cpp  **** 			}
 773               		.loc 1 167 21 is_stmt 0 discriminator 2 view .LVU221
 774 0358 E091 0000 		lds r30,RxHead
 167:PedalCom.cpp  **** 			}
 775               		.loc 1 167 66 discriminator 2 view .LVU222
 776 035c D901      		movw r26,r18
 777 035e A050      		subi r26,lo8(-(RX_Buffer+3))
 778 0360 B040      		sbci r27,hi8(-(RX_Buffer+3))
 779 0362 9C91      		ld r25,X
 167:PedalCom.cpp  **** 			}
 780               		.loc 1 167 37 discriminator 2 view .LVU223
 781 0364 48E0      		ldi r20,lo8(8)
 782 0366 E49F      		mul r30,r20
 783 0368 F001      		movw r30,r0
 784 036a 1124      		clr __zero_reg__
 785 036c E050      		subi r30,lo8(-(RX_CommandQueue))
 786 036e F040      		sbci r31,hi8(-(RX_CommandQueue))
 787 0370 E20F      		add r30,r18
 788 0372 F31F      		adc r31,r19
 789 0374 9283      		std Z+2,r25
 165:PedalCom.cpp  **** 			{
 790               		.loc 1 165 4 is_stmt 1 discriminator 2 view .LVU224
 791 0376 8F5F      		subi r24,lo8(-(1))
 792               	.LVL24:
 165:PedalCom.cpp  **** 			{
 793               		.loc 1 165 4 is_stmt 0 discriminator 2 view .LVU225
 794 0378 00C0      		rjmp .L32
 795               	.LVL25:
 796               	.L31:
 165:PedalCom.cpp  **** 			{
 797               		.loc 1 165 4 discriminator 2 view .LVU226
 798               	.LBE20:
 171:PedalCom.cpp  **** 				
 799               		.loc 1 171 4 is_stmt 1 view .LVU227
 171:PedalCom.cpp  **** 				
 800               		.loc 1 171 35 is_stmt 0 view .LVU228
 801 037a 8091 0000 		lds r24,RxHead
 171:PedalCom.cpp  **** 				
 802               		.loc 1 171 30 view .LVU229
 803 037e 8F5F      		subi r24,lo8(-(1))
 171:PedalCom.cpp  **** 				
 804               		.loc 1 171 37 view .LVU230
 805 0380 8370      		andi r24,lo8(3)
 806               	.LVL26:
 173:PedalCom.cpp  **** 			{
 807               		.loc 1 173 4 is_stmt 1 view .LVU231
 173:PedalCom.cpp  **** 			{
 808               		.loc 1 173 17 is_stmt 0 view .LVU232
 809 0382 9091 0000 		lds r25,RxTail
 173:PedalCom.cpp  **** 			{
 810               		.loc 1 173 4 view .LVU233
 811 0386 9813      		cpse r25,r24
 180:PedalCom.cpp  **** 			}
 812               		.loc 1 180 5 is_stmt 1 view .LVU234
 180:PedalCom.cpp  **** 			}
 813               		.loc 1 180 12 is_stmt 0 view .LVU235
 814 0388 8093 0000 		sts RxHead,r24
 815               	.LVL27:
 816               	.L33:
 180:PedalCom.cpp  **** 			}
 817               		.loc 1 180 12 view .LVU236
 818               	.LBE19:
 819               	.LBE18:
 190:PedalCom.cpp  **** 	}	
 820               		.loc 1 190 3 is_stmt 1 view .LVU237
 190:PedalCom.cpp  **** 	}	
 821               		.loc 1 190 14 is_stmt 0 view .LVU238
 822 038c 1092 0000 		sts _ZZ16PedalCom_ReceivevE10RX_ByteCnt,__zero_reg__
 823               	.L21:
 824               	/* epilogue start */
 825               	.LBE17:
 826               	.LBE16:
 827               	.LBE24:
 828               	.LBE27:
 192:PedalCom.cpp  **** 
 829               		.loc 1 192 1 view .LVU239
 830 0390 0895      		ret
 831               	.L30:
 832               	.LBB28:
 833               	.LBB25:
 834               	.LBB23:
 835               	.LBB22:
 836               	.LBB21:
 186:PedalCom.cpp  **** 			PedalCom_DelayTXOvfCnt = 1;	// Start/reset Delay TX timer
 837               		.loc 1 186 4 is_stmt 1 view .LVU240
 186:PedalCom.cpp  **** 			PedalCom_DelayTXOvfCnt = 1;	// Start/reset Delay TX timer
 838               		.loc 1 186 19 is_stmt 0 view .LVU241
 839 0392 8AE2      		ldi r24,lo8(42)
 840 0394 0E94 0000 		call _Z15UART0_QueueCharh
 841               	.LVL28:
 187:PedalCom.cpp  **** 		}
 842               		.loc 1 187 4 is_stmt 1 view .LVU242
 187:PedalCom.cpp  **** 		}
 843               		.loc 1 187 27 is_stmt 0 view .LVU243
 844 0398 81E0      		ldi r24,lo8(1)
 845 039a 8093 0000 		sts PedalCom_DelayTXOvfCnt,r24
 846 039e 00C0      		rjmp .L33
 847               	.LBE21:
 848               	.LBE22:
 849               	.LBE23:
 850               	.LBE25:
 851               	.LBE28:
 852               		.cfi_endproc
 853               	.LFE6:
 855               	.global	_Z17PedalCom_Transmitv
 857               	_Z17PedalCom_Transmitv:
 858               	.LFB11:
 288:PedalCom.cpp  **** 	/* Activate Transmit */
 859               		.loc 1 288 1 is_stmt 1 view -0
 860               		.cfi_startproc
 861               	/* prologue: function */
 862               	/* frame size = 0 */
 863               	/* stack size = 0 */
 864               	.L__stack_usage = 0
 290:PedalCom.cpp  **** 	
 865               		.loc 1 290 2 view .LVU245
 866               	.LVL29:
 867               	.LBB29:
 868               	.LBI29:
 297:PedalCom.cpp  **** {
 869               		.loc 1 297 6 view .LVU246
 870               	.LBB30:
 299:PedalCom.cpp  **** 	{
 871               		.loc 1 299 2 view .LVU247
 872 03a0 0E94 0000 		call _Z12Select_RX_TXh.part.0
 873               	.LVL30:
 299:PedalCom.cpp  **** 	{
 874               		.loc 1 299 2 is_stmt 0 view .LVU248
 875               	.LBE30:
 876               	.LBE29:
 293:PedalCom.cpp  **** }
 877               		.loc 1 293 2 is_stmt 1 view .LVU249
 293:PedalCom.cpp  **** }
 878               		.loc 1 293 16 is_stmt 0 view .LVU250
 879 03a4 0C94 0000 		jmp _Z14UART0_PutQueuev
 880               	.LVL31:
 881               		.cfi_endproc
 882               	.LFE11:
 884               	.global	_Z12Select_RX_TXh
 886               	_Z12Select_RX_TXh:
 887               	.LVL32:
 888               	.LFB12:
 298:PedalCom.cpp  **** 	if (dir == DIR_TRANSMIT)
 889               		.loc 1 298 1 is_stmt 1 view -0
 890               		.cfi_startproc
 891               	/* prologue: function */
 892               	/* frame size = 0 */
 893               	/* stack size = 0 */
 894               	.L__stack_usage = 0
 299:PedalCom.cpp  **** 	{
 895               		.loc 1 299 2 view .LVU252
 896 03a8 8111      		cpse r24,__zero_reg__
 897 03aa 00C0      		rjmp .L39
 898 03ac 0C94 0000 		jmp _Z12Select_RX_TXh.part.0
 899               	.LVL33:
 900               	.L39:
 306:PedalCom.cpp  **** 		SELECT_RX_TX_PORT &= ~(SELECT_TX_MASK);
 901               		.loc 1 306 3 view .LVU253
 306:PedalCom.cpp  **** 		SELECT_RX_TX_PORT &= ~(SELECT_TX_MASK);
 902               		.loc 1 306 21 is_stmt 0 view .LVU254
 903 03b0 2B9A      		sbi 0x5,3
 307:PedalCom.cpp  **** 	}
 904               		.loc 1 307 3 is_stmt 1 view .LVU255
 307:PedalCom.cpp  **** 	}
 905               		.loc 1 307 21 is_stmt 0 view .LVU256
 906 03b2 2C98      		cbi 0x5,4
 907               	/* epilogue start */
 908               		.loc 1 309 1 view .LVU257
 909 03b4 0895      		ret
 910               		.cfi_endproc
 911               	.LFE12:
 913               	.global	_Z13PedalCom_Initv
 915               	_Z13PedalCom_Initv:
 916               	.LFB2:
  76:PedalCom.cpp  **** 	/* Set RX/TX Select GPIOs to output */
 917               		.loc 1 76 1 is_stmt 1 view -0
 918               		.cfi_startproc
 919               	/* prologue: function */
 920               	/* frame size = 0 */
 921               	/* stack size = 0 */
 922               	.L__stack_usage = 0
  78:PedalCom.cpp  **** 	
 923               		.loc 1 78 2 view .LVU259
  78:PedalCom.cpp  **** 	
 924               		.loc 1 78 19 is_stmt 0 view .LVU260
 925 03b6 84B1      		in r24,0x4
 926 03b8 8861      		ori r24,lo8(24)
 927 03ba 84B9      		out 0x4,r24
  81:PedalCom.cpp  **** 	
 928               		.loc 1 81 2 is_stmt 1 view .LVU261
  81:PedalCom.cpp  **** 	
 929               		.loc 1 81 14 is_stmt 0 view .LVU262
 930 03bc 81E0      		ldi r24,lo8(1)
 931 03be 0E94 0000 		call _Z12Select_RX_TXh
 932               	.LVL34:
  84:PedalCom.cpp  **** }
 933               		.loc 1 84 2 is_stmt 1 view .LVU263
  84:PedalCom.cpp  **** }
 934               		.loc 1 84 9 is_stmt 0 view .LVU264
 935 03c2 E1EC      		ldi r30,lo8(-63)
 936 03c4 F0E0      		ldi r31,0
 937 03c6 8081      		ld r24,Z
 938 03c8 8064      		ori r24,lo8(64)
 939 03ca 8083      		st Z,r24
 940               	/* epilogue start */
  85:PedalCom.cpp  **** 
 941               		.loc 1 85 1 view .LVU265
 942 03cc 0895      		ret
 943               		.cfi_endproc
 944               	.LFE2:
 946               	.global	__vector_22
 948               	__vector_22:
 949               	.LFB13:
 310:PedalCom.cpp  **** 
 311:PedalCom.cpp  **** /* TX Complete Interrupt ISR */
 312:PedalCom.cpp  **** ISR(USART0_TX_vect)
 313:PedalCom.cpp  **** {
 950               		.loc 1 313 1 is_stmt 1 view -0
 951               		.cfi_startproc
 952 03ce 1F92      		push r1
 953               	.LCFI1:
 954               		.cfi_def_cfa_offset 3
 955               		.cfi_offset 1, -2
 956 03d0 0F92      		push r0
 957               	.LCFI2:
 958               		.cfi_def_cfa_offset 4
 959               		.cfi_offset 0, -3
 960 03d2 0FB6      		in r0,__SREG__
 961 03d4 0F92      		push r0
 962 03d6 1124      		clr __zero_reg__
 963 03d8 2F93      		push r18
 964               	.LCFI3:
 965               		.cfi_def_cfa_offset 5
 966               		.cfi_offset 18, -4
 967 03da 3F93      		push r19
 968               	.LCFI4:
 969               		.cfi_def_cfa_offset 6
 970               		.cfi_offset 19, -5
 971 03dc 4F93      		push r20
 972               	.LCFI5:
 973               		.cfi_def_cfa_offset 7
 974               		.cfi_offset 20, -6
 975 03de 5F93      		push r21
 976               	.LCFI6:
 977               		.cfi_def_cfa_offset 8
 978               		.cfi_offset 21, -7
 979 03e0 6F93      		push r22
 980               	.LCFI7:
 981               		.cfi_def_cfa_offset 9
 982               		.cfi_offset 22, -8
 983 03e2 7F93      		push r23
 984               	.LCFI8:
 985               		.cfi_def_cfa_offset 10
 986               		.cfi_offset 23, -9
 987 03e4 8F93      		push r24
 988               	.LCFI9:
 989               		.cfi_def_cfa_offset 11
 990               		.cfi_offset 24, -10
 991 03e6 9F93      		push r25
 992               	.LCFI10:
 993               		.cfi_def_cfa_offset 12
 994               		.cfi_offset 25, -11
 995 03e8 AF93      		push r26
 996               	.LCFI11:
 997               		.cfi_def_cfa_offset 13
 998               		.cfi_offset 26, -12
 999 03ea BF93      		push r27
 1000               	.LCFI12:
 1001               		.cfi_def_cfa_offset 14
 1002               		.cfi_offset 27, -13
 1003 03ec EF93      		push r30
 1004               	.LCFI13:
 1005               		.cfi_def_cfa_offset 15
 1006               		.cfi_offset 30, -14
 1007 03ee FF93      		push r31
 1008               	.LCFI14:
 1009               		.cfi_def_cfa_offset 16
 1010               		.cfi_offset 31, -15
 1011               	/* prologue: Signal */
 1012               	/* frame size = 0 */
 1013               	/* stack size = 15 */
 1014               	.L__stack_usage = 15
 314:PedalCom.cpp  **** 	/* Deactivate Transmit */
 315:PedalCom.cpp  **** 	Select_RX_TX(DIR_RECEIVE);
 1015               		.loc 1 315 2 view .LVU267
 1016               		.loc 1 315 14 is_stmt 0 view .LVU268
 1017 03f0 81E0      		ldi r24,lo8(1)
 1018 03f2 0E94 0000 		call _Z12Select_RX_TXh
 1019               	.LVL35:
 1020               	/* epilogue start */
 316:PedalCom.cpp  **** }...
 1021               		.loc 1 316 1 view .LVU269
 1022 03f6 FF91      		pop r31
 1023 03f8 EF91      		pop r30
 1024 03fa BF91      		pop r27
 1025 03fc AF91      		pop r26
 1026 03fe 9F91      		pop r25
 1027 0400 8F91      		pop r24
 1028 0402 7F91      		pop r23
 1029 0404 6F91      		pop r22
 1030 0406 5F91      		pop r21
 1031 0408 4F91      		pop r20
 1032 040a 3F91      		pop r19
 1033 040c 2F91      		pop r18
 1034 040e 0F90      		pop r0
 1035 0410 0FBE      		out __SREG__,r0
 1036 0412 0F90      		pop r0
 1037 0414 1F90      		pop r1
 1038 0416 1895      		reti
 1039               		.cfi_endproc
 1040               	.LFE13:
 1042               		.local	_ZZ16PedalCom_ReceivevE10RX_ByteCnt
 1043               		.comm	_ZZ16PedalCom_ReceivevE10RX_ByteCnt,1,1
 1044               	.global	RetransmitCnt
 1045               		.section .bss
 1048               	RetransmitCnt:
 1049 0000 00        		.zero	1
 1050               	.global	TxTail
 1053               	TxTail:
 1054 0001 00        		.zero	1
 1055               	.global	TxHead
 1058               	TxHead:
 1059 0002 00        		.zero	1
 1060               	.global	RxTail
 1063               	RxTail:
 1064 0003 00        		.zero	1
 1065               	.global	RxHead
 1068               	RxHead:
 1069 0004 00        		.zero	1
 1070               	.global	TX_CommandQueue
 1071               		.data
 1074               	TX_CommandQueue:
 1075 0000 00        		.byte	0
 1076 0001 00        		.byte	0
 1077 0002 00        		.string	""
 1078 0003 00        		.string	""
 1079 0004 00        		.string	""
 1080 0005 00        		.string	""
 1081 0006 00        		.byte	0
 1082 0007 01        		.byte	1
 1083 0008 0000 0000 		.zero	56
 1083      0000 0000 
 1083      0000 0000 
 1083      0000 0000 
 1083      0000 0000 
 1084               	.global	RX_CommandQueue
 1085               		.section .bss
 1088               	RX_CommandQueue:
 1089 0005 0000 0000 		.zero	32
 1089      0000 0000 
 1089      0000 0000 
 1089      0000 0000 
 1089      0000 0000 
 1090               	.global	RX_Buffer
 1093               	RX_Buffer:
 1094 0025 0000 0000 		.zero	16
 1094      0000 0000 
 1094      0000 0000 
 1094      0000 0000 
 1095               	.global	PedalCom_ConnectionOpen
 1096               		.data
 1099               	PedalCom_ConnectionOpen:
 1100 0040 01        		.byte	1
 1101               	.global	PedalCom_HeartbeatFlag
 1102               		.section .bss
 1105               	PedalCom_HeartbeatFlag:
 1106 0035 00        		.zero	1
 1107               	.global	PedalCom_HeartbeatOvfCnt
 1108               		.data
 1111               	PedalCom_HeartbeatOvfCnt:
 1112 0041 0100      		.word	1
 1113               	.global	PedalCom_FullFrameTimeoutFlag
 1114               		.section .bss
 1117               	PedalCom_FullFrameTimeoutFlag:
 1118 0036 00        		.zero	1
 1119               	.global	PedalCom_FullFrameTimeoutOvfCnt
 1122               	PedalCom_FullFrameTimeoutOvfCnt:
 1123 0037 0000      		.zero	2
 1124               	.global	PedalCom_ResponseTimeoutFlag
 1127               	PedalCom_ResponseTimeoutFlag:
 1128 0039 00        		.zero	1
 1129               	.global	PedalCom_ResponseTimeoutOvfCnt
 1132               	PedalCom_ResponseTimeoutOvfCnt:
 1133 003a 0000      		.zero	2
 1134               	.global	PedalCom_DelayTXOvfCnt
 1137               	PedalCom_DelayTXOvfCnt:
 1138 003c 00        		.zero	1
 1139               	.global	PedalCom_DelayTxFlag
 1142               	PedalCom_DelayTxFlag:
 1143 003d 00        		.zero	1
 1144               		.text
 1145               	.Letext0:
 1146               		.file 2 "/usr/avr/include/stdint.h"
 1147               		.file 3 "PedalCom.h"
 1148               		.file 4 "System.h"
 1149               		.file 5 "UART.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 PedalCom.cpp
     /tmp/cc2xKTxy.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc2xKTxy.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc2xKTxy.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc2xKTxy.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc2xKTxy.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc2xKTxy.s:11     .text:0000000000000000 _Z12Select_RX_TXh.part.0
     /tmp/cc2xKTxy.s:35     .text:0000000000000006 _Z20PedalCom_RxAvailablev
     /tmp/cc2xKTxy.s:1068   .bss:0000000000000004 RxHead
     /tmp/cc2xKTxy.s:1063   .bss:0000000000000003 RxTail
     /tmp/cc2xKTxy.s:61     .text:0000000000000018 _Z20PedalCom_TxAvailablev
     /tmp/cc2xKTxy.s:1058   .bss:0000000000000002 TxHead
     /tmp/cc2xKTxy.s:1053   .bss:0000000000000001 TxTail
     /tmp/cc2xKTxy.s:87     .text:000000000000002a _Z21PedalCom_FlushTxQueuev
     /tmp/cc2xKTxy.s:1074   .data:0000000000000000 TX_CommandQueue
     /tmp/cc2xKTxy.s:119    .text:0000000000000048 _Z23PedalCom_HandleReceivedv
     /tmp/cc2xKTxy.s:1088   .bss:0000000000000005 RX_CommandQueue
     /tmp/cc2xKTxy.s:1137   .bss:000000000000003c PedalCom_DelayTXOvfCnt
     /tmp/cc2xKTxy.s:186    .text:0000000000000098 _Z21PedalCom_QueueCommand3CMDhPh
     /tmp/cc2xKTxy.s:316    .text:0000000000000128 _Z19PedalCom_PutCommandv
     /tmp/cc2xKTxy.s:1142   .bss:000000000000003d PedalCom_DelayTxFlag
     /tmp/cc2xKTxy.s:1132   .bss:000000000000003a PedalCom_ResponseTimeoutOvfCnt
     /tmp/cc2xKTxy.s:506    .text:0000000000000210 _Z26PedalCom_PrepareRetransmitv
     /tmp/cc2xKTxy.s:1048   .bss:0000000000000000 RetransmitCnt
     /tmp/cc2xKTxy.s:551    .text:0000000000000236 _Z16PedalCom_Receivev
                             .bss:000000000000003e _ZZ16PedalCom_ReceivevE10RX_ByteCnt
     /tmp/cc2xKTxy.s:1093   .bss:0000000000000025 RX_Buffer
     /tmp/cc2xKTxy.s:1122   .bss:0000000000000037 PedalCom_FullFrameTimeoutOvfCnt
     /tmp/cc2xKTxy.s:1099   .data:0000000000000040 PedalCom_ConnectionOpen
     /tmp/cc2xKTxy.s:857    .text:00000000000003a0 _Z17PedalCom_Transmitv
     /tmp/cc2xKTxy.s:886    .text:00000000000003a8 _Z12Select_RX_TXh
     /tmp/cc2xKTxy.s:915    .text:00000000000003b6 _Z13PedalCom_Initv
     /tmp/cc2xKTxy.s:948    .text:00000000000003ce __vector_22
     /tmp/cc2xKTxy.s:1105   .bss:0000000000000035 PedalCom_HeartbeatFlag
     /tmp/cc2xKTxy.s:1111   .data:0000000000000041 PedalCom_HeartbeatOvfCnt
     /tmp/cc2xKTxy.s:1117   .bss:0000000000000036 PedalCom_FullFrameTimeoutFlag
     /tmp/cc2xKTxy.s:1127   .bss:0000000000000039 PedalCom_ResponseTimeoutFlag

UNDEFINED SYMBOLS
_Z25System_HandlePedalCommand3CMDhPh
_Z15UART0_QueueCharh
_Z13UART0_GetCharv
SystemState
_Z14UART0_PutQueuev
__do_copy_data
__do_clear_bss
